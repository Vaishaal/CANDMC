1586-539 (I) Loop (loop index 1) at bench_scala_cholesky.cxx <line 119> was not SIMD vectorized because it contains function calls.
1586-539 (I) Loop (loop index 2) at bench_scala_cholesky.cxx <line 121> was not SIMD vectorized because it contains function calls.
1586-539 (I) Loop (loop index 3) at bench_scala_cholesky.cxx <line 122> was not SIMD vectorized because it contains function calls.
1586-539 (I) Loop (loop index 4) at bench_scala_cholesky.cxx <line 119> was not SIMD vectorized because it contains function calls.
1586-539 (I) Loop (loop index 5) at bench_scala_cholesky.cxx <line 121> was not SIMD vectorized because it contains function calls.
1586-539 (I) Loop (loop index 6) at bench_scala_cholesky.cxx <line 122> was not SIMD vectorized because it contains function calls.
1586-539 (I) Loop (loop index 7) at bench_scala_cholesky.cxx <line 119> was not SIMD vectorized because it contains function calls.
1586-539 (I) Loop (loop index 10) at bench_scala_cholesky.cxx <line 119> was not SIMD vectorized because it contains function calls.
1586-543 (I) <SIMD info> Total number of the innermost loops considered <"4">. Total number of the innermost loops SIMD vectorized <"0">.
    20 |  int main(int argc, char * *argv)
          {
            guard___func__40 = 1;
    27 |    MPI_Init(&argc,&argv);
    28 |    MPI_Comm_size(1140850688,&numPes);
    29 |    MPI_Comm_rank(1140850688,&myRank);
    33 |    (int) log2((double) numPes);
    35 |    if (argc < 4) goto lab_3;
            if (!(argc > 5)) goto lab_2;
          lab_3:
    36 |    if (!(myRank == 0)) goto lab_5;
    37 |    printf("%s [log2_mat_dim] [log2_pe_mat_lda] [log2_blk_dim] [number of iterations]/n",argv[0ll]);
          lab_5:
    38 |    MPI_Abort(1140850688,-1);
    39 |  lab_2:
   286 |    __47 = (int) strtol(argv[1ll],NULL,10);
            __51 = (int) strtol(argv[2ll],NULL,10);
            __55 = (int) strtol(argv[3ll],NULL,10);
    49 |    if (!(argc > 4)) goto lab_7;
   286 |    __59 = (int) strtol(argv[4ll],NULL,10);
   285 |    num_iter = __59;
            goto lab_9;
          lab_7:
    50 |    num_iter = 5;
          lab_9:
    52 |    if (!(myRank == 0)) goto lab_10;
    53 |    printf("PDPOTRF OF SQUARE MATRIX/n");
    54 |    printf("MATRIX DIMENSION IS %d/n",1 << __47);
    55 |    printf("numProcessors - %d/n",numPes);
    56 |    printf("BLOCK DIMENSION IS %d/n",1 << __55);
    57 |    printf("Hey wtf/n");
    58 |    printf("PERFORMING %d ITERATIONS/n",num_iter);
    62 |    printf("WITH DATA=INDEX/n");
    64 |  lab_10:
    66 |    if (1 << __47 < 1 << __51) goto lab_13;
            if (!(0 != (1 << __47) % (1 << __51))) goto lab_12;
          lab_13:
    67 |    if (!(myRank == 0)) goto lab_15;
            printf("array_size_X BAD block_size_X != 0!/n");
          lab_15:
    68 |    MPI_Abort(1140850688,-1);
    69 |  lab_12:
    70 |    if (1 << __47 < 1 << __51) goto lab_18;
            if (!(0 != (1 << __47) % (1 << __51))) goto lab_17;
          lab_18:
    71 |    if (!(myRank == 0)) goto lab_20;
            printf("array_size_Y BAD  block_size_Y != 0!/n");
          lab_20:
    72 |    MPI_Abort(1140850688,-1);
    73 |  lab_17:
    78 |    if (!(myRank == 0)) goto lab_22;
    79 |    printf("NUM X BLOCKS IS %d/n",1 << __47 - __51);
    80 |    printf("NUM Y BLOCKS IS %d/n",1 << __47 - __51);
    81 |  lab_22:
    83 |    if (!(myRank == 0)) goto lab_24;
    85 |    printf("check this num - %d %d",(1 << __47 - __51) * (1 << __47 - __51),1 << __47 - __51);
    86 |  lab_24:
    87 |    if (!(numPes != (1 << __47 - __51) * (1 << __47 - __51))) goto lab_26;
    88 |    if (!(myRank == 0)) goto lab_28;
            printf("NUMBER OF BLOCKS MUST BE EQUAL TO NUMBER OF PROCESSORS/n");
          lab_28:
    89 |    MPI_Abort(1140850688,-1);
    90 |  lab_26:
    92 |    $$FSM1 = myRank;
    93 |    $$FSM0 = myRank;
    96 |    mat_A = malloc((unsigned long long) ((1 << __51) * (1 << __51)) * 8ull);
   104 |    Cblacs_pinfo(&iam,&inprocs)
   105 |    Cblacs_get(-1,0,&icontxt)
   106 |    Cblacs_gridinit(&icontxt,"Row",1 << __47 - __51,1 << __47 - __51)
   109 |    cdescinit(int*, int, int, int, int, int, int, int, int, int*)(&desc_a,1 << __47,1 << __47,1 << __55,1 << __55,0,0,icontxt,1 << __51,&info)
   114 |    if (info == 0) goto lab_32;
            __assert_fail("info==0","bench_scala_cholesky.cxx",114u,&__func__)
            return;
          lab_32:
   118 |    totalTime =  0.0000000000000000E+000;
   119 |    iter = 0;
            if (!(0 < num_iter)) goto lab_35;
            if (!(0 < 1 << __51)) goto lab_68;
            if (!($$FSM0 % (1 << __47 - __51) == $$FSM1 / (1 << __47 - __51))) goto lab_55;
            if (!1) goto lab_54;
            $$CIV2 = 0ll;
            do {   /* id=1 guarded */ /* ~33 */ 
              /* region = 105 */
              /* bump-normalized */
   120 |      srand48((long long) (myRank * 1234))
   121 |      if (!1) goto lab_38;
              $$CIV1 = 0ll;
              do {   /* id=2 guarded */ /* ~36 */ 
                /* region = 104 */
                /* bump-normalized */
   122 |        if (!1) goto lab_41;
                $$CIV0 = 0ll;
                do {   /* id=3 guarded */ /* ~39 */ 
                  /* region = 103 */
                  /* bump-normalized */
   123 |          if (!((int) $$CIV0 == (int) $$CIV1)) goto lab_43;
                  $$TVX.$$.$$RET000 = drand48();
                  $$TVX.$$.__6611 = _fmadd@47((double) (1 << __47), 4.0000000000000000E+000,$$TVX.$$.$$RET000);
                  goto lab_44;
                lab_43:
                  $$TVX.$$.__6611 = drand48();
                lab_44:
                  mat_A[(long long) ((1 << __51) * (int) $$CIV1 + (int) $$CIV0)] = $$TVX.$$.__6611;
   122 |          $$CIV0 = $$CIV0 + 1ll;
                } while ((unsigned long long) $$CIV0 < (unsigned long long) ((long long) (1 << __51)));    /* ~39 */
              lab_41:
   121 |        $$CIV1 = $$CIV1 + 1ll;
              } while ((unsigned long long) $$CIV1 < (unsigned long long) ((long long) (1 << __51)));    /* ~36 */
            lab_38:
   126 |      startTime = MPI_Wtime();
   127 |      cpdpotrf(char, int, double*, int, int, int*, int*)(85u,1 << __47,mat_A,1,1,&desc_a,&info)
   128 |      endTime = MPI_Wtime();
   129 |      if (!(info < 0)) goto lab_46;
   131 |      printf("Bad below!/n");
   132 |      MPI_Abort(1140850688,-1);
   133 |    lab_46:
   134 |      if (!(info > 0)) goto lab_48;
   136 |      printf("Bad above!/n");
   137 |      MPI_Abort(1140850688,-1);
   138 |    lab_48:
   139 |      if (!(info == 0)) goto lab_50;
   141 |      printf("All good!/n");
   142 |    lab_50:
   143 |      totalTime = totalTime + (endTime - startTime);
   119 |      $$CIV2 = $$CIV2 + 1ll;
            } while ((unsigned long long) $$CIV2 < (unsigned long long) ((long long) num_iter));    /* ~33 */
          lab_54:
            goto lab_69;
          lab_55:
            if (!1) goto lab_67;
            $$CIV2 = 0ll;
            do {   /* id=4 guarded */ /* ~57 */ 
              /* region = 108 */
              /* bump-normalized */
   120 |      srand48((long long) (myRank * 1234))
   121 |      if (!1) goto lab_63;
              $$CIV1 = 0ll;
              do {   /* id=5 guarded */ /* ~58 */ 
                /* region = 107 */
                /* bump-normalized */
   122 |        if (!1) goto lab_62;
                $$CIV0 = 0ll;
                do {   /* id=6 guarded */ /* ~59 */ 
                  /* region = 106 */
                  /* bump-normalized */
   123 |          $$TVX.$$.__6622 = drand48();
                  mat_A[(long long) ((1 << __51) * (int) $$CIV1 + (int) $$CIV0)] = $$TVX.$$.__6622;
   122 |          $$CIV0 = $$CIV0 + 1ll;
                } while ((unsigned long long) $$CIV0 < (unsigned long long) ((long long) (1 << __51)));    /* ~59 */
              lab_62:
   121 |        $$CIV1 = $$CIV1 + 1ll;
              } while ((unsigned long long) $$CIV1 < (unsigned long long) ((long long) (1 << __51)));    /* ~58 */
            lab_63:
   126 |      startTime = MPI_Wtime();
   127 |      cpdpotrf(char, int, double*, int, int, int*, int*)(85u,1 << __47,mat_A,1,1,&desc_a,&info)
   128 |      endTime = MPI_Wtime();
   129 |      if (!(info < 0)) goto lab_64;
   131 |      printf("Bad below!/n");
   132 |      MPI_Abort(1140850688,-1);
   133 |    lab_64:
   134 |      if (!(info > 0)) goto lab_65;
   136 |      printf("Bad above!/n");
   137 |      MPI_Abort(1140850688,-1);
   138 |    lab_65:
   139 |      if (!(info == 0)) goto lab_66;
   141 |      printf("All good!/n");
   142 |    lab_66:
   143 |      totalTime = totalTime + (endTime - startTime);
   119 |      $$CIV2 = $$CIV2 + 1ll;
            } while ((unsigned long long) $$CIV2 < (unsigned long long) ((long long) num_iter));    /* ~57 */
          lab_67:
            goto lab_69;
          lab_68:
            if (!($$FSM0 % (1 << __47 - __51) == $$FSM1 / (1 << __47 - __51))) goto lab_81;
            if (!1) goto lab_80;
            $$CIV2 = 0ll;
            do {   /* id=7 guarded */ /* ~70 */ 
              /* region = 109 */
              /* bump-normalized */
   120 |      srand48((long long) (myRank * 1234))
   126 |      $$TVX.$$.startTime33 = MPI_Wtime();
   127 |      cpdpotrf(char, int, double*, int, int, int*, int*)(85u,1 << __47,mat_A,1,1,&desc_a,&info)
   128 |      $$TVX.$$.endTime44 = MPI_Wtime();
   129 |      if (!(info < 0)) goto lab_77;
   131 |      printf("Bad below!/n");
   132 |      MPI_Abort(1140850688,-1);
   133 |    lab_77:
   134 |      if (!(info > 0)) goto lab_78;
   136 |      printf("Bad above!/n");
   137 |      MPI_Abort(1140850688,-1);
   138 |    lab_78:
   139 |      if (!(info == 0)) goto lab_79;
   141 |      printf("All good!/n");
   142 |    lab_79:
   143 |      totalTime = totalTime + ($$TVX.$$.endTime44 - $$TVX.$$.startTime33);
   119 |      $$CIV2 = $$CIV2 + 1ll;
            } while ((unsigned long long) $$CIV2 < (unsigned long long) ((long long) num_iter));    /* ~70 */
          lab_80:
            goto lab_93;
          lab_81:
            if (!1) goto lab_92;
            $$CIV2 = 0ll;
            do {   /* id=10 guarded */ /* ~82 */ 
              /* region = 110 */
              /* bump-normalized */
   120 |      srand48((long long) (myRank * 1234))
   126 |      $$TVX.$$.startTime55 = MPI_Wtime();
   127 |      cpdpotrf(char, int, double*, int, int, int*, int*)(85u,1 << __47,mat_A,1,1,&desc_a,&info)
   128 |      $$TVX.$$.endTime66 = MPI_Wtime();
   129 |      if (!(info < 0)) goto lab_89;
   131 |      printf("Bad below!/n");
   132 |      MPI_Abort(1140850688,-1);
   133 |    lab_89:
   134 |      if (!(info > 0)) goto lab_90;
   136 |      printf("Bad above!/n");
   137 |      MPI_Abort(1140850688,-1);
   138 |    lab_90:
   139 |      if (!(info == 0)) goto lab_91;
   141 |      printf("All good!/n");
   142 |    lab_91:
   143 |      totalTime = totalTime + ($$TVX.$$.endTime66 - $$TVX.$$.startTime55);
   119 |      $$CIV2 = $$CIV2 + 1ll;
            } while ((unsigned long long) $$CIV2 < (unsigned long long) ((long long) num_iter));    /* ~82 */
          lab_92:
          lab_93:
          lab_69:
            iter = (int) ((long long) num_iter);
          lab_35:
   146 |    if (!(myRank == 0)) goto lab_52;
   147 |    printf("Completed %u iterations/n",iter);
   148 |    printf("Time elapsed per iteration: %f/n",totalTime / (double) num_iter);
   149 |    printf("Gigaflops: %f/n",(((( 6.6666666666666662E-001 * (double) (1 << __47)) * (double) (1 << __47)) * (double) (1 << __47)) / (totalTime / (double) num_iter)) *  1.0000000000000000E-009);
   151 |  lab_52:
   153 |    MPI_Finalize();
   154 |    rstr = 0;
            return rstr;
   155 |  } /* function */ 



Source        Source        Loop Id       Action / Information                                      
File          Line                                                                                  
----------    ----------    ----------    ----------------------------------------------------------
         0           119             1    Loop was not SIMD vectorized because it contains 
                                          function calls.
         0           121             2    Loop was not SIMD vectorized because it contains 
                                          function calls.
         0           122             3    Loop was not SIMD vectorized because it contains 
                                          function calls.
         0           119             4    Loop was not SIMD vectorized because it contains 
                                          function calls.
         0           121             5    Loop was not SIMD vectorized because it contains 
                                          function calls.
         0           122             6    Loop was not SIMD vectorized because it contains 
                                          function calls.
         0           119             7    Loop was not SIMD vectorized because it contains 
                                          function calls.
         0           119            10    Loop was not SIMD vectorized because it contains 
                                          function calls.

          void __sinit65535()()
          {
    72 |    std::ios_base::Init::Init()(&__ioinit);
            __cxa_atexit(&__srterm__0(),NULL,&__dso_handle);
            return;
          } /* function */ 


          void __srterm__0()()
          {
    72 |    std::ios_base::Init::~Init()(&__ioinit);
            return;
          } /* function */ 


    20 |  int main(int argc, char * *argv)
          {
            guard___func__40 = 1;
    27 |    MPI_Init(&argc,&argv);
    28 |    MPI_Comm_size(1140850688,&numPes);
    29 |    MPI_Comm_rank(1140850688,&myRank);
    33 |    (int) log2((double) numPes);
    35 |    if (argc < 4) goto lab_3;
            if (!(argc > 5)) goto lab_2;
          lab_3:
    36 |    if (!(myRank == 0)) goto lab_5;
    37 |    printf("%s [log2_mat_dim] [log2_pe_mat_lda] [log2_blk_dim] [number of iterations]/n",argv[0ll]);
          lab_5:
    38 |    MPI_Abort(1140850688,-1);
    39 |  lab_2:
   286 |    __47 = (int) strtol(argv[1ll],NULL,10);
            __51 = (int) strtol(argv[2ll],NULL,10);
            __55 = (int) strtol(argv[3ll],NULL,10);
    49 |    if (!(argc > 4)) goto lab_7;
   286 |    __59 = (int) strtol(argv[4ll],NULL,10);
   285 |    num_iter = __59;
            goto lab_9;
          lab_7:
    50 |    num_iter = 5;
          lab_9:
    52 |    if (!(myRank == 0)) goto lab_10;
    53 |    printf("PDPOTRF OF SQUARE MATRIX/n");
    54 |    printf("MATRIX DIMENSION IS %d/n",1 << __47);
    55 |    printf("numProcessors - %d/n",numPes);
    56 |    printf("BLOCK DIMENSION IS %d/n",1 << __55);
    57 |    printf("Hey wtf/n");
    58 |    printf("PERFORMING %d ITERATIONS/n",num_iter);
    62 |    printf("WITH DATA=INDEX/n");
    64 |  lab_10:
    66 |    if (1 << __47 < 1 << __51) goto lab_13;
            if (!(0 != (1 << __47) % (1 << __51))) goto lab_12;
          lab_13:
    67 |    if (!(myRank == 0)) goto lab_15;
            printf("array_size_X BAD block_size_X != 0!/n");
          lab_15:
    68 |    MPI_Abort(1140850688,-1);
    69 |  lab_12:
    70 |    if (1 << __47 < 1 << __51) goto lab_18;
            if (!(0 != (1 << __47) % (1 << __51))) goto lab_17;
          lab_18:
    71 |    if (!(myRank == 0)) goto lab_20;
            printf("array_size_Y BAD  block_size_Y != 0!/n");
          lab_20:
    72 |    MPI_Abort(1140850688,-1);
    73 |  lab_17:
    78 |    if (!(myRank == 0)) goto lab_22;
    79 |    printf("NUM X BLOCKS IS %d/n",1 << __47 - __51);
    80 |    printf("NUM Y BLOCKS IS %d/n",1 << __47 - __51);
    81 |  lab_22:
    83 |    if (!(myRank == 0)) goto lab_24;
    85 |    printf("check this num - %d %d",(1 << __47 - __51) * (1 << __47 - __51),1 << __47 - __51);
    86 |  lab_24:
    87 |    if (!(numPes != (1 << __47 - __51) * (1 << __47 - __51))) goto lab_26;
    88 |    if (!(myRank == 0)) goto lab_28;
            printf("NUMBER OF BLOCKS MUST BE EQUAL TO NUMBER OF PROCESSORS/n");
          lab_28:
    89 |    MPI_Abort(1140850688,-1);
    90 |  lab_26:
    92 |    $$FSM1 = myRank;
    93 |    $$FSM0 = myRank;
    96 |    mat_A = malloc((unsigned long long) ((1 << __51) * (1 << __51)) * 8ull);
   104 |    Cblacs_pinfo(&iam,&inprocs)
   105 |    Cblacs_get(-1,0,&icontxt)
   106 |    Cblacs_gridinit(&icontxt,"Row",1 << __47 - __51,1 << __47 - __51)
   109 |    cdescinit(int*, int, int, int, int, int, int, int, int, int*)(&desc_a,1 << __47,1 << __47,1 << __55,1 << __55,0,0,icontxt,1 << __51,&info)
   114 |    if (info == 0) goto lab_32;
            __assert_fail("info==0","bench_scala_cholesky.cxx",114u,&__func__)
            return;
          lab_32:
   118 |    totalTime =  0.0000000000000000E+000;
   119 |    iter = 0;
            if (!(0 < num_iter)) goto lab_35;
            if (!(0 < 1 << __51)) goto lab_68;
            if (!($$FSM0 % (1 << __47 - __51) == $$FSM1 / (1 << __47 - __51))) goto lab_55;
            if (!1) goto lab_54;
            $$CIV2 = 0ll;
            do {   /* id=1 guarded */ /* ~33 */ 
              /* region = 105 */
              /* bump-normalized */
   120 |      srand48((long long) (myRank * 1234))
   121 |      if (!1) goto lab_38;
              $$CIV1 = 0ll;
              do {   /* id=2 guarded */ /* ~36 */ 
                /* region = 104 */
                /* bump-normalized */
   122 |        if (!1) goto lab_41;
                $$CIV0 = 0ll;
                do {   /* id=3 guarded */ /* ~39 */ 
                  /* region = 103 */
                  /* bump-normalized */
   123 |          if (!((int) $$CIV0 == (int) $$CIV1)) goto lab_43;
                  $$TVX.$$.$$RET000 = drand48();
                  $$TVX.$$.__6611 = _fmadd@47((double) (1 << __47), 4.0000000000000000E+000,$$TVX.$$.$$RET000);
                  goto lab_44;
                lab_43:
                  $$TVX.$$.__6611 = drand48();
                lab_44:
                  mat_A[(long long) ((1 << __51) * (int) $$CIV1 + (int) $$CIV0)] = $$TVX.$$.__6611;
   122 |          $$CIV0 = $$CIV0 + 1ll;
                } while ((unsigned long long) $$CIV0 < (unsigned long long) ((long long) (1 << __51)));    /* ~39 */
              lab_41:
   121 |        $$CIV1 = $$CIV1 + 1ll;
              } while ((unsigned long long) $$CIV1 < (unsigned long long) ((long long) (1 << __51)));    /* ~36 */
            lab_38:
   126 |      startTime = MPI_Wtime();
   127 |      cpdpotrf(char, int, double*, int, int, int*, int*)(85u,1 << __47,mat_A,1,1,&desc_a,&info)
   128 |      endTime = MPI_Wtime();
   129 |      if (!(info < 0)) goto lab_46;
   131 |      printf("Bad below!/n");
   132 |      MPI_Abort(1140850688,-1);
   133 |    lab_46:
   134 |      if (!(info > 0)) goto lab_48;
   136 |      printf("Bad above!/n");
   137 |      MPI_Abort(1140850688,-1);
   138 |    lab_48:
   139 |      if (!(info == 0)) goto lab_50;
   141 |      printf("All good!/n");
   142 |    lab_50:
   143 |      totalTime = totalTime + (endTime - startTime);
   119 |      $$CIV2 = $$CIV2 + 1ll;
            } while ((unsigned long long) $$CIV2 < (unsigned long long) ((long long) num_iter));    /* ~33 */
          lab_54:
            goto lab_69;
          lab_55:
            if (!1) goto lab_67;
            $$CIV2 = 0ll;
            do {   /* id=4 guarded */ /* ~57 */ 
              /* region = 108 */
              /* bump-normalized */
   120 |      srand48((long long) (myRank * 1234))
   121 |      if (!1) goto lab_63;
              $$CIV1 = 0ll;
              do {   /* id=5 guarded */ /* ~58 */ 
                /* region = 107 */
                /* bump-normalized */
   122 |        if (!1) goto lab_62;
                $$CIV0 = 0ll;
                do {   /* id=6 guarded */ /* ~59 */ 
                  /* region = 106 */
                  /* bump-normalized */
   123 |          $$TVX.$$.__6622 = drand48();
                  mat_A[(long long) ((1 << __51) * (int) $$CIV1 + (int) $$CIV0)] = $$TVX.$$.__6622;
   122 |          $$CIV0 = $$CIV0 + 1ll;
                } while ((unsigned long long) $$CIV0 < (unsigned long long) ((long long) (1 << __51)));    /* ~59 */
              lab_62:
   121 |        $$CIV1 = $$CIV1 + 1ll;
              } while ((unsigned long long) $$CIV1 < (unsigned long long) ((long long) (1 << __51)));    /* ~58 */
            lab_63:
   126 |      startTime = MPI_Wtime();
   127 |      cpdpotrf(char, int, double*, int, int, int*, int*)(85u,1 << __47,mat_A,1,1,&desc_a,&info)
   128 |      endTime = MPI_Wtime();
   129 |      if (!(info < 0)) goto lab_64;
   131 |      printf("Bad below!/n");
   132 |      MPI_Abort(1140850688,-1);
   133 |    lab_64:
   134 |      if (!(info > 0)) goto lab_65;
   136 |      printf("Bad above!/n");
   137 |      MPI_Abort(1140850688,-1);
   138 |    lab_65:
   139 |      if (!(info == 0)) goto lab_66;
   141 |      printf("All good!/n");
   142 |    lab_66:
   143 |      totalTime = totalTime + (endTime - startTime);
   119 |      $$CIV2 = $$CIV2 + 1ll;
            } while ((unsigned long long) $$CIV2 < (unsigned long long) ((long long) num_iter));    /* ~57 */
          lab_67:
            goto lab_69;
          lab_68:
            if (!($$FSM0 % (1 << __47 - __51) == $$FSM1 / (1 << __47 - __51))) goto lab_81;
            if (!1) goto lab_80;
            $$CIV2 = 0ll;
            do {   /* id=7 guarded */ /* ~70 */ 
              /* region = 109 */
              /* bump-normalized */
   120 |      srand48((long long) (myRank * 1234))
   126 |      $$TVX.$$.startTime33 = MPI_Wtime();
   127 |      cpdpotrf(char, int, double*, int, int, int*, int*)(85u,1 << __47,mat_A,1,1,&desc_a,&info)
   128 |      $$TVX.$$.endTime44 = MPI_Wtime();
   129 |      if (!(info < 0)) goto lab_77;
   131 |      printf("Bad below!/n");
   132 |      MPI_Abort(1140850688,-1);
   133 |    lab_77:
   134 |      if (!(info > 0)) goto lab_78;
   136 |      printf("Bad above!/n");
   137 |      MPI_Abort(1140850688,-1);
   138 |    lab_78:
   139 |      if (!(info == 0)) goto lab_79;
   141 |      printf("All good!/n");
   142 |    lab_79:
   143 |      totalTime = totalTime + ($$TVX.$$.endTime44 - $$TVX.$$.startTime33);
   119 |      $$CIV2 = $$CIV2 + 1ll;
            } while ((unsigned long long) $$CIV2 < (unsigned long long) ((long long) num_iter));    /* ~70 */
          lab_80:
            goto lab_93;
          lab_81:
            if (!1) goto lab_92;
            $$CIV2 = 0ll;
            do {   /* id=10 guarded */ /* ~82 */ 
              /* region = 110 */
              /* bump-normalized */
   120 |      srand48((long long) (myRank * 1234))
   126 |      $$TVX.$$.startTime55 = MPI_Wtime();
   127 |      cpdpotrf(char, int, double*, int, int, int*, int*)(85u,1 << __47,mat_A,1,1,&desc_a,&info)
   128 |      $$TVX.$$.endTime66 = MPI_Wtime();
   129 |      if (!(info < 0)) goto lab_89;
   131 |      printf("Bad below!/n");
   132 |      MPI_Abort(1140850688,-1);
   133 |    lab_89:
   134 |      if (!(info > 0)) goto lab_90;
   136 |      printf("Bad above!/n");
   137 |      MPI_Abort(1140850688,-1);
   138 |    lab_90:
   139 |      if (!(info == 0)) goto lab_91;
   141 |      printf("All good!/n");
   142 |    lab_91:
   143 |      totalTime = totalTime + ($$TVX.$$.endTime66 - $$TVX.$$.startTime55);
   119 |      $$CIV2 = $$CIV2 + 1ll;
            } while ((unsigned long long) $$CIV2 < (unsigned long long) ((long long) num_iter));    /* ~82 */
          lab_92:
          lab_93:
          lab_69:
            iter = (int) ((long long) num_iter);
          lab_35:
   146 |    if (!(myRank == 0)) goto lab_52;
   147 |    printf("Completed %u iterations/n",iter);
   148 |    printf("Time elapsed per iteration: %f/n",totalTime / (double) num_iter);
   149 |    printf("Gigaflops: %f/n",(((( 6.6666666666666662E-001 * (double) (1 << __47)) * (double) (1 << __47)) * (double) (1 << __47)) / (totalTime / (double) num_iter)) *  1.0000000000000000E-009);
   151 |  lab_52:
   153 |    MPI_Finalize();
   154 |    rstr = 0;
            return rstr;
   155 |  } /* function */ 


          void __sinit65535()()
          {
    72 |    std::ios_base::Init::Init()(&__ioinit);
            __cxa_atexit(&__srterm__0(),NULL,&__dso_handle);
            return;
          } /* function */ 


          void __srterm__0()()
          {
    72 |    std::ios_base::Init::~Init()(&__ioinit);
            return;
          } /* function */ 


