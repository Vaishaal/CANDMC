1586-539 (I) Loop (loop index 1) at timer.cxx <line 56> was not SIMD vectorized because it contains function calls.
1586-543 (I) <SIMD info> Total number of the innermost loops considered <"1">. Total number of the innermost loops SIMD vectorized <"0">.
1586-539 (I) Loop (loop index 1) at /bgsys/drivers/toolchain/V1R2M4_base/gnu-linux/lib/gcc/powerpc64-bgq-linux/4.4.7/../../../../powerpc64-bgq-linux/include/c++/4.4.7/bits/stl_vector.h <line 533> was not SIMD vectorized because it contains function calls.
1586-543 (I) <SIMD info> Total number of the innermost loops considered <"1">. Total number of the innermost loops SIMD vectorized <"0">.
1586-539 (I) Loop (loop index 1) at /bgsys/drivers/toolchain/V1R2M4_base/gnu-linux/lib/gcc/powerpc64-bgq-linux/4.4.7/../../../../powerpc64-bgq-linux/include/c++/4.4.7/bits/stl_vector.h <line 533> was not SIMD vectorized because it contains function calls.
1586-543 (I) <SIMD info> Total number of the innermost loops considered <"1">. Total number of the innermost loops SIMD vectorized <"0">.
1586-539 (I) Loop (loop index 1) at /bgsys/drivers/toolchain/V1R2M4_base/gnu-linux/lib/gcc/powerpc64-bgq-linux/4.4.7/../../../../powerpc64-bgq-linux/include/c++/4.4.7/bits/stl_vector.h <line 533> was not SIMD vectorized because it contains function calls.
1586-539 (I) Loop (loop index 2) at /bgsys/drivers/toolchain/V1R2M4_base/gnu-linux/lib/gcc/powerpc64-bgq-linux/4.4.7/../../../../powerpc64-bgq-linux/include/c++/4.4.7/bits/stl_vector.h <line 533> was not SIMD vectorized because it contains function calls.
1586-539 (I) Loop (loop index 3) at timer.cxx <line 229> was not SIMD vectorized because it contains function calls.
1586-539 (I) Loop (loop index 4) at timer.cxx <line 203> was not SIMD vectorized because it contains function calls.
1586-539 (I) Loop (loop index 5) at timer.cxx <line 213> was not SIMD vectorized because it contains function calls.
1586-539 (I) Loop (loop index 6) at timer.cxx <line 215> was not SIMD vectorized because it contains function calls.
1586-539 (I) Loop (loop index 7) at /bgsys/drivers/toolchain/V1R2M4_base/gnu-linux/lib/gcc/powerpc64-bgq-linux/4.4.7/../../../../powerpc64-bgq-linux/include/c++/4.4.7/bits/stl_vector.h <line 533> was not SIMD vectorized because it contains function calls.
1586-550 (I) Loop (loop index 8) at timer.cxx <line 185> was not SIMD vectorized because it is not profitable to vectorize.
1586-551 (I) Loop (loop index 8) at timer.cxx <line 186> was not SIMD vectorized because it contains unsupported vector data types.
1586-550 (I) Loop (loop index 9) at timer.cxx <line 176> was not SIMD vectorized because it is not profitable to vectorize.
1586-551 (I) Loop (loop index 9) at timer.cxx <line 177> was not SIMD vectorized because it contains unsupported vector data types.
1586-539 (I) Loop (loop index 10) at timer.cxx <line 163> was not SIMD vectorized because it contains function calls.
1586-538 (I) Loop (loop index 11) at timer.cxx <line 164> was not SIMD vectorized because it contains unsupported loop structure.
1586-552 (I) Loop (loop index 11) at timer.cxx <line 164> was not SIMD vectorized because it contains control flow.
1586-543 (I) <SIMD info> Total number of the innermost loops considered <"8">. Total number of the innermost loops SIMD vectorized <"0">.
1586-551 (I) Loop (loop index 1) at /bgsys/drivers/toolchain/V1R2M4_base/gnu-linux/lib/gcc/powerpc64-bgq-linux/4.4.7/../../../../powerpc64-bgq-linux/include/c++/4.4.7/bits/stl_algobase.h <line 343> was not SIMD vectorized because it contains unsupported vector data types.
1586-551 (I) Loop (loop index 2) at /bgsys/drivers/toolchain/V1R2M4_base/gnu-linux/lib/gcc/powerpc64-bgq-linux/4.4.7/../../../../powerpc64-bgq-linux/include/c++/4.4.7/bits/stl_algobase.h <line 343> was not SIMD vectorized because it contains unsupported vector data types.
1586-538 (I) Loop (loop index 3) at /bgsys/drivers/toolchain/V1R2M4_base/gnu-linux/lib/gcc/powerpc64-bgq-linux/4.4.7/../../../../powerpc64-bgq-linux/include/c++/4.4.7/bits/stl_uninitialized.h <line 70> was not SIMD vectorized because it contains unsupported loop structure.
1586-552 (I) Loop (loop index 3) at /bgsys/drivers/toolchain/V1R2M4_base/gnu-linux/lib/gcc/powerpc64-bgq-linux/4.4.7/../../../../powerpc64-bgq-linux/include/c++/4.4.7/bits/stl_uninitialized.h <line 70> was not SIMD vectorized because it contains control flow.
1586-535 (I) Loop (loop index 4) at /bgsys/drivers/toolchain/V1R2M4_base/gnu-linux/lib/gcc/powerpc64-bgq-linux/4.4.7/../../../../powerpc64-bgq-linux/include/c++/4.4.7/bits/stl_algobase.h <line 341> was not SIMD vectorized because the aliasing-induced dependence prevents SIMD vectorization.
1586-551 (I) Loop (loop index 4) at /bgsys/drivers/toolchain/V1R2M4_base/gnu-linux/lib/gcc/powerpc64-bgq-linux/4.4.7/../../../../powerpc64-bgq-linux/include/c++/4.4.7/bits/stl_algobase.h <line 343> was not SIMD vectorized because it contains unsupported vector data types.
1586-535 (I) Loop (loop index 5) at /bgsys/drivers/toolchain/V1R2M4_base/gnu-linux/lib/gcc/powerpc64-bgq-linux/4.4.7/../../../../powerpc64-bgq-linux/include/c++/4.4.7/bits/stl_algobase.h <line 341> was not SIMD vectorized because the aliasing-induced dependence prevents SIMD vectorization.
1586-551 (I) Loop (loop index 5) at /bgsys/drivers/toolchain/V1R2M4_base/gnu-linux/lib/gcc/powerpc64-bgq-linux/4.4.7/../../../../powerpc64-bgq-linux/include/c++/4.4.7/bits/stl_algobase.h <line 343> was not SIMD vectorized because it contains unsupported vector data types.
1586-538 (I) Loop (loop index 6) at /bgsys/drivers/toolchain/V1R2M4_base/gnu-linux/lib/gcc/powerpc64-bgq-linux/4.4.7/../../../../powerpc64-bgq-linux/include/c++/4.4.7/bits/stl_uninitialized.h <line 70> was not SIMD vectorized because it contains unsupported loop structure.
1586-552 (I) Loop (loop index 6) at /bgsys/drivers/toolchain/V1R2M4_base/gnu-linux/lib/gcc/powerpc64-bgq-linux/4.4.7/../../../../powerpc64-bgq-linux/include/c++/4.4.7/bits/stl_uninitialized.h <line 70> was not SIMD vectorized because it contains control flow.
1586-543 (I) <SIMD info> Total number of the innermost loops considered <"6">. Total number of the innermost loops SIMD vectorized <"0">.
1586-540 (I) Loop (loop index 1) at /bgsys/drivers/toolchain/V1R2M4_base/gnu-linux/lib/gcc/powerpc64-bgq-linux/4.4.7/../../../../powerpc64-bgq-linux/include/c++/4.4.7/bits/stl_algobase.h <line 545> was not SIMD vectorized because it contains memory references ((aggr120 *)((char *)this->(_Vector_base<CTF_Function_timer,std::allocator<CTF_Function_timer> >)._M_finish@8.rns238.  + (-240ll - $$CIV5 * 120ll)))->(CTF_Function_timer).rns223. = ((aggr120 *)((char *)this->(_Vector_base<CTF_Function_timer,std::allocator<CTF_Function_timer> >)._M_finish@8.rns238.  + (-360ll - $$CIV5 * 120ll)))->(CTF_Function_timer).rns223.; with non-vectorizable strides.
1586-540 (I) Loop (loop index 1) at /bgsys/drivers/toolchain/V1R2M4_base/gnu-linux/lib/gcc/powerpc64-bgq-linux/4.4.7/../../../../powerpc64-bgq-linux/include/c++/4.4.7/bits/stl_algobase.h <line 546> was not SIMD vectorized because it contains memory references  with non-vectorizable strides.
1586-551 (I) Loop (loop index 1) at /bgsys/drivers/toolchain/V1R2M4_base/gnu-linux/lib/gcc/powerpc64-bgq-linux/4.4.7/../../../../powerpc64-bgq-linux/include/c++/4.4.7/bits/stl_algobase.h <line 546> was not SIMD vectorized because it contains unsupported vector data types.
1586-538 (I) Loop (loop index 2) at /bgsys/drivers/toolchain/V1R2M4_base/gnu-linux/lib/gcc/powerpc64-bgq-linux/4.4.7/../../../../powerpc64-bgq-linux/include/c++/4.4.7/bits/stl_uninitialized.h <line 70> was not SIMD vectorized because it contains unsupported loop structure.
1586-552 (I) Loop (loop index 2) at /bgsys/drivers/toolchain/V1R2M4_base/gnu-linux/lib/gcc/powerpc64-bgq-linux/4.4.7/../../../../powerpc64-bgq-linux/include/c++/4.4.7/bits/stl_uninitialized.h <line 70> was not SIMD vectorized because it contains control flow.
1586-538 (I) Loop (loop index 3) at /bgsys/drivers/toolchain/V1R2M4_base/gnu-linux/lib/gcc/powerpc64-bgq-linux/4.4.7/../../../../powerpc64-bgq-linux/include/c++/4.4.7/bits/stl_uninitialized.h <line 70> was not SIMD vectorized because it contains unsupported loop structure.
1586-552 (I) Loop (loop index 3) at /bgsys/drivers/toolchain/V1R2M4_base/gnu-linux/lib/gcc/powerpc64-bgq-linux/4.4.7/../../../../powerpc64-bgq-linux/include/c++/4.4.7/bits/stl_uninitialized.h <line 70> was not SIMD vectorized because it contains control flow.
1586-538 (I) Loop (loop index 4) at /bgsys/drivers/toolchain/V1R2M4_base/gnu-linux/lib/gcc/powerpc64-bgq-linux/4.4.7/../../../../powerpc64-bgq-linux/include/c++/4.4.7/bits/stl_uninitialized.h <line 70> was not SIMD vectorized because it contains unsupported loop structure.
1586-552 (I) Loop (loop index 4) at /bgsys/drivers/toolchain/V1R2M4_base/gnu-linux/lib/gcc/powerpc64-bgq-linux/4.4.7/../../../../powerpc64-bgq-linux/include/c++/4.4.7/bits/stl_uninitialized.h <line 70> was not SIMD vectorized because it contains control flow.
1586-538 (I) Loop (loop index 5) at /bgsys/drivers/toolchain/V1R2M4_base/gnu-linux/lib/gcc/powerpc64-bgq-linux/4.4.7/../../../../powerpc64-bgq-linux/include/c++/4.4.7/bits/stl_uninitialized.h <line 70> was not SIMD vectorized because it contains unsupported loop structure.
1586-552 (I) Loop (loop index 5) at /bgsys/drivers/toolchain/V1R2M4_base/gnu-linux/lib/gcc/powerpc64-bgq-linux/4.4.7/../../../../powerpc64-bgq-linux/include/c++/4.4.7/bits/stl_uninitialized.h <line 70> was not SIMD vectorized because it contains control flow.
1586-543 (I) <SIMD info> Total number of the innermost loops considered <"5">. Total number of the innermost loops SIMD vectorized <"0">.
1586-539 (I) Loop (loop index 1) at /bgsys/drivers/toolchain/V1R2M4_base/gnu-linux/lib/gcc/powerpc64-bgq-linux/4.4.7/../../../../powerpc64-bgq-linux/include/c++/4.4.7/bits/stl_algo.h <line 2284> was not SIMD vectorized because it contains function calls.
1586-543 (I) <SIMD info> Total number of the innermost loops considered <"1">. Total number of the innermost loops SIMD vectorized <"0">.
1586-539 (I) Loop (loop index 1) at /bgsys/drivers/toolchain/V1R2M4_base/gnu-linux/lib/gcc/powerpc64-bgq-linux/4.4.7/../../../../powerpc64-bgq-linux/include/c++/4.4.7/bits/stl_algo.h <line 2160> was not SIMD vectorized because it contains function calls.
1586-543 (I) <SIMD info> Total number of the innermost loops considered <"1">. Total number of the innermost loops SIMD vectorized <"0">.
1586-539 (I) Loop (loop index 1) at /bgsys/drivers/toolchain/V1R2M4_base/gnu-linux/lib/gcc/powerpc64-bgq-linux/4.4.7/../../../../powerpc64-bgq-linux/include/c++/4.4.7/bits/stl_algo.h <line 2252> was not SIMD vectorized because it contains function calls.
1586-543 (I) <SIMD info> Total number of the innermost loops considered <"1">. Total number of the innermost loops SIMD vectorized <"0">.
1586-539 (I) Loop (loop index 1) at /bgsys/drivers/toolchain/V1R2M4_base/gnu-linux/lib/gcc/powerpc64-bgq-linux/4.4.7/../../../../powerpc64-bgq-linux/include/c++/4.4.7/bits/stl_algo.h <line 2147> was not SIMD vectorized because it contains function calls.
1586-543 (I) <SIMD info> Total number of the innermost loops considered <"1">. Total number of the innermost loops SIMD vectorized <"0">.
1586-539 (I) Loop (loop index 1) at /bgsys/drivers/toolchain/V1R2M4_base/gnu-linux/lib/gcc/powerpc64-bgq-linux/4.4.7/../../../../powerpc64-bgq-linux/include/c++/4.4.7/bits/stl_algo.h <line 2228> was not SIMD vectorized because it contains function calls.
1586-539 (I) Loop (loop index 2) at /bgsys/drivers/toolchain/V1R2M4_base/gnu-linux/lib/gcc/powerpc64-bgq-linux/4.4.7/../../../../powerpc64-bgq-linux/include/c++/4.4.7/bits/stl_algo.h <line 2233> was not SIMD vectorized because it contains function calls.
1586-539 (I) Loop (loop index 3) at /bgsys/drivers/toolchain/V1R2M4_base/gnu-linux/lib/gcc/powerpc64-bgq-linux/4.4.7/../../../../powerpc64-bgq-linux/include/c++/4.4.7/bits/stl_algo.h <line 2230> was not SIMD vectorized because it contains function calls.
1586-543 (I) <SIMD info> Total number of the innermost loops considered <"2">. Total number of the innermost loops SIMD vectorized <"0">.
1586-539 (I) Loop (loop index 1) at /bgsys/drivers/toolchain/V1R2M4_base/gnu-linux/lib/gcc/powerpc64-bgq-linux/4.4.7/../../../../powerpc64-bgq-linux/include/c++/4.4.7/bits/stl_algo.h <line 1918> was not SIMD vectorized because it contains function calls.
1586-543 (I) <SIMD info> Total number of the innermost loops considered <"1">. Total number of the innermost loops SIMD vectorized <"0">.
1586-539 (I) Loop (loop index 1) at /bgsys/drivers/toolchain/V1R2M4_base/gnu-linux/lib/gcc/powerpc64-bgq-linux/4.4.7/../../../../powerpc64-bgq-linux/include/c++/4.4.7/bits/stl_heap.h <line 490> was not SIMD vectorized because it contains function calls.
1586-543 (I) <SIMD info> Total number of the innermost loops considered <"1">. Total number of the innermost loops SIMD vectorized <"0">.
1586-539 (I) Loop (loop index 1) at /bgsys/drivers/toolchain/V1R2M4_base/gnu-linux/lib/gcc/powerpc64-bgq-linux/4.4.7/../../../../powerpc64-bgq-linux/include/c++/4.4.7/bits/stl_iterator.h <line 739> was not SIMD vectorized because it contains function calls.
1586-540 (I) Loop (loop index 2) at /bgsys/drivers/toolchain/V1R2M4_base/gnu-linux/lib/gcc/powerpc64-bgq-linux/4.4.7/../../../../powerpc64-bgq-linux/include/c++/4.4.7/bits/stl_algobase.h <line 545> was not SIMD vectorized because it contains memory references ((aggr120 *)((char *)__1693._M_current@0  + (-120ll - $$CIVA * 120ll)))->(CTF_Function_timer).rns327. = ((aggr120 *)((char *)__1689._M_current@0  + (-120ll - $$CIVA * 120ll)))->(CTF_Function_timer).rns328.; with non-vectorizable strides.
1586-540 (I) Loop (loop index 2) at /bgsys/drivers/toolchain/V1R2M4_base/gnu-linux/lib/gcc/powerpc64-bgq-linux/4.4.7/../../../../powerpc64-bgq-linux/include/c++/4.4.7/bits/stl_algobase.h <line 546> was not SIMD vectorized because it contains memory references  with non-vectorizable strides.
1586-551 (I) Loop (loop index 2) at /bgsys/drivers/toolchain/V1R2M4_base/gnu-linux/lib/gcc/powerpc64-bgq-linux/4.4.7/../../../../powerpc64-bgq-linux/include/c++/4.4.7/bits/stl_algobase.h <line 546> was not SIMD vectorized because it contains unsupported vector data types.
1586-543 (I) <SIMD info> Total number of the innermost loops considered <"1">. Total number of the innermost loops SIMD vectorized <"0">.
1586-539 (I) Loop (loop index 1) at /bgsys/drivers/toolchain/V1R2M4_base/gnu-linux/lib/gcc/powerpc64-bgq-linux/4.4.7/../../../../powerpc64-bgq-linux/include/c++/4.4.7/bits/stl_algo.h <line 2084> was not SIMD vectorized because it contains function calls.
1586-543 (I) <SIMD info> Total number of the innermost loops considered <"1">. Total number of the innermost loops SIMD vectorized <"0">.
1586-534 (I) Loop (loop index 1) at /bgsys/drivers/toolchain/V1R2M4_base/gnu-linux/lib/gcc/powerpc64-bgq-linux/4.4.7/../../../../powerpc64-bgq-linux/include/c++/4.4.7/bits/stl_algo.h <line 2207> was not SIMD vectorized because the loop is not the innermost loop.
1586-538 (I) Loop (loop index 1) at /bgsys/drivers/toolchain/V1R2M4_base/gnu-linux/lib/gcc/powerpc64-bgq-linux/4.4.7/../../../../powerpc64-bgq-linux/include/c++/4.4.7/bits/stl_algo.h <line 2207> was not SIMD vectorized because it contains unsupported loop structure.
1586-538 (I) Loop (loop index 2) at /bgsys/drivers/toolchain/V1R2M4_base/gnu-linux/lib/gcc/powerpc64-bgq-linux/4.4.7/../../../../powerpc64-bgq-linux/include/c++/4.4.7/bits/stl_algo.h <line 2212> was not SIMD vectorized because it contains unsupported loop structure.
1586-538 (I) Loop (loop index 3) at /bgsys/drivers/toolchain/V1R2M4_base/gnu-linux/lib/gcc/powerpc64-bgq-linux/4.4.7/../../../../powerpc64-bgq-linux/include/c++/4.4.7/bits/stl_algo.h <line 2209> was not SIMD vectorized because it contains unsupported loop structure.
1586-543 (I) <SIMD info> Total number of the innermost loops considered <"2">. Total number of the innermost loops SIMD vectorized <"0">.
1586-539 (I) Loop (loop index 1) at /bgsys/drivers/toolchain/V1R2M4_base/gnu-linux/lib/gcc/powerpc64-bgq-linux/4.4.7/../../../../powerpc64-bgq-linux/include/c++/4.4.7/bits/stl_algo.h <line 1905> was not SIMD vectorized because it contains function calls.
1586-543 (I) <SIMD info> Total number of the innermost loops considered <"1">. Total number of the innermost loops SIMD vectorized <"0">.
1586-539 (I) Loop (loop index 1) at /bgsys/drivers/toolchain/V1R2M4_base/gnu-linux/lib/gcc/powerpc64-bgq-linux/4.4.7/../../../../powerpc64-bgq-linux/include/c++/4.4.7/bits/stl_heap.h <line 462> was not SIMD vectorized because it contains function calls.
1586-543 (I) <SIMD info> Total number of the innermost loops considered <"1">. Total number of the innermost loops SIMD vectorized <"0">.
1586-539 (I) Loop (loop index 1) at /bgsys/drivers/toolchain/V1R2M4_base/gnu-linux/lib/gcc/powerpc64-bgq-linux/4.4.7/../../../../powerpc64-bgq-linux/include/c++/4.4.7/bits/stl_iterator.h <line 739> was not SIMD vectorized because it contains function calls.
1586-540 (I) Loop (loop index 2) at /bgsys/drivers/toolchain/V1R2M4_base/gnu-linux/lib/gcc/powerpc64-bgq-linux/4.4.7/../../../../powerpc64-bgq-linux/include/c++/4.4.7/bits/stl_algobase.h <line 545> was not SIMD vectorized because it contains memory references ((aggr120 *)((char *)__1911._M_current@0  + (-120ll - $$CIVD * 120ll)))->(CTF_Function_timer).rns350. = ((aggr120 *)((char *)__1907._M_current@0  + (-120ll - $$CIVD * 120ll)))->(CTF_Function_timer).rns351.; with non-vectorizable strides.
1586-540 (I) Loop (loop index 2) at /bgsys/drivers/toolchain/V1R2M4_base/gnu-linux/lib/gcc/powerpc64-bgq-linux/4.4.7/../../../../powerpc64-bgq-linux/include/c++/4.4.7/bits/stl_algobase.h <line 546> was not SIMD vectorized because it contains memory references  with non-vectorizable strides.
1586-551 (I) Loop (loop index 2) at /bgsys/drivers/toolchain/V1R2M4_base/gnu-linux/lib/gcc/powerpc64-bgq-linux/4.4.7/../../../../powerpc64-bgq-linux/include/c++/4.4.7/bits/stl_algobase.h <line 546> was not SIMD vectorized because it contains unsupported vector data types.
1586-543 (I) <SIMD info> Total number of the innermost loops considered <"1">. Total number of the innermost loops SIMD vectorized <"0">.
1586-538 (I) Loop (loop index 1) at /bgsys/drivers/toolchain/V1R2M4_base/gnu-linux/lib/gcc/powerpc64-bgq-linux/4.4.7/../../../../powerpc64-bgq-linux/include/c++/4.4.7/bits/stl_algo.h <line 2067> was not SIMD vectorized because it contains unsupported loop structure.
1586-543 (I) <SIMD info> Total number of the innermost loops considered <"1">. Total number of the innermost loops SIMD vectorized <"0">.
1586-538 (I) Loop (loop index 1) at /bgsys/drivers/toolchain/V1R2M4_base/gnu-linux/lib/gcc/powerpc64-bgq-linux/4.4.7/../../../../powerpc64-bgq-linux/include/c++/4.4.7/bits/stl_uninitialized.h <line 70> was not SIMD vectorized because it contains unsupported loop structure.
1586-552 (I) Loop (loop index 1) at /bgsys/drivers/toolchain/V1R2M4_base/gnu-linux/lib/gcc/powerpc64-bgq-linux/4.4.7/../../../../powerpc64-bgq-linux/include/c++/4.4.7/bits/stl_uninitialized.h <line 70> was not SIMD vectorized because it contains control flow.
1586-538 (I) Loop (loop index 2) at /bgsys/drivers/toolchain/V1R2M4_base/gnu-linux/lib/gcc/powerpc64-bgq-linux/4.4.7/../../../../powerpc64-bgq-linux/include/c++/4.4.7/bits/stl_uninitialized.h <line 70> was not SIMD vectorized because it contains unsupported loop structure.
1586-552 (I) Loop (loop index 2) at /bgsys/drivers/toolchain/V1R2M4_base/gnu-linux/lib/gcc/powerpc64-bgq-linux/4.4.7/../../../../powerpc64-bgq-linux/include/c++/4.4.7/bits/stl_uninitialized.h <line 70> was not SIMD vectorized because it contains control flow.
1586-543 (I) <SIMD info> Total number of the innermost loops considered <"2">. Total number of the innermost loops SIMD vectorized <"0">.
1586-539 (I) Loop (loop index 1) at /bgsys/drivers/toolchain/V1R2M4_base/gnu-linux/lib/gcc/powerpc64-bgq-linux/4.4.7/../../../../powerpc64-bgq-linux/include/c++/4.4.7/bits/stl_heap.h <line 431> was not SIMD vectorized because it contains function calls.
1586-543 (I) <SIMD info> Total number of the innermost loops considered <"1">. Total number of the innermost loops SIMD vectorized <"0">.
1586-539 (I) Loop (loop index 1) at /bgsys/drivers/toolchain/V1R2M4_base/gnu-linux/lib/gcc/powerpc64-bgq-linux/4.4.7/../../../../powerpc64-bgq-linux/include/c++/4.4.7/bits/stl_heap.h <line 300> was not SIMD vectorized because it contains function calls.
1586-543 (I) <SIMD info> Total number of the innermost loops considered <"1">. Total number of the innermost loops SIMD vectorized <"0">.
1586-539 (I) Loop (loop index 1) at /bgsys/drivers/toolchain/V1R2M4_base/gnu-linux/lib/gcc/powerpc64-bgq-linux/4.4.7/../../../../powerpc64-bgq-linux/include/c++/4.4.7/bits/stl_heap.h <line 391> was not SIMD vectorized because it contains function calls.
1586-543 (I) <SIMD info> Total number of the innermost loops considered <"1">. Total number of the innermost loops SIMD vectorized <"0">.
1586-538 (I) Loop (loop index 1) at /bgsys/drivers/toolchain/V1R2M4_base/gnu-linux/lib/gcc/powerpc64-bgq-linux/4.4.7/../../../../powerpc64-bgq-linux/include/c++/4.4.7/bits/stl_heap.h <line 229> was not SIMD vectorized because it contains unsupported loop structure.
1586-543 (I) <SIMD info> Total number of the innermost loops considered <"1">. Total number of the innermost loops SIMD vectorized <"0">.
1586-539 (I) Loop (loop index 1) at /bgsys/drivers/toolchain/V1R2M4_base/gnu-linux/lib/gcc/powerpc64-bgq-linux/4.4.7/../../../../powerpc64-bgq-linux/include/c++/4.4.7/bits/stl_iterator.h <line 739> was not SIMD vectorized because it contains function calls.
1586-543 (I) <SIMD info> Total number of the innermost loops considered <"1">. Total number of the innermost loops SIMD vectorized <"0">.
1586-538 (I) Loop (loop index 1) at /bgsys/drivers/toolchain/V1R2M4_base/gnu-linux/lib/gcc/powerpc64-bgq-linux/4.4.7/../../../../powerpc64-bgq-linux/include/c++/4.4.7/bits/stl_iterator.h <line 699> was not SIMD vectorized because it contains unsupported loop structure.
1586-552 (I) Loop (loop index 1) at /bgsys/drivers/toolchain/V1R2M4_base/gnu-linux/lib/gcc/powerpc64-bgq-linux/4.4.7/../../../../powerpc64-bgq-linux/include/c++/4.4.7/bits/stl_iterator.h <line 699> was not SIMD vectorized because it contains control flow.
1586-543 (I) <SIMD info> Total number of the innermost loops considered <"1">. Total number of the innermost loops SIMD vectorized <"0">.
    23 |  char * CTF_Function_timer::CTF_Function_timer(char const*, double, double)(CTF_Function_timer *this, char * name_, double start_time_, double start_excl_time_)
    25 |  {
            guard__ZGVZN18CTF_Function_timerC1EPKcddE8__func__ = 1;
    26 |    $$RET0 = __builtin_strlen(name_);
            if ($$RET0 + 1ull < 53ull) goto lab_5;
   126 |  lab_5:
            $$RET1 = __builtin_strlen(name_);
    26 |    if ($$RET1 + 1ull < 53ull) goto lab_9;
            __assert_fail("strlen(name_)+1 < 53","timer.cxx",26u,&CTF_Function_timer::CTF_Function_timer(char const*, double, double)::__func__)
            return;
          lab_9:
    27 |    __builtin_strcpy(this,name_);
    28 |    *((double *)((char *)this + 56)) = start_time_;
    29 |    *((double *)((char *)this + 64)) = start_excl_time_;
    30 |    *((double *)((char *)this + 72)) =  0.0000000000000000E+000;
    31 |    *((double *)((char *)this + 80)) =  0.0000000000000000E+000;
    32 |    *((int *)((char *)this + 88)) = 0;
    33 |    rstr = this;
            return rstr;
          } /* function */ 


    23 |  char * CTF_Function_timer::CTF_Function_timer(char const*, double, double)(CTF_Function_timer *this, char * name_, double start_time_, double start_excl_time_)
    25 |  {
            guard__ZGVZN18CTF_Function_timerC1EPKcddE8__func__ = 1;
    26 |    $$RET2 = __builtin_strlen(name_);
            if ($$RET2 + 1ull < 53ull) goto lab_5;
   126 |  lab_5:
            $$RET3 = __builtin_strlen(name_);
    26 |    if ($$RET3 + 1ull < 53ull) goto lab_9;
            __assert_fail("strlen(name_)+1 < 53","timer.cxx",26u,&CTF_Function_timer::CTF_Function_timer(char const*, double, double)::__func__)
            return;
          lab_9:
    27 |    __builtin_strcpy(this,name_);
    28 |    *((double *)((char *)this + 56)) = start_time_;
    29 |    *((double *)((char *)this + 64)) = start_excl_time_;
    30 |    *((double *)((char *)this + 72)) =  0.0000000000000000E+000;
    31 |    *((double *)((char *)this + 80)) =  0.0000000000000000E+000;
    32 |    *((int *)((char *)this + 88)) = 0;
    33 |    rstr = this;
            return rstr;
          } /* function */ 


    35 |  void CTF_Function_timer::compute_totals(int)(char * this, int comm)
          {
    36 |    PMPI_Allreduce((this + 72),(this + 96),1,1275070475,1476395011,comm);
    38 |    PMPI_Allreduce((this + 80),(this + 104),1,1275070475,1476395011,comm);
    40 |    PMPI_Allreduce((this + 88),(this + 112),1,1275069445,1476395011,comm);
    42 |    return;
          } /* function */ 


    44 |  char CTF_Function_timer::operator<(CTF_Function_timer const&) const(CTF_Function_timer *this, CTF_Function_timer *w)
          {
    45 |    rstr = (char) (*((double *)((char *)this + 96)) > *((double *)((char *)w + 96)));
            return rstr;
    46 |  } /* function */ 


    48 |  void CTF_Function_timer::print(_IO_FILE*, int, int, int)(CTF_Function_timer *this, char * output, int comm, int rank, int np)
    51 |  {
    53 |    if (!(rank == 0)) goto lab_1;
    54 |    fprintf(output,"%s",this);
            $$RET4 = __builtin_strlen(this);
    55 |    space = malloc((53ull - $$RET4) + 1ull);
    56 |    i = 0;
            $$RET5 = (int) __builtin_strlen(this);
            if (!(0 < 53 - $$RET5)) goto lab_5;
            do {   /* id=1 */ /* ~3 */ 
              /* region = 11 */
    57 |      space[(long long) i] = 32u;
    56 |      i = i + 1;
              $$RET6 = (int) __builtin_strlen(this);
            } while (i < 53 - $$RET6);    /* ~3 */
          lab_5:
    59 |    space[(long long) i] = 0u;
    60 |    fprintf(output,"%s",space);
    61 |    fprintf(output,"%5d   %3d.%03d   %3d.%02d  %3d.%03d   %3d.%02d/n",*((int *)((char *)this + 112)) / np,(int) (*((double *)((char *)this + 96)) / (double) np),(int) (( 1.0000000000000000E+003 * *((double *)((char *)this + 96))) / (double) np) % 1000,(int) (( 1.0000000000000000E+002 * *((double *)((char *)this + 96))) / complete_time),(int) (( 1.0000000000000000E+004 * *((double *)((char *)this + 96))) / complete_time) % 100,(int) (*((double *)((char *)this + 104)) / (double) np),(int) (( 1.0000000000000000E+003 * *((double *)((char *)this + 104))) / (double) np) % 1000,(int) (( 1.0000000000000000E+002 * *((double *)((char *)this + 104))) / complete_time),(int) (( 1.0000000000000000E+004 * *((double *)((char *)this + 104))) / complete_time) % 100);
    71 |    free(space)
    72 |  lab_1:
    73 |    return;
          } /* function */ 



Source        Source        Loop Id       Action / Information                                      
File          Line                                                                                  
----------    ----------    ----------    ----------------------------------------------------------
         0            56             1    Loop cannot be normalized and no loop optimizations 
                                          applied.
         0            56             1    Loop cannot be normalized and no loop optimizations 
                                          applied.
         0            56             1    Loop was not SIMD vectorized because it contains 
                                          function calls.

    75 |  char comp_name(CTF_Function_timer const&, CTF_Function_timer const&)(char * w1, char * w2)
          {
            $$RET7 = __builtin_strcmp(w1,w2);
    76 |    rstr = (char) ($$RET7 > 0);
            return rstr;
    77 |  } /* function */ 


    81 |  char * CTF_Timer::CTF_Timer(char const*)(CTF_Timer *this, char *name)
          {
            __es.__l@0 = 0;
            __es.__t@8 = &__fsm_tab;
            __es.__this@10 = this;
            __es.__i@18 = 0;
    84 |    if (!(function_timers == NULL)) goto lab_1;
    85 |    if (!(77 == (int) name[0ll])) goto lab_3;
            if (!(80 == (int) name[1ll])) goto lab_3;
    86 |    if (!(73 == (int) name[2ll])) goto lab_3;
            if (!(95 == (int) name[3ll])) goto lab_3;
    87 |    *((int *)((char *)this + 12)) = 1;
    88 |    *((int *)((char *)this + 16)) = 0;
    89 |    __es.__c4@3 = 0u;
            rstr = this;
            return rstr;
    90 |  lab_3:
    91 |    *((int *)((char *)this + 16)) = 1;
    92 |    *((int *)((char *)this + 8)) = 0;
    93 |    excl_time =  0.0000000000000000E+000;
    94 |    __50 = operator new(unsigned long)(24ull);
            if (!(__50 != NULL)) goto lab_9;
    81 |    *((char * *)__50) = NULL;
            *((char * *)((char *)__50 + 8)) = NULL;
            *((char * *)((char *)__50 + 16)) = NULL;
    94 |    __es.__c4@3 = 0u;
          lab_9:
            function_timers = __50;
    95 |    __101 = __50;
   734 |    $$RET8 = MPI_Wtime();
    25 |    guard__ZGVZN18CTF_Function_timerC1EPKcddE8__func__ = 1;
    26 |    $$RET0 = __builtin_strlen(name);
            if ($$RET0 + 1ull < 53ull) goto lab_37;
   126 |  lab_37:
            $$RET1 = __builtin_strlen(name);
    26 |    if ($$RET1 + 1ull < 53ull) goto lab_38;
            __assert_fail("strlen(name_)+1 < 53","timer.cxx",26u,&CTF_Function_timer::CTF_Function_timer(char const*, double, double)::__func__)
            return rstr;
          lab_38:
    27 |    __builtin_strcpy(&__52,name);
    28 |    &__52->(CTF_Function_timer).start_time@38.rns3.$$28 = $$RET8;
    29 |    &__52->(CTF_Function_timer).start_excl_time@40.rns4.$$28 =  0.0000000000000000E+000;
    30 |    &__52->(CTF_Function_timer).acc_time@48.rns5.$$28 =  0.0000000000000000E+000;
    31 |    &__52->(CTF_Function_timer).acc_excl_time@50.rns6.$$28 =  0.0000000000000000E+000;
    32 |    &__52->(CTF_Function_timer).calls@58.rns7.$$28 = 0;
   735 |    if (!(*((char * *)((char *)__101 + 8)) != *((char * *)((char *)__101 + 16)))) goto lab_11;
   101 |    if (!(*((char * *)((char *)__101 + 8)) != NULL)) goto lab_30;
   105 |    *((char * *)((char *)__101 + 8))->(CTF_Function_timer).rns200.$$30 = &__52->(CTF_Function_timer).rns201.$$30;
          lab_30:
   738 |    *((char * *)((char *)__101 + 8)) = ((char *)*((char * *)((char *)__101 + 8))  + 120ll);
   739 |    goto lab_13;
          lab_11:
   686 |    __96._M_current@0 = *((char * *)((char *)__101 + 8));
   444 |    std::vector<CTF_Function_timer, std::allocator<CTF_Function_timer> >::_M_insert_aux(__gnu_cxx::__normal_iterator<CTF_Function_timer*, std::vector<CTF_Function_timer, std::allocator<CTF_Function_timer> > >, CTF_Function_timer const&)(__101,__96,&__52)
          lab_13:
    96 |    goto lab_14;
          lab_1:
    97 |    i = 0;
   533 |    if (!(0 < (int) ((unsigned long long) ((*((char * *)((char *)function_timers + 8)) - *((char * *)function_timers)) / 120ll)))) goto lab_17;
            do {   /* id=1 guarded */ /* ~15 */ 
              /* region = 40 */
    98 |      $$RET9.rnn0 = 0 == __builtin_strcmp(((char *)*((char * *)function_timers)  + (long long) ((unsigned long long) i * 120ull)),name);
   611 |      if ($$RET9.rnn0 != 0) goto lab_25;
    97 |      i = i + 1;
   533 |    } while (i < (int) ((unsigned long long) ((*((char * *)((char *)function_timers + 8)) - *((char * *)function_timers)) / 120ll)));    /* ~15 */
          lab_17:
   104 |    *((int *)((char *)this + 8)) = i;
   105 |    *((int *)((char *)this + 16)) = i == 0;
   106 |  lab_28:
          lab_14:
   533 |    if (!(*((int *)((char *)this + 8)) == (int) ((unsigned long long) ((*((char * *)((char *)function_timers + 8)) - *((char * *)function_timers)) / 120ll)))) goto lab_20;
   108 |    __115 = function_timers;
   734 |    $$RETA = MPI_Wtime();
   108 |    $$PARM.start_excl_time_25 = excl_time;
    25 |    guard__ZGVZN18CTF_Function_timerC1EPKcddE8__func__ = 1;
    26 |    $$RET0 = __builtin_strlen(name);
            if ($$RET0 + 1ull < 53ull) goto lab_34;
   126 |  lab_34:
            $$RET1 = __builtin_strlen(name);
    26 |    if ($$RET1 + 1ull < 53ull) goto lab_35;
            __assert_fail("strlen(name_)+1 < 53","timer.cxx",26u,&CTF_Function_timer::CTF_Function_timer(char const*, double, double)::__func__)
            return rstr;
          lab_35:
    27 |    __builtin_strcpy(&__54,name);
    28 |    &__54->(CTF_Function_timer).start_time@38.rns3.$$22 = $$RETA;
    29 |    &__54->(CTF_Function_timer).start_excl_time@40.rns4.$$22 = $$PARM.start_excl_time_25;
    30 |    &__54->(CTF_Function_timer).acc_time@48.rns5.$$22 =  0.0000000000000000E+000;
    31 |    &__54->(CTF_Function_timer).acc_excl_time@50.rns6.$$22 =  0.0000000000000000E+000;
    32 |    &__54->(CTF_Function_timer).calls@58.rns7.$$22 = 0;
   735 |    if (!(*((char * *)((char *)__115 + 8)) != *((char * *)((char *)__115 + 16)))) goto lab_22;
   101 |    if (!(*((char * *)((char *)__115 + 8)) != NULL)) goto lab_32;
   105 |    *((char * *)((char *)__115 + 8))->(CTF_Function_timer).rns200.$$24 = &__54->(CTF_Function_timer).rns201.$$24;
          lab_32:
   738 |    *((char * *)((char *)__115 + 8)) = ((char *)*((char * *)((char *)__115 + 8))  + 120ll);
   739 |    goto lab_24;
          lab_22:
   686 |    __110._M_current@0 = *((char * *)((char *)__115 + 8));
   444 |    std::vector<CTF_Function_timer, std::allocator<CTF_Function_timer> >::_M_insert_aux(__gnu_cxx::__normal_iterator<CTF_Function_timer*, std::vector<CTF_Function_timer, std::allocator<CTF_Function_timer> > >, CTF_Function_timer const&)(__115,__110,&__54)
          lab_24:
   109 |  lab_20:
   110 |    *((char * *)this) = name;
   111 |    *((int *)((char *)this + 12)) = 0;
   113 |    __es.__c4@3 = 0u;
            rstr = this;
            return rstr;
   611 |  lab_25:
   104 |    *((int *)((char *)this + 8)) = i;
   105 |    *((int *)((char *)this + 16)) = i == 0;
            goto lab_28;
   113 |  } /* function */ 



Source        Source        Loop Id       Action / Information                                      
File          Line                                                                                  
----------    ----------    ----------    ----------------------------------------------------------
       229           533             1    Loop cannot be normalized and no loop optimizations 
                                          applied.
       229           533             1    Loop cannot be normalized and no loop optimizations 
                                          applied.
       229           533             1    Loop was not SIMD vectorized because it contains 
                                          function calls.

    81 |  char * CTF_Timer::CTF_Timer(char const*)(CTF_Timer *this, char *name)
          {
            __es.__l@0 = 0;
            __es.__t@8 = &__fsm_tab;
            __es.__this@10 = this;
            __es.__i@18 = 0;
    84 |    if (!(function_timers == NULL)) goto lab_1;
    85 |    if (!(77 == (int) name[0ll])) goto lab_3;
            if (!(80 == (int) name[1ll])) goto lab_3;
    86 |    if (!(73 == (int) name[2ll])) goto lab_3;
            if (!(95 == (int) name[3ll])) goto lab_3;
    87 |    *((int *)((char *)this + 12)) = 1;
    88 |    *((int *)((char *)this + 16)) = 0;
    89 |    __es.__c4@3 = 0u;
            rstr = this;
            return rstr;
    90 |  lab_3:
    91 |    *((int *)((char *)this + 16)) = 1;
    92 |    *((int *)((char *)this + 8)) = 0;
    93 |    excl_time =  0.0000000000000000E+000;
    94 |    __118 = operator new(unsigned long)(24ull);
            if (!(__118 != NULL)) goto lab_9;
    81 |    *((char * *)__118) = NULL;
            *((char * *)((char *)__118 + 8)) = NULL;
            *((char * *)((char *)__118 + 16)) = NULL;
    94 |    __es.__c4@3 = 0u;
          lab_9:
            function_timers = __118;
    95 |    __169 = __118;
   734 |    $$RETB = MPI_Wtime();
    25 |    guard__ZGVZN18CTF_Function_timerC1EPKcddE8__func__ = 1;
    26 |    $$RET0 = __builtin_strlen(name);
            if ($$RET0 + 1ull < 53ull) goto lab_37;
   126 |  lab_37:
            $$RET1 = __builtin_strlen(name);
    26 |    if ($$RET1 + 1ull < 53ull) goto lab_38;
            __assert_fail("strlen(name_)+1 < 53","timer.cxx",26u,&CTF_Function_timer::CTF_Function_timer(char const*, double, double)::__func__)
            return rstr;
          lab_38:
    27 |    __builtin_strcpy(&__120,name);
    28 |    &__120->(CTF_Function_timer).start_time@38.rns3.$$39 = $$RETB;
    29 |    &__120->(CTF_Function_timer).start_excl_time@40.rns4.$$39 =  0.0000000000000000E+000;
    30 |    &__120->(CTF_Function_timer).acc_time@48.rns5.$$39 =  0.0000000000000000E+000;
    31 |    &__120->(CTF_Function_timer).acc_excl_time@50.rns6.$$39 =  0.0000000000000000E+000;
    32 |    &__120->(CTF_Function_timer).calls@58.rns7.$$39 = 0;
   735 |    if (!(*((char * *)((char *)__169 + 8)) != *((char * *)((char *)__169 + 16)))) goto lab_11;
   101 |    if (!(*((char * *)((char *)__169 + 8)) != NULL)) goto lab_32;
   105 |    *((char * *)((char *)__169 + 8))->(CTF_Function_timer).rns200.$$41 = &__120->(CTF_Function_timer).rns201.$$41;
          lab_32:
   738 |    *((char * *)((char *)__169 + 8)) = ((char *)*((char * *)((char *)__169 + 8))  + 120ll);
   739 |    goto lab_13;
          lab_11:
   686 |    __164._M_current@0 = *((char * *)((char *)__169 + 8));
   444 |    std::vector<CTF_Function_timer, std::allocator<CTF_Function_timer> >::_M_insert_aux(__gnu_cxx::__normal_iterator<CTF_Function_timer*, std::vector<CTF_Function_timer, std::allocator<CTF_Function_timer> > >, CTF_Function_timer const&)(__169,__164,&__120)
          lab_13:
    96 |    goto lab_14;
          lab_1:
    97 |    i = 0;
   533 |    if (!(0 < (int) ((unsigned long long) ((*((char * *)((char *)function_timers + 8)) - *((char * *)function_timers)) / 120ll)))) goto lab_17;
            do {   /* id=1 guarded */ /* ~15 */ 
              /* region = 40 */
    98 |      $$RETC.rnn1 = 0 == __builtin_strcmp(((char *)*((char * *)function_timers)  + (long long) ((unsigned long long) i * 120ull)),name);
   611 |      if ($$RETC.rnn1 != 0) goto lab_25;
    97 |      i = i + 1;
   533 |    } while (i < (int) ((unsigned long long) ((*((char * *)((char *)function_timers + 8)) - *((char * *)function_timers)) / 120ll)));    /* ~15 */
          lab_17:
   104 |    *((int *)((char *)this + 8)) = i;
   105 |    *((int *)((char *)this + 16)) = i == 0;
   106 |  lab_28:
          lab_14:
   533 |    if (!(*((int *)((char *)this + 8)) == (int) ((unsigned long long) ((*((char * *)((char *)function_timers + 8)) - *((char * *)function_timers)) / 120ll)))) goto lab_20;
   108 |    __183 = function_timers;
   734 |    $$RETD = MPI_Wtime();
   108 |    $$PARM.start_excl_time_29 = excl_time;
    25 |    guard__ZGVZN18CTF_Function_timerC1EPKcddE8__func__ = 1;
    26 |    $$RET0 = __builtin_strlen(name);
            if ($$RET0 + 1ull < 53ull) goto lab_34;
   126 |  lab_34:
            $$RET1 = __builtin_strlen(name);
    26 |    if ($$RET1 + 1ull < 53ull) goto lab_35;
            __assert_fail("strlen(name_)+1 < 53","timer.cxx",26u,&CTF_Function_timer::CTF_Function_timer(char const*, double, double)::__func__)
            return rstr;
          lab_35:
    27 |    __builtin_strcpy(&__122,name);
    28 |    &__122->(CTF_Function_timer).start_time@38.rns3.$$33 = $$RETD;
    29 |    &__122->(CTF_Function_timer).start_excl_time@40.rns4.$$33 = $$PARM.start_excl_time_29;
    30 |    &__122->(CTF_Function_timer).acc_time@48.rns5.$$33 =  0.0000000000000000E+000;
    31 |    &__122->(CTF_Function_timer).acc_excl_time@50.rns6.$$33 =  0.0000000000000000E+000;
    32 |    &__122->(CTF_Function_timer).calls@58.rns7.$$33 = 0;
   735 |    if (!(*((char * *)((char *)__183 + 8)) != *((char * *)((char *)__183 + 16)))) goto lab_22;
   101 |    if (!(*((char * *)((char *)__183 + 8)) != NULL)) goto lab_30;
   105 |    *((char * *)((char *)__183 + 8))->(CTF_Function_timer).rns200.$$35 = &__122->(CTF_Function_timer).rns201.$$35;
          lab_30:
   738 |    *((char * *)((char *)__183 + 8)) = ((char *)*((char * *)((char *)__183 + 8))  + 120ll);
   739 |    goto lab_24;
          lab_22:
   686 |    __178._M_current@0 = *((char * *)((char *)__183 + 8));
   444 |    std::vector<CTF_Function_timer, std::allocator<CTF_Function_timer> >::_M_insert_aux(__gnu_cxx::__normal_iterator<CTF_Function_timer*, std::vector<CTF_Function_timer, std::allocator<CTF_Function_timer> > >, CTF_Function_timer const&)(__183,__178,&__122)
          lab_24:
   109 |  lab_20:
   110 |    *((char * *)this) = name;
   111 |    *((int *)((char *)this + 12)) = 0;
   113 |    __es.__c4@3 = 0u;
            rstr = this;
            return rstr;
   611 |  lab_25:
   104 |    *((int *)((char *)this + 8)) = i;
   105 |    *((int *)((char *)this + 16)) = i == 0;
            goto lab_28;
   113 |  } /* function */ 



Source        Source        Loop Id       Action / Information                                      
File          Line                                                                                  
----------    ----------    ----------    ----------------------------------------------------------
       229           533             1    Loop cannot be normalized and no loop optimizations 
                                          applied.
       229           533             1    Loop cannot be normalized and no loop optimizations 
                                          applied.
       229           533             1    Loop was not SIMD vectorized because it contains 
                                          function calls.

   139 |  char * CTF_Timer::~CTF_Timer()(char * this)
          {
            rstr = this;
            return rstr;
          } /* function */ 


   115 |  void CTF_Timer::start()(CTF_Timer *this)
          {
   117 |    if (*((int *)((char *)this + 12)) != 0) goto lab_1;
   611 |    __189 = ((char *)*((char * *)function_timers)  + (long long) ((unsigned long long) *((int *)((char *)this + 8)) * 120ull));
            $$RETE = MPI_Wtime();
            *((double *)((char *)__189 + 56)) = $$RETE;
            *((double *)((char *)(*((char * *)function_timers)) + 64 + (long long) ((unsigned long long) *((int *)((char *)this + 8)) * 120ull))) = excl_time;
   120 |  lab_1:
   122 |    return;
          } /* function */ 


   124 |  void CTF_Timer::stop()(CTF_Timer *this)
          {
   126 |    if (*((int *)((char *)this + 12)) != 0) goto lab_1;
   127 |    __195 = function_timers;
            $$BD4 = MPI_Wtime();
   611 |    delta_time = $$BD4 - *((double *)((char *)(*((char * *)__195)) + 56 + (long long) ((unsigned long long) *((int *)((char *)this + 8)) * 120ull)));
            ((double *)((char *)*((char * *)function_timers)  + 72 + (long long) ((unsigned long long) *((int *)((char *)this + 8)) * 120ull)))->(double).rns98. = ((double *)((char *)*((char * *)function_timers)  + 72 + (long long) ((unsigned long long) *((int *)((char *)this + 8)) * 120ull)))->(double).rns98. + ($$BD4 - *((double *)((char *)(*((char * *)__195)) + 56 + (long long) ((unsigned long long) *((int *)((char *)this + 8)) * 120ull))));
            ((double *)((char *)*((char * *)function_timers)  + 80 + (long long) ((unsigned long long) *((int *)((char *)this + 8)) * 120ull)))->(double).rns99. = ((double *)((char *)*((char * *)function_timers)  + 80 + (long long) ((unsigned long long) *((int *)((char *)this + 8)) * 120ull)))->(double).rns99. + (delta_time - (excl_time - *((double *)((char *)(*((char * *)function_timers)) + 64 + (long long) ((unsigned long long) *((int *)((char *)this + 8)) * 120ull)))));
            excl_time = *((double *)((char *)(*((char * *)function_timers)) + 64 + (long long) ((unsigned long long) *((int *)((char *)this + 8)) * 120ull))) + delta_time;
            ((int *)((char *)*((char * *)function_timers)  + 88 + (long long) ((unsigned long long) *((int *)((char *)this + 8)) * 120ull)))->(int).rns100. = ((int *)((char *)*((char * *)function_timers)  + 88 + (long long) ((unsigned long long) *((int *)((char *)this + 8)) * 120ull)))->(int).rns100. + 1;
   258 |    if (!(set_contxt != 0)) goto lab_7;
            if (!(*((int *)((char *)this + 16)) != 0)) goto lab_7;
            if (*((int *)((char *)this + 12)) != 0) goto lab_7;
   259 |    if (!(comm != 1140850688)) goto lab_8;
   261 |    goto lab_17;
   262 |  lab_8:
   263 |    CTF_print_timers(char const*)("all")
  1151 |    *((char * *)((char *)function_timers + 8)) = *((char * *)function_timers);
   265 |    if (!(function_timers != NULL)) goto lab_10;
            $$PARM.this5 = function_timers;
   145 |    if (!(*((char * *)$$PARM.this5) != NULL)) goto lab_11;
    95 |    operator delete(void*)(*((char * *)$$PARM.this5))
   110 |  lab_11:
   132 |    $$PARM.this2 = $$PARM.this5;
   109 |    $$PARM.this0 = $$PARM.this2;
    73 |    $$IRET0 = $$PARM.this0;
   109 |    $$IRET1 = $$PARM.this2;
   132 |    $$IRET2 = $$PARM.this2;
   133 |    $$IRET3 = $$PARM.this5;
   314 |    $$IRET5 = $$PARM.this5;
   265 |    operator delete(void*)(function_timers)
          lab_10:
   266 |    function_timers = NULL;
   268 |  lab_7:
   270 |  lab_17:
   134 |    *((int *)((char *)this + 12)) = 1;
   135 |  lab_1:
   137 |    return;
          } /* function */ 


   139 |  char * CTF_Timer::~CTF_Timer()(char * this)
          {
            rstr = this;
            return rstr;
          } /* function */ 


   141 |  void CTF_print_timers(char const*)(char * name)
          {
            guard___func__19 = 1;
   144 |    MPI_Comm_rank(comm,&rank);
   145 |    MPI_Comm_size(comm,&np);
   148 |    all_symbols = malloc(1000000ull);
   149 |    recv_symbols = malloc(1000000ull);
   150 |    output = NULL;
   152 |    if (!(rank == 0)) goto lab_2;
   156 |    sprintf(&filename,"profile.%s.",name);
            $$RETF = (unsigned int) time(NULL);
   157 |    srand($$RETF)
            $$RET10 = (long long) __builtin_strlen(&filename);
   158 |    sprintf(((char *)&filename  + $$RET10),"%d.",output_file_counter);
   159 |    output_file_counter = output_file_counter + 1;
   162 |    if (!(main_argc > 0)) goto lab_4;
   163 |    if (!(main_argc > 0)) goto lab_8;
            i = 0;
            do {   /* id=10 guarded */ /* ~6 */ 
              /* region = 76 */
   164 |      off = (int) __builtin_strlen(main_argv[(long long) i]);
              if (!(off >= 1)) goto lab_11;
              $$CIVINIT0 = (long long) off;
              $$CIVFINAL0 = (unsigned long long) ((long long) off);
              $$CIV0 = 0ll;
              do {   /* id=11 guarded */ /* ~9 */ 
                /* region = 75 */
                /* bump-normalized */
                off = (int) ($$CIVINIT0 - $$CIV0);
   165 |        if (47 == (int) ((char *)(main_argv[(long long) i]))[($$CIVINIT0 - $$CIV0) - 1ll]) goto lab_69;
   164 |        $$CIV0 = $$CIV0 + 1ll;
              } while ((unsigned long long) $$CIV0 < $$CIVFINAL0);    /* ~9 */
              off = (int) ((long long) ($$CIVFINAL0 * 18446744073709551615ull) + $$CIVINIT0);
            lab_11:
              goto lab_71;
   165 |    lab_69:
   164 |    lab_71:
   167 |      $$RET11 = (long long) __builtin_strlen(&filename);
              sprintf(((char *)&filename  + $$RET11),"%s.",((char *)main_argv[(long long) i]  + (long long) off));
   163 |      i = i + 1;
            } while (i < main_argc);    /* ~6 */
          lab_8:
   169 |  lab_4:
            $$RET12 = (long long) __builtin_strlen(&filename);
   170 |    sprintf(((char *)&filename  + $$RET12),"-p%d.out",np);
   173 |    output = stdout;
   174 |    printf("%s/n",&filename);
   176 |    if (!1) goto lab_16;
            __alignx(32,((char *)&part + (1ll)*(0ll)))
            $$CIV1 = 0ll;
            do {   /* id=9 guarded */ /* ~14 */ 
              /* region = 78 */
              /* bump-normalized */
              /* independent */
   177 |      part[$$CIV1] = 32u;
   176 |      $$CIV1 = $$CIV1 + 1ll;
            } while ((unsigned long long) $$CIV1 < 53ull);    /* ~14 */
          lab_16:
   179 |    part[]@0.off53 = 0u;
   180 |    sprintf(&heading,"%s",&part);
   182 |    sprintf(&part,"       inclusive         exclusive/n");
   183 |    __builtin_strcat(&heading,&part);
   184 |    fprintf(output,"%s",&heading);
   185 |    if (!1) goto lab_19;
            __alignx(32,((char *)&part + (1ll)*(0ll)))
            $$CIV2 = 0ll;
            do {   /* id=8 guarded */ /* ~17 */ 
              /* region = 77 */
              /* bump-normalized */
              /* independent */
   186 |      part[$$CIV2] = 32u;
   185 |      $$CIV2 = $$CIV2 + 1ll;
            } while ((unsigned long long) $$CIV2 < 53ull);    /* ~17 */
          lab_19:
   188 |    part[]@0.off53 = 0u;
   189 |    sprintf(&heading,"%s",&part);
   190 |    sprintf(&part,"calls        sec       %%");
   191 |    __builtin_strcat(&heading,&part);
   192 |    sprintf(&part,"       sec       %%/n");
   193 |    __builtin_strcat(&heading,&part);
   194 |    fprintf(output,"%s",&heading);
   196 |  lab_2:
   197 |    $$len_symbols.nat.0 = 0;
   533 |    if (!(0 < (int) ((unsigned long long) ((*((char * *)((char *)function_timers + 8)) - *((char * *)function_timers)) / 120ll)))) goto lab_22;
   198 |    i.rnn4 = 0;
   533 |    do {   /* id=7 guarded */ /* ~20 */ 
              /* region = 79 */
   611 |      sprintf(((char *)all_symbols  + (long long) $$len_symbols.nat.0),"%s",((char *)*((char * *)function_timers)  + (long long) ((unsigned long long) i.rnn4 * 120ull)));
              $$RET13 = __builtin_strlen(((char *)*((char * *)function_timers)  + (long long) ((unsigned long long) i.rnn4 * 120ull)));
              $$len_symbols.nat.0 = (int) ((unsigned long long) $$len_symbols.nat.0 + ($$RET13 + 1ull));
   198 |      i.rnn4 = i.rnn4 + 1;
   533 |    } while (i.rnn4 < (int) ((unsigned long long) ((*((char * *)((char *)function_timers + 8)) - *((char * *)function_timers)) / 120ll)));    /* ~20 */
          lab_22:
   202 |    len_symbols = $$len_symbols.nat.0;
            if (!(np > 1)) goto lab_23;
   203 |    $$RET14 = log2((double) np);
            len_symbols = $$len_symbols.nat.0;
            if (!( 1.0000000000000000E+000 < $$RET14 +  1.0000000000000000E+000)) goto lab_27;
            lp = 1;
            len_symbols = $$len_symbols.nat.0;
            do {   /* id=4 */ /* ~25 */ 
              /* region = 82 */
   205 |      if (!((1 << lp) / 2 == rank % (1 << lp))) goto lab_28;
   206 |      PMPI_Send(&len_symbols,1,1275069445,rank - (1 << lp) / 2,1,comm);
   207 |      PMPI_Send(all_symbols,len_symbols,1275068673,rank - (1 << lp) / 2,2,comm);
   208 |    lab_28:
   209 |      if (!(0 == rank % (1 << lp))) goto lab_30;
              if (!(rank + (1 << lp) / 2 < np)) goto lab_30;
   211 |      PMPI_Recv(&nrecv_symbols,1,1275069445,rank + (1 << lp) / 2,1,comm,&stat);
   212 |      PMPI_Recv(recv_symbols,nrecv_symbols,1275068673,rank + (1 << lp) / 2,2,comm,&stat);
   213 |      if (!(0 < nrecv_symbols)) goto lab_35;
              i.rnn4.rnnA = 0;
              do {   /* id=5 guarded */ /* ~33 */ 
                /* region = 81 */
   214 |        j = 0;
   215 |        if (!(0 < len_symbols)) goto lab_38;
                $$RET15.rnn2 = 0 == __builtin_strcmp(all_symbols,((char *)recv_symbols  + (long long) i.rnn4.rnnA));
                if (!($$RET15.rnn2 == 0)) goto lab_38;
                do {   /* id=6 */ /* ~36 */ 
                  /* region = 80 */
                  $$RET16 = __builtin_strlen(((char *)all_symbols  + (long long) j));
   216 |          j = (int) ((unsigned long long) j + ($$RET16 + 1ull));
   215 |          if (!(j < len_symbols)) goto lab_38;
                  $$RET17.rnn8 = 0 == __builtin_strcmp(((char *)all_symbols  + (long long) j),((char *)recv_symbols  + (long long) i.rnn4.rnnA));
                } while ($$RET17.rnn8 == 0);    /* ~36 */
              lab_38:
   219 |        if (!(j >= len_symbols)) goto lab_41;
   220 |        sprintf(((char *)all_symbols  + (long long) len_symbols),"%s",((char *)recv_symbols  + (long long) i.rnn4.rnnA));
   221 |        $$SFX1 = (unsigned long long) len_symbols;
                $$RET18 = __builtin_strlen(((char *)recv_symbols  + (long long) i.rnn4.rnnA));
                len_symbols = (int) (1ull + ($$RET18 + $$SFX1));
   222 |      lab_41:
   223 |        $$RET19 = __builtin_strlen(((char *)recv_symbols  + (long long) i.rnn4.rnnA));
   213 |        i.rnn4.rnnA = (int) ((unsigned long long) i.rnn4.rnnA + ($$RET19 + 1ull));
              } while (i.rnn4.rnnA < nrecv_symbols);    /* ~33 */
            lab_35:
   224 |    lab_30:
   203 |      lp = lp + 1;
              $$RET1A = log2((double) np);
            } while ((double) lp < $$RET1A +  1.0000000000000000E+000);    /* ~25 */
          lab_27:
   226 |    PMPI_Bcast(&len_symbols,1,1275069445,0,comm);
   227 |    PMPI_Bcast(all_symbols,len_symbols,1275068673,0,comm);
   229 |    if (!(0 < len_symbols)) goto lab_45;
   228 |    j.rnn9 = 0;
   229 |    do {   /* id=3 guarded */ /* ~43 */ 
              /* region = 83 */
   230 |      CTF_Timer::CTF_Timer(char const*)(&t,((char *)all_symbols  + (long long) j.rnn9));
              $$RET1B = __builtin_strlen(((char *)all_symbols  + (long long) j.rnn9));
   231 |      j.rnn9 = (int) ((unsigned long long) j.rnn9 + ($$RET1B + 1ull));
   229 |    } while (j.rnn9 < len_symbols);    /* ~43 */
          lab_45:
   233 |  lab_23:
   234 |    if (len_symbols <= 1000000) goto lab_53;
            __assert_fail("len_symbols <= 1000000","timer.cxx",234u,&__func__)
            return;
          lab_53:
   686 |    __233._M_current@0 = *((char * *)function_timers);
   426 |    __353 = __233;
   686 |    __238._M_current@0 = *((char * *)((char *)function_timers + 8));
   444 |    __354 = __238;
  5256 |    if (!(__353._M_current@0 != __354._M_current@0)) goto lab_54;
  5258 |    $$RET1C = __builtin_clzl((__354._M_current@0 - __353._M_current@0) / 120ll);
  5244 |    void std::__introsort_loop<__gnu_cxx::__normal_iterator<CTF_Function_timer*, std::vector<CTF_Function_timer, std::allocator<CTF_Function_timer> > >, long, bool (*)(CTF_Function_timer const&, CTF_Function_timer const&)>(__gnu_cxx::__normal_iterator<CTF_Function_timer*, std::vector<CTF_Function_timer, std::allocator<CTF_Function_timer> > >, __gnu_cxx::__normal_iterator<CTF_Function_timer*, std::vector<CTF_Function_timer, std::allocator<CTF_Function_timer> > >, long, bool (*)(CTF_Function_timer const&, CTF_Function_timer const&))(__233,__238,(long long) ($$RET1C * 18446744073709551614ull + 126ull),&comp_name(CTF_Function_timer const&, CTF_Function_timer const&))
  5260 |    void std::__final_insertion_sort<__gnu_cxx::__normal_iterator<CTF_Function_timer*, std::vector<CTF_Function_timer, std::allocator<CTF_Function_timer> > >, bool (*)(CTF_Function_timer const&, CTF_Function_timer const&)>(__gnu_cxx::__normal_iterator<CTF_Function_timer*, std::vector<CTF_Function_timer, std::allocator<CTF_Function_timer> > >, __gnu_cxx::__normal_iterator<CTF_Function_timer*, std::vector<CTF_Function_timer, std::allocator<CTF_Function_timer> > >, bool (*)(CTF_Function_timer const&, CTF_Function_timer const&))(__233,__238,&comp_name(CTF_Function_timer const&, CTF_Function_timer const&))
  5261 |  lab_54:
   533 |    if (!(0 < (int) ((unsigned long long) ((*((char * *)((char *)function_timers + 8)) - *((char * *)function_timers)) / 120ll)))) goto lab_58;
   237 |    i.rnn3 = 0;
   533 |    do {   /* id=2 guarded */ /* ~56 */ 
              /* region = 84 */
   611 |      $$PARM.this32 = ((char *)*((char * *)function_timers)  + (long long) ((unsigned long long) i.rnn3 * 120ull));
              $$PARM.comm33 = comm;
    36 |      PMPI_Allreduce((((char *)*((char * *)function_timers)  + (long long) ((unsigned long long) i.rnn3 * 120ull)) + 72),(((char *)*((char * *)function_timers)  + (long long) ((unsigned long long) i.rnn3 * 120ull)) + 96),1,1275070475,1476395011,comm);
    38 |      PMPI_Allreduce(($$PARM.this32 + 80),($$PARM.this32 + 104),1,1275070475,1476395011,$$PARM.comm33);
    40 |      PMPI_Allreduce(($$PARM.this32 + 88),($$PARM.this32 + 112),1,1275069445,1476395011,$$PARM.comm33);
   237 |      i.rnn3 = i.rnn3 + 1;
   533 |    } while (i.rnn3 < (int) ((unsigned long long) ((*((char * *)((char *)function_timers + 8)) - *((char * *)function_timers)) / 120ll)));    /* ~56 */
          lab_58:
   686 |    __276._M_current@0 = *((char * *)function_timers);
   426 |    __315 = __276;
   686 |    __281._M_current@0 = *((char * *)((char *)function_timers + 8));
   444 |    __316 = __281;
  5218 |    if (!(__315._M_current@0 != __316._M_current@0)) goto lab_59;
  5220 |    $$RET1D = __builtin_clzl((__316._M_current@0 - __315._M_current@0) / 120ll);
  5209 |    void std::__introsort_loop<__gnu_cxx::__normal_iterator<CTF_Function_timer*, std::vector<CTF_Function_timer, std::allocator<CTF_Function_timer> > >, long>(__gnu_cxx::__normal_iterator<CTF_Function_timer*, std::vector<CTF_Function_timer, std::allocator<CTF_Function_timer> > >, __gnu_cxx::__normal_iterator<CTF_Function_timer*, std::vector<CTF_Function_timer, std::allocator<CTF_Function_timer> > >, long)(__276,__281,(long long) ($$RET1D * 18446744073709551614ull + 126ull))
  5222 |    void std::__final_insertion_sort<__gnu_cxx::__normal_iterator<CTF_Function_timer*, std::vector<CTF_Function_timer, std::allocator<CTF_Function_timer> > > >(__gnu_cxx::__normal_iterator<CTF_Function_timer*, std::vector<CTF_Function_timer, std::allocator<CTF_Function_timer> > >, __gnu_cxx::__normal_iterator<CTF_Function_timer*, std::vector<CTF_Function_timer, std::allocator<CTF_Function_timer> > >)(__276,__281)
  5223 |  lab_59:
   611 |    complete_time = *((char * *)function_timers)->(CTF_Function_timer).total_time@60.rns151.;
   242 |    if (!(rank == 0)) goto lab_61;
   533 |    if (!(0 < (int) ((unsigned long long) ((*((char * *)((char *)function_timers + 8)) - *((char * *)function_timers)) / 120ll)))) goto lab_65;
   243 |    i.rnn3.rnn7 = 0;
   533 |    do {   /* id=1 guarded */ /* ~63 */ 
              /* region = 85 */
   611 |      CTF_Function_timer::print(_IO_FILE*, int, int, int)(((char *)*((char * *)function_timers)  + (long long) ((unsigned long long) i.rnn3.rnn7 * 120ull)),output,comm,rank,np)
   243 |      i.rnn3.rnn7 = i.rnn3.rnn7 + 1;
   533 |    } while (i.rnn3.rnn7 < (int) ((unsigned long long) ((*((char * *)((char *)function_timers + 8)) - *((char * *)function_timers)) / 120ll)));    /* ~63 */
          lab_65:
   246 |  lab_61:
   248 |    free(recv_symbols)
   249 |    free(all_symbols)
   254 |    return;
          } /* function */ 



Source        Source        Loop Id       Action / Information                                      
File          Line                                                                                  
----------    ----------    ----------    ----------------------------------------------------------
         0           163            10    Loop cannot be normalized and no loop optimizations 
                                          applied.
         0           163            10    Loop cannot be normalized and no loop optimizations 
                                          applied.
         0           163            10    Loop cannot be normalized and no loop optimizations 
                                          applied.
         0           163            10    Loop cannot be normalized and no loop optimizations 
                                          applied.
         0           163            10    Loop was not SIMD vectorized because it contains 
                                          function calls.
         0           164            11    Loop was not SIMD vectorized because it contains 
                                          unsupported loop structure.
         0           164            11    Loop was not SIMD vectorized because it contains 
                                          control flow.
         0           176             9    Loop was not SIMD vectorized because it is not 
                                          profitable to vectorize.
         0           177                  Loop was not SIMD vectorized because it contains 
                                          unsupported vector data types.
         0           185             8    Loop was not SIMD vectorized because it is not 
                                          profitable to vectorize.
         0           186                  Loop was not SIMD vectorized because it contains 
                                          unsupported vector data types.
       229           533             7    Loop cannot be normalized and no loop optimizations 
                                          applied.
       229           533             7    Loop cannot be normalized and no loop optimizations 
                                          applied.
       229           533             7    Loop cannot be normalized and no loop optimizations 
                                          applied.
       229           533             7    Loop cannot be normalized and no loop optimizations 
                                          applied.
       229           533             7    Loop was not SIMD vectorized because it contains 
                                          function calls.
         0           203             4    Loop cannot be normalized and no loop optimizations 
                                          applied.
         0           203             4    Loop cannot be normalized and no loop optimizations 
                                          applied.
         0           203             4    Loop cannot be normalized and no loop optimizations 
                                          applied.
         0           203             4    Loop cannot be normalized and no loop optimizations 
                                          applied.
         0           203             4    Loop was not SIMD vectorized because it contains 
                                          function calls.
         0           213             5    Loop was not SIMD vectorized because it contains 
                                          function calls.
         0           215             6    Loop was not SIMD vectorized because it contains 
                                          function calls.
         0           229             3    Loop was not SIMD vectorized because it contains 
                                          function calls.
       229           533             2    Loop cannot be normalized and no loop optimizations 
                                          applied.
       229           533             2    Loop cannot be normalized and no loop optimizations 
                                          applied.
       229           533             2    Loop cannot be normalized and no loop optimizations 
                                          applied.
       229           533             2    Loop cannot be normalized and no loop optimizations 
                                          applied.
       229           533             2    Loop was not SIMD vectorized because it contains 
                                          function calls.
       229           533             1    Loop cannot be normalized and no loop optimizations 
                                          applied.
       229           533             1    Loop cannot be normalized and no loop optimizations 
                                          applied.
       229           533             1    Loop cannot be normalized and no loop optimizations 
                                          applied.
       229           533             1    Loop cannot be normalized and no loop optimizations 
                                          applied.
       229           533             1    Loop was not SIMD vectorized because it contains 
                                          function calls.

   256 |  void CTF_Timer::exit()(CTF_Timer *this)
          {
   258 |    if (!(set_contxt != 0)) goto lab_1;
            if (!(*((int *)((char *)this + 16)) != 0)) goto lab_1;
            if (*((int *)((char *)this + 12)) != 0) goto lab_1;
   259 |    if (!(comm != 1140850688)) goto lab_5;
   261 |    goto lab_10;
   262 |  lab_5:
   263 |    CTF_print_timers(char const*)("all")
  1151 |    *((char * *)((char *)function_timers + 8)) = *((char * *)function_timers);
   265 |    if (!(function_timers != NULL)) goto lab_8;
            $$PARM.this5 = function_timers;
   145 |    if (!(*((char * *)$$PARM.this5) != NULL)) goto lab_11;
    95 |    operator delete(void*)(*((char * *)$$PARM.this5))
   110 |  lab_11:
   132 |    $$PARM.this2 = $$PARM.this5;
   109 |    $$PARM.this0 = $$PARM.this2;
    73 |    $$IRET0 = $$PARM.this0;
   109 |    $$IRET1 = $$PARM.this2;
   132 |    $$IRET2 = $$PARM.this2;
   133 |    $$IRET3 = $$PARM.this5;
   314 |    $$IRET5 = $$PARM.this5;
   265 |    operator delete(void*)(function_timers)
          lab_8:
   266 |    function_timers = NULL;
   268 |  lab_1:
   270 |  lab_10:
            return;
          } /* function */ 


   272 |  void CTF_set_main_args(int, char const* const*)(int argc, char * argv)
          {
   273 |    main_argv = argv;
   274 |    main_argc = argc;
   275 |    return;
          } /* function */ 


   277 |  void CTF_set_context(int)(int ctxt)
          {
   278 |    if (set_contxt != 0) goto lab_1;
   279 |    comm = ctxt;
          lab_1:
   280 |    set_contxt = 1;
   281 |    return;
          } /* function */ 


   283 |  char * CTF_Timer_epoch::CTF_Timer_epoch(char const*)(char * this, char * name_)
          {
    81 |    ((char * *)((char *)this  + 16))->(_Vector_impl;vector<CTF_Function_timer,std::allocator<CTF_Function_timer> >)._M_start@0.rns164. = NULL;
            ((char * *)((char *)this  + 16))->(_Vector_impl;vector<CTF_Function_timer,std::allocator<CTF_Function_timer> >)._M_finish@8.rns165. = NULL;
            ((char * *)((char *)this  + 16))->(_Vector_impl;vector<CTF_Function_timer,std::allocator<CTF_Function_timer> >)._M_end_of_storage@10.rns166. = NULL;
   285 |    *((char * *)(this + 48)) = name_;
   287 |    rstr = this;
            return rstr;
          } /* function */ 


   283 |  char * CTF_Timer_epoch::CTF_Timer_epoch(char const*)(char * this, char * name_)
          {
    81 |    ((char * *)((char *)this  + 16))->(_Vector_impl;vector<CTF_Function_timer,std::allocator<CTF_Function_timer> >)._M_start@0.rns168. = NULL;
            ((char * *)((char *)this  + 16))->(_Vector_impl;vector<CTF_Function_timer,std::allocator<CTF_Function_timer> >)._M_finish@8.rns169. = NULL;
            ((char * *)((char *)this  + 16))->(_Vector_impl;vector<CTF_Function_timer,std::allocator<CTF_Function_timer> >)._M_end_of_storage@10.rns170. = NULL;
   285 |    *((char * *)(this + 48)) = name_;
   287 |    rstr = this;
            return rstr;
          } /* function */ 


   289 |  void CTF_Timer_epoch::begin()(CTF_Timer_epoch *this)
          {
            __es.__l@0 = 0;
            __es.__t@8 = &__fsm_tab;
            __es.__this@10 = this;
            __es.__i@18 = 0;
   291 |    __425 = operator new(unsigned long)(24ull);
            if (!(__425 != NULL)) goto lab_2;
            __es.__c4@3 = 1u;
            CTF_Timer::CTF_Timer(char const*)(__425,*((char * *)((char *)this + 48)));
            __es.__c4@3 = 0u;
          lab_2:
            *((char * *)((char *)this + 8)) = __425;
   292 |    $$PARM.this58 = __425;
   117 |    if (*((int *)((char *)$$PARM.this58 + 12)) != 0) goto lab_13;
   611 |    __189 = ((char *)*((char * *)function_timers)  + (long long) ((unsigned long long) *((int *)((char *)$$PARM.this58 + 8)) * 120ull));
            $$RETE = MPI_Wtime();
            *((double *)((char *)__189 + 56)) = $$RETE;
            *((double *)((char *)(*((char * *)function_timers)) + 64 + (long long) ((unsigned long long) *((int *)((char *)$$PARM.this58 + 8)) * 120ull))) = excl_time;
   120 |  lab_13:
   293 |    std::vector<CTF_Function_timer, std::allocator<CTF_Function_timer> >::operator=(std::vector<CTF_Function_timer, std::allocator<CTF_Function_timer> > const&)((this + 16),function_timers);
   294 |    *((double *)((char *)this + 40)) = excl_time;
   295 |    excl_time =  0.0000000000000000E+000;
  1151 |    *((char * *)((char *)function_timers + 8)) = *((char * *)function_timers);
   297 |    __426 = operator new(unsigned long)(24ull);
            if (!(__426 != NULL)) goto lab_5;
            __es.__c4@3 = 2u;
            CTF_Timer::CTF_Timer(char const*)(__426,*((char * *)((char *)this + 48)));
            __es.__c4@3 = 0u;
          lab_5:
            *((char * *)this) = __426;
   298 |    $$PARM.this57 = __426;
   117 |    if (*((int *)((char *)$$PARM.this57 + 12)) != 0) goto lab_11;
   611 |    __189 = ((char *)*((char * *)function_timers)  + (long long) ((unsigned long long) *((int *)((char *)$$PARM.this57 + 8)) * 120ull));
            $$RETE = MPI_Wtime();
            *((double *)((char *)__189 + 56)) = $$RETE;
            *((double *)((char *)(*((char * *)function_timers)) + 64 + (long long) ((unsigned long long) *((int *)((char *)$$PARM.this57 + 8)) * 120ull))) = excl_time;
   120 |  lab_11:
   300 |    return;
          } /* function */ 


   302 |  void CTF_Timer_epoch::end()(CTF_Timer_epoch *this)
          {
            __es.__l@0 = 0;
            __es.__t@8 = &__fsm_tab;
            __es.__this@10 = this;
            __es.__i@18 = 0;
   304 |    $$PARM.this56 = *((char * *)this);
   126 |    if (*((int *)((char *)$$PARM.this56 + 12)) != 0) goto lab_39;
   127 |    __195 = function_timers;
            $$BD4 = MPI_Wtime();
   611 |    delta_time = $$BD4 - *((double *)((char *)(*((char * *)__195)) + 56 + (long long) ((unsigned long long) *((int *)((char *)$$PARM.this56 + 8)) * 120ull)));
            ((double *)((char *)*((char * *)function_timers)  + 72 + (long long) ((unsigned long long) *((int *)((char *)$$PARM.this56 + 8)) * 120ull)))->(double).rns98.$$110 = ((double *)((char *)*((char * *)function_timers)  + 72 + (long long) ((unsigned long long) *((int *)((char *)$$PARM.this56 + 8)) * 120ull)))->(double).rns98.$$110 + ($$BD4 - *((double *)((char *)(*((char * *)__195)) + 56 + (long long) ((unsigned long long) *((int *)((char *)$$PARM.this56 + 8)) * 120ull))));
            ((double *)((char *)*((char * *)function_timers)  + 80 + (long long) ((unsigned long long) *((int *)((char *)$$PARM.this56 + 8)) * 120ull)))->(double).rns99.$$110 = ((double *)((char *)*((char * *)function_timers)  + 80 + (long long) ((unsigned long long) *((int *)((char *)$$PARM.this56 + 8)) * 120ull)))->(double).rns99.$$110 + (delta_time - (excl_time - *((double *)((char *)(*((char * *)function_timers)) + 64 + (long long) ((unsigned long long) *((int *)((char *)$$PARM.this56 + 8)) * 120ull)))));
            excl_time = *((double *)((char *)(*((char * *)function_timers)) + 64 + (long long) ((unsigned long long) *((int *)((char *)$$PARM.this56 + 8)) * 120ull))) + delta_time;
            ((int *)((char *)*((char * *)function_timers)  + 88 + (long long) ((unsigned long long) *((int *)((char *)$$PARM.this56 + 8)) * 120ull)))->(int).rns100.$$110 = ((int *)((char *)*((char * *)function_timers)  + 88 + (long long) ((unsigned long long) *((int *)((char *)$$PARM.this56 + 8)) * 120ull)))->(int).rns100.$$110 + 1;
   258 |    if (!(set_contxt != 0)) goto lab_40;
            if (!(*((int *)((char *)$$PARM.this56 + 16)) != 0)) goto lab_40;
            if (*((int *)((char *)$$PARM.this56 + 12)) != 0) goto lab_40;
   259 |    if (!(comm != 1140850688)) goto lab_41;
   261 |    goto lab_50;
   262 |  lab_41:
   263 |    CTF_print_timers(char const*)("all")
  1151 |    *((char * *)((char *)function_timers + 8)) = *((char * *)function_timers);
   265 |    if (!(function_timers != NULL)) goto lab_43;
            $$PARM.this5 = function_timers;
   145 |    if (!(*((char * *)$$PARM.this5) != NULL)) goto lab_44;
    95 |    operator delete(void*)(*((char * *)$$PARM.this5))
   110 |  lab_44:
   132 |    $$PARM.this2 = $$PARM.this5;
   109 |    $$PARM.this0 = $$PARM.this2;
    73 |    $$IRET0 = $$PARM.this0;
   109 |    $$IRET1 = $$PARM.this2;
   132 |    $$IRET2 = $$PARM.this2;
   133 |    $$IRET3 = $$PARM.this5;
   314 |    $$IRET5 = $$PARM.this5;
   265 |    operator delete(void*)(function_timers)
          lab_43:
   266 |    function_timers = NULL;
   268 |  lab_40:
   270 |  lab_50:
   134 |    *((int *)((char *)$$PARM.this56 + 12)) = 1;
   135 |  lab_39:
   305 |    if (!(function_timers != NULL)) goto lab_1;
  1151 |    *((char * *)((char *)function_timers + 8)) = *((char * *)function_timers);
   307 |    $$PARM.this4 = function_timers;
   145 |    if (!(*((char * *)$$PARM.this4) != NULL)) goto lab_18;
    95 |    operator delete(void*)(*((char * *)$$PARM.this4))
   110 |  lab_18:
   132 |    $$PARM.this2 = $$PARM.this4;
   109 |    $$PARM.this0 = $$PARM.this2;
    73 |    $$IRET0 = $$PARM.this0;
   109 |    $$IRET1 = $$PARM.this2;
   132 |    $$IRET2 = $$PARM.this2;
   133 |    $$IRET3 = $$PARM.this4;
   314 |    $$IRET4 = $$PARM.this4;
   307 |    operator delete(void*)(function_timers)
   308 |  lab_1:
   309 |    __450 = operator new(unsigned long)(24ull);
            if (!(__450 != NULL)) goto lab_7;
            __es.__c4@3 = 1u;
            $$PARM.this8 = __450;
    81 |    *((char * *)$$PARM.this8) = NULL;
            *((char * *)((char *)$$PARM.this8 + 8)) = NULL;
            *((char * *)((char *)$$PARM.this8 + 16)) = NULL;
   208 |    $$IRET8 = $$PARM.this8;
   309 |    __es.__c4@3 = 0u;
          lab_7:
            function_timers = __450;
   310 |    std::vector<CTF_Function_timer, std::allocator<CTF_Function_timer> >::operator=(std::vector<CTF_Function_timer, std::allocator<CTF_Function_timer> > const&)(__450,(this + 16));
   311 |    excl_time = *((double *)((char *)this + 40));
   313 |    $$PARM.this55 = *((char * *)((char *)this + 8));
   126 |    if (*((int *)((char *)$$PARM.this55 + 12)) != 0) goto lab_26;
   127 |    __195 = function_timers;
            $$BD4 = MPI_Wtime();
   611 |    delta_time = $$BD4 - *((double *)((char *)(*((char * *)__195)) + 56 + (long long) ((unsigned long long) *((int *)((char *)$$PARM.this55 + 8)) * 120ull)));
            ((double *)((char *)*((char * *)function_timers)  + 72 + (long long) ((unsigned long long) *((int *)((char *)$$PARM.this55 + 8)) * 120ull)))->(double).rns98.$$113 = ((double *)((char *)*((char * *)function_timers)  + 72 + (long long) ((unsigned long long) *((int *)((char *)$$PARM.this55 + 8)) * 120ull)))->(double).rns98.$$113 + ($$BD4 - *((double *)((char *)(*((char * *)__195)) + 56 + (long long) ((unsigned long long) *((int *)((char *)$$PARM.this55 + 8)) * 120ull))));
            ((double *)((char *)*((char * *)function_timers)  + 80 + (long long) ((unsigned long long) *((int *)((char *)$$PARM.this55 + 8)) * 120ull)))->(double).rns99.$$113 = ((double *)((char *)*((char * *)function_timers)  + 80 + (long long) ((unsigned long long) *((int *)((char *)$$PARM.this55 + 8)) * 120ull)))->(double).rns99.$$113 + (delta_time - (excl_time - *((double *)((char *)(*((char * *)function_timers)) + 64 + (long long) ((unsigned long long) *((int *)((char *)$$PARM.this55 + 8)) * 120ull)))));
            excl_time = *((double *)((char *)(*((char * *)function_timers)) + 64 + (long long) ((unsigned long long) *((int *)((char *)$$PARM.this55 + 8)) * 120ull))) + delta_time;
            ((int *)((char *)*((char * *)function_timers)  + 88 + (long long) ((unsigned long long) *((int *)((char *)$$PARM.this55 + 8)) * 120ull)))->(int).rns100.$$113 = ((int *)((char *)*((char * *)function_timers)  + 88 + (long long) ((unsigned long long) *((int *)((char *)$$PARM.this55 + 8)) * 120ull)))->(int).rns100.$$113 + 1;
   258 |    if (!(set_contxt != 0)) goto lab_27;
            if (!(*((int *)((char *)$$PARM.this55 + 16)) != 0)) goto lab_27;
            if (*((int *)((char *)$$PARM.this55 + 12)) != 0) goto lab_27;
   259 |    if (!(comm != 1140850688)) goto lab_28;
   261 |    goto lab_37;
   262 |  lab_28:
   263 |    CTF_print_timers(char const*)("all")
  1151 |    *((char * *)((char *)function_timers + 8)) = *((char * *)function_timers);
   265 |    if (!(function_timers != NULL)) goto lab_30;
            $$PARM.this5 = function_timers;
   145 |    if (!(*((char * *)$$PARM.this5) != NULL)) goto lab_31;
    95 |    operator delete(void*)(*((char * *)$$PARM.this5))
   110 |  lab_31:
   132 |    $$PARM.this2 = $$PARM.this5;
   109 |    $$PARM.this0 = $$PARM.this2;
    73 |    $$IRET0 = $$PARM.this0;
   109 |    $$IRET1 = $$PARM.this2;
   132 |    $$IRET2 = $$PARM.this2;
   133 |    $$IRET3 = $$PARM.this5;
   314 |    $$IRET5 = $$PARM.this5;
   265 |    operator delete(void*)(function_timers)
          lab_30:
   266 |    function_timers = NULL;
   268 |  lab_27:
   270 |  lab_37:
   134 |    *((int *)((char *)$$PARM.this55 + 12)) = 1;
   135 |  lab_26:
   314 |    if (!(*((char * *)((char *)this + 8)) != NULL)) goto lab_10;
            $$PARM.this9 = *((char * *)((char *)this + 8));
   139 |    $$IRET9 = $$PARM.this9;
   314 |    operator delete(void*)(*((char * *)((char *)this + 8)))
          lab_10:
   316 |    return;
          } /* function */ 


   104 |  void __gnu_cxx::new_allocator<CTF_Function_timer>::construct(CTF_Function_timer*, CTF_Function_timer const&)(char * this, CTF_Function_timer *__p, CTF_Function_timer *__val)
   105 |  {
   101 |    if (!(__p != NULL)) goto lab_2;
   105 |    *__p = *__val;
          lab_2:
            return;
          } /* function */ 


   207 |  char * std::vector<CTF_Function_timer, std::allocator<CTF_Function_timer> >::vector()(_Vector_impl;vector<CTF_Function_timer,std::allocator<CTF_Function_timer> > *this)
   208 |  {
    81 |    *((char * *)this) = NULL;
            *((char * *)((char *)this + 8)) = NULL;
            *((char * *)((char *)this + 16)) = NULL;
   208 |    rstr = this;
            return rstr;
          } /* function */ 


   312 |  char * std::vector<CTF_Function_timer, std::allocator<CTF_Function_timer> >::~vector()(_Vector_impl *this)
   313 |  {
   145 |    if (!(*((char * *)this) != NULL)) goto lab_1;
    95 |    operator delete(void*)(*((char * *)this))
   110 |  lab_1:
   132 |    $$PARM.this2 = this;
   109 |    $$PARM.this0 = $$PARM.this2;
    73 |    $$IRET0 = $$PARM.this0;
   109 |    $$IRET1 = $$PARM.this2;
   132 |    $$IRET2 = $$PARM.this2;
   133 |    $$IRET3 = this;
   314 |    rstr = this;
            return rstr;
          } /* function */ 


   156 |  char * std::vector<CTF_Function_timer, std::allocator<CTF_Function_timer> >::operator=(std::vector<CTF_Function_timer, std::allocator<CTF_Function_timer> > const&)(vector<CTF_Function_timer,std::allocator<CTF_Function_timer> > *this, _Vector_base<CTF_Function_timer,std::allocator<CTF_Function_timer> > *__x)
   158 |  {
   159 |    if (!(__x != this)) goto lab_1;
   161 |    __xlen = (unsigned long long) ((*((char * *)((char *)__x + 8)) - *((char * *)__x)) / 120ll);
   162 |    if (!((unsigned long long) ((*((char * *)((char *)__x + 8)) - *((char * *)__x)) / 120ll) > (unsigned long long) ((*((char * *)((char *)this + 16)) - *((char * *)this)) / 120ll))) goto lab_3;
   435 |    __593._M_current@0 = *((char * *)__x);
   453 |    __598._M_current@0 = *((char * *)((char *)__x + 8));
            __tmp = CTF_Function_timer* std::vector<CTF_Function_timer, std::allocator<CTF_Function_timer> >::_M_allocate_and_copy<__gnu_cxx::__normal_iterator<CTF_Function_timer const*, std::vector<CTF_Function_timer, std::allocator<CTF_Function_timer> > > >(unsigned long, __gnu_cxx::__normal_iterator<CTF_Function_timer const*, std::vector<CTF_Function_timer, std::allocator<CTF_Function_timer> > >, __gnu_cxx::__normal_iterator<CTF_Function_timer const*, std::vector<CTF_Function_timer, std::allocator<CTF_Function_timer> > >)(this,(unsigned long long) ((*((char * *)((char *)__x + 8)) - *((char * *)__x)) / 120ll),__593,__598);
   145 |    if (!(*((char * *)this) != NULL)) goto lab_5;
    95 |    operator delete(void*)(*((char * *)this))
   110 |  lab_5:
   171 |    *((char * *)this) = __tmp;
   172 |    *((char * *)((char *)this + 16)) = ((char *)__tmp  + (long long) (__xlen * 120ull));
   173 |    goto lab_7;
          lab_3:
   174 |    if (!((unsigned long long) ((*((char * *)((char *)this + 8)) - *((char * *)this)) / 120ll) >= (unsigned long long) ((*((char * *)((char *)__x + 8)) - *((char * *)__x)) / 120ll))) goto lab_8;
   435 |    __681._M_current@0 = *((char * *)__x);
   453 |    __686._M_current@0 = *((char * *)((char *)__x + 8));
   686 |    __691._M_current@0 = *((char * *)this);
   426 |    __866 = __691;
   466 |    __860 = __681;
            __861 = __686;
   459 |    if (!((unsigned long long) ((__861._M_current@0 - __860._M_current@0) / 120ll) > 16ull)) goto lab_31;
            if (!((((__861._M_current@0 - __860._M_current@0) / 120ll) * 120ll + (long long) __866._M_current@0) - 120ll < (long long) __860._M_current@0 | (((__861._M_current@0 - __860._M_current@0) / 120ll) * 120ll + (long long) __860._M_current@0) - 120ll < (long long) __866._M_current@0)) goto lab_27;
   341 |    if (!((__861._M_current@0 - __860._M_current@0) / 120ll > 0ll)) goto lab_12;
            $$CIV3 = 0ll;
            do {   /* id=2 guarded */ /* ~10 */ 
              /* region = 52 */
              /* bump-normalized */
              /* independent */
   343 |      __866._M_current@0[$$CIV3] = __860._M_current@0[$$CIV3];
   341 |      $$CIV3 = $$CIV3 + 1ll;
            } while ((unsigned long long) $$CIV3 < (unsigned long long) ((__861._M_current@0 - __860._M_current@0) / 120ll));    /* ~10 */
          lab_12:
            goto lab_28;
          lab_27:
          lab_31:
            if (!((__861._M_current@0 - __860._M_current@0) / 120ll > 0ll)) goto lab_30;
            $$CIV3 = 0ll;
            do {   /* id=5 guarded */ /* ~29 */ 
              /* region = 53 */
              /* bump-normalized */
   343 |      __866._M_current@0[$$CIV3] = __860._M_current@0[$$CIV3];
   341 |      $$CIV3 = $$CIV3 + 1ll;
            } while ((unsigned long long) $$CIV3 < (unsigned long long) ((__861._M_current@0 - __860._M_current@0) / 120ll));    /* ~29 */
          lab_30:
          lab_28:
   178 |    goto lab_13;
          lab_8:
   459 |    if (!((((*((char * *)((char *)this + 8)) - *((char * *)this)) / 120ll) * 120ll) / 120ll > 0ll)) goto lab_21;
   341 |    if (!((unsigned long long) ((((*((char * *)((char *)this + 8)) - *((char * *)this)) / 120ll) * 120ll) / 120ll) > 16ull)) goto lab_26;
            if (!((((((*((char * *)((char *)this + 8)) - *((char * *)this)) / 120ll) * 120ll) / 120ll) * 120ll + (long long) *((char * *)this)) - 120ll < (long long) *((char * *)__x) | (((((*((char * *)((char *)this + 8)) - *((char * *)this)) / 120ll) * 120ll) / 120ll) * 120ll + (long long) *((char * *)__x)) - 120ll < (long long) *((char * *)this))) goto lab_22;
            if (!1) goto lab_16;
            $$CIV4 = 0ll;
            do {   /* id=1 guarded */ /* ~14 */ 
              /* region = 54 */
              /* bump-normalized */
              /* independent */
   343 |      ((aggr120 *)(*((char * *)this)))[$$CIV4] = ((aggr120 *)(*((char * *)__x)))[$$CIV4];
   341 |      $$CIV4 = $$CIV4 + 1ll;
            } while ((unsigned long long) $$CIV4 < (unsigned long long) ((((*((char * *)((char *)this + 8)) - *((char * *)this)) / 120ll) * 120ll) / 120ll));    /* ~14 */
          lab_16:
            goto lab_23;
          lab_22:
          lab_26:
            if (!1) goto lab_25;
            $$CIV4 = 0ll;
            do {   /* id=4 guarded */ /* ~24 */ 
              /* region = 55 */
              /* bump-normalized */
   343 |      ((aggr120 *)(*((char * *)this)))[$$CIV4] = ((aggr120 *)(*((char * *)__x)))[$$CIV4];
   341 |      $$CIV4 = $$CIV4 + 1ll;
            } while ((unsigned long long) $$CIV4 < (unsigned long long) ((((*((char * *)((char *)this + 8)) - *((char * *)this)) / 120ll) * 120ll) / 120ll));    /* ~24 */
          lab_25:
          lab_23:
          lab_21:
   115 |    $$PARM.__first16 = ((char *)*((char * *)__x)  + ((*((char * *)((char *)this + 8)) - *((char * *)this)) / 120ll) * 120ll);
    70 |    __cur = *((char * *)((char *)this + 8));
    73 |    if (!((unsigned long long) ((*((char * *)((char *)__x + 8)) - ((char *)*((char * *)__x)  + ((*((char * *)((char *)this + 8)) - *((char * *)this)) / 120ll) * 120ll)) / 120ll) > 16ull)) goto lab_37;
            if (!((((*((char * *)((char *)__x + 8)) - ((char *)*((char * *)__x)  + ((*((char * *)((char *)this + 8)) - *((char * *)this)) / 120ll) * 120ll)) / 120ll) * 120ll + (long long) ((char *)*((char * *)__x)  + ((*((char * *)((char *)this + 8)) - *((char * *)this)) / 120ll) * 120ll)) - 120ll < (long long) *((char * *)((char *)this + 8)) | (((*((char * *)((char *)__x + 8)) - ((char *)*((char * *)__x)  + ((*((char * *)((char *)this + 8)) - *((char * *)this)) / 120ll) * 120ll)) / 120ll) * 120ll + (long long) *((char * *)((char *)this + 8))) - 120ll < (long long) ((char *)*((char * *)__x)  + ((*((char * *)((char *)this + 8)) - *((char * *)this)) / 120ll) * 120ll))) goto lab_32;
    70 |    if (!(*((char * *)((char *)__x + 8)) != ((char *)*((char * *)__x)  + ((*((char * *)((char *)this + 8)) - *((char * *)this)) / 120ll) * 120ll))) goto lab_17;
            $$CIV8 = 0ll;
            do {   /* id=3 guarded */ /* ~18 */ 
              /* region = 56 */
              /* bump-normalized */
              /* independent */
   101 |      if (!(NULL != ((char *)*((char * *)((char *)this + 8))  + $$CIV8 * 120ll))) goto lab_19;
    74 |      ((aggr120 *)(*((char * *)((char *)this + 8))))[$$CIV8] = $$PARM.__first16[$$CIV8];
            lab_19:
    73 |      $$CIV8 = $$CIV8 + 1ll;
            } while ((unsigned long long) $$CIV8 < (unsigned long long) ((*((char * *)((char *)__x + 8)) - ((char *)*((char * *)__x)  + ((*((char * *)((char *)this + 8)) - *((char * *)this)) / 120ll) * 120ll)) / 120ll));    /* ~18 */
            __cur = ((char *)*((char * *)((char *)this + 8))  + ((*((char * *)((char *)__x + 8)) - ((char *)*((char * *)__x)  + ((*((char * *)((char *)this + 8)) - *((char * *)this)) / 120ll) * 120ll)) / 120ll) * 120ll);
          lab_17:
            goto lab_33;
          lab_32:
    70 |  lab_37:
            if (!(*((char * *)((char *)__x + 8)) != ((char *)*((char * *)__x)  + ((*((char * *)((char *)this + 8)) - *((char * *)this)) / 120ll) * 120ll))) goto lab_36;
            $$CIV8 = 0ll;
            do {   /* id=6 guarded */ /* ~34 */ 
              /* region = 57 */
              /* bump-normalized */
   101 |      if (!(NULL != ((char *)*((char * *)((char *)this + 8))  + $$CIV8 * 120ll))) goto lab_35;
    74 |      ((aggr120 *)(*((char * *)((char *)this + 8))))[$$CIV8] = $$PARM.__first16[$$CIV8];
            lab_35:
    73 |      $$CIV8 = $$CIV8 + 1ll;
            } while ((unsigned long long) $$CIV8 < (unsigned long long) ((*((char * *)((char *)__x + 8)) - ((char *)*((char * *)__x)  + ((*((char * *)((char *)this + 8)) - *((char * *)this)) / 120ll) * 120ll)) / 120ll));    /* ~34 */
            __cur = ((char *)*((char * *)((char *)this + 8))  + ((*((char * *)((char *)__x + 8)) - ((char *)*((char * *)__x)  + ((*((char * *)((char *)this + 8)) - *((char * *)this)) / 120ll) * 120ll)) / 120ll) * 120ll);
          lab_36:
          lab_33:
   187 |  lab_13:
          lab_7:
   188 |    *((char * *)((char *)this + 8)) = ((char *)*((char * *)this)  + (long long) (__xlen * 120ull));
   189 |  lab_1:
   190 |    rstr = this;
            return rstr;
   191 |  } /* function */ 



Source        Source        Loop Id       Action / Information                                      
File          Line                                                                                  
----------    ----------    ----------    ----------------------------------------------------------
        56           343                  Loop was not SIMD vectorized because it contains 
                                          unsupported vector data types.
        56           341             5    Loop was not SIMD vectorized because the 
                                          aliasing-induced dependence  prevents SIMD 
                                          vectorization.
        56           343                  Loop was not SIMD vectorized because it contains 
                                          unsupported vector data types.
        56           343                  Loop was not SIMD vectorized because it contains 
                                          unsupported vector data types.
        56           341             4    Loop was not SIMD vectorized because the 
                                          aliasing-induced dependence  prevents SIMD 
                                          vectorization.
        56           343                  Loop was not SIMD vectorized because it contains 
                                          unsupported vector data types.
       101            70             3    Loop was not SIMD vectorized because it contains 
                                          unsupported loop structure.
       101            70             3    Loop was not SIMD vectorized because it contains 
                                          control flow.
       101            70             6    Loop was not SIMD vectorized because it contains 
                                          unsupported loop structure.
       101            70             6    Loop was not SIMD vectorized because it contains 
                                          control flow.

   295 |  void std::vector<CTF_Function_timer, std::allocator<CTF_Function_timer> >::_M_insert_aux(__gnu_cxx::__normal_iterator<CTF_Function_timer*, std::vector<CTF_Function_timer, std::allocator<CTF_Function_timer> > >, CTF_Function_timer const&)(char * this, aggr8 __position, CTF_Function_timer *__x)
   298 |  {
   299 |    if (!(*((char * *)(this + 8)) != *((char * *)(this + 16)))) goto lab_3;
    55 |    if (!(*((char * *)(this + 8)) != NULL)) goto lab_6;
   105 |    *((char * *)(this + 8))->(CTF_Function_timer).rns223. = ((aggr120 *)((char *)*((char * *)(this + 8))  - 120ll))->(CTF_Function_timer).rns224.;
          lab_6:
   304 |    *((char * *)(this + 8)) = ((char *)*((char * *)(this + 8))  + 120ll);
   306 |    __x_copy = *__x;
   545 |    if (!((((char *)*((char * *)(this + 8))  - 240ll) - __position._M_current@0) / 120ll > 0ll)) goto lab_10;
            $$CIV5 = 0ll;
            do {   /* id=1 guarded */ /* ~8 */ 
              /* region = 70 */
              /* bump-normalized */
   546 |      *((aggr120 *)((char *)(*((char * *)(this + 8))) + -240ll - $$CIV5 * 120ll)) = *((aggr120 *)((char *)(*((char * *)(this + 8))) + -360ll - $$CIV5 * 120ll));
   545 |      $$CIV5 = $$CIV5 + 1ll;
            } while ((unsigned long long) $$CIV5 < (unsigned long long) ((((char *)*((char * *)(this + 8))  - 240ll) - __position._M_current@0) / 120ll));    /* ~8 */
          lab_10:
   312 |    *__position._M_current@0 = __x_copy;
   316 |    goto lab_11;
          lab_3:
   298 |    __es.__l@0 = 0;
            __es.__t@8 = &__fsm_tab;
            __es.__this@10 = this;
            __es.__i@18 = 0;
   319 |    $$PARM.__n20 = 1ull;
   538 |    if (!((unsigned long long) (153722867280912930ll - (*((char * *)(this + 8)) - *((char * *)this)) / 120ll) < 1ull)) goto lab_52;
  1137 |    std::__throw_length_error(char const*)("vector::_M_insert_aux")
            return;
          lab_52:
   214 |    if (!((unsigned long long) ((*((char * *)(this + 8)) - *((char * *)this)) / 120ll) < 1ull)) goto lab_54;
   215 |    $$PARM.__n20 = 1ull;
            __1375 = &$$PARM.__n20;
            __1364 = (unsigned long long) ((*((char * *)(this + 8)) - *((char * *)this)) / 120ll);
            goto lab_55;
          lab_54:
   216 |    __1364 = (unsigned long long) ((*((char * *)(this + 8)) - *((char * *)this)) / 120ll);
            __1375 = &__1364;
            $$PARM.__n20 = 1ull;
   210 |  lab_55:
  1140 |    if (*__1375 + (unsigned long long) ((*((char * *)(this + 8)) - *((char * *)this)) / 120ll) < (unsigned long long) ((*((char * *)(this + 8)) - *((char * *)this)) / 120ll)) goto lab_56;
   538 |    if (!(*__1375 + (unsigned long long) ((*((char * *)(this + 8)) - *((char * *)this)) / 120ll) > 153722867280912930ull)) goto lab_57;
          lab_56:
            __1389 = 153722867280912930ull;
            goto lab_58;
          lab_57:
            __1389 = *__1375 + (unsigned long long) ((*((char * *)(this + 8)) - *((char * *)this)) / 120ll);
          lab_58:
   319 |    __len = __1389;
   686 |    __973._M_current@0 = *((char * *)this);
   426 |    __892 = __973;
   140 |    if (!(__1389 != 0ull)) goto lab_13;
   111 |    if (!(0ll != __builtin_expect@34((long long) (__1389 > 153722867280912930ull),0ll))) goto lab_15;
    87 |    std::__throw_bad_alloc()()
            return;
          lab_15:
    89 |    __986 = operator new(unsigned long)(__1389 * 120ull);
   107 |    __1171 = __986;
            goto lab_14;
          lab_13:
            __1171 = NULL;
          lab_14:
   140 |    __new_start = __1171;
    55 |    if (!(NULL != ((char *)__1171  + ((__position._M_current@0 - (__normal_iterator<CTF_Function_timer *,std::vector<CTF_Function_timer,std::allocator<CTF_Function_timer> > >)._M_current@0.rns240..mga.__892) / 120ll) * 120ll))) goto lab_18;
   105 |    __1171[(__position._M_current@0 - (__normal_iterator<CTF_Function_timer *,std::vector<CTF_Function_timer,std::allocator<CTF_Function_timer> > >)._M_current@0.rns240..mga.__892) / 120ll] = *__x;
          lab_18:
    70 |    __cur = __1171;
    73 |    if (!((unsigned long long) ((__position._M_current@0 - *((char * *)this)) / 120ll) > 16ull)) goto lab_69;
            if (!((((__position._M_current@0 - *((char * *)this)) / 120ll) * 120ll + (long long) *((char * *)this)) - 120ll < (long long) __1171 | (((__position._M_current@0 - *((char * *)this)) / 120ll) * 120ll + (long long) __1171) - 120ll < (long long) *((char * *)this))) goto lab_64;
    70 |    if (!(*((char * *)this) != __position._M_current@0)) goto lab_44;
            $$CIV8 = 0ll;
            do {   /* id=2 guarded */ /* ~45 */ 
              /* region = 71 */
              /* bump-normalized */
              /* independent */
   101 |      if (!(NULL != ((char *)__1171  + $$CIV8 * 120ll))) goto lab_46;
    74 |      __1171[$$CIV8] = ((aggr120 *)(*((char * *)this)))[$$CIV8];
            lab_46:
    73 |      $$CIV8 = $$CIV8 + 1ll;
            } while ((unsigned long long) $$CIV8 < (unsigned long long) ((__position._M_current@0 - *((char * *)this)) / 120ll));    /* ~45 */
            __cur = ((char *)__1171  + ((__position._M_current@0 - *((char * *)this)) / 120ll) * 120ll);
          lab_44:
            goto lab_65;
          lab_64:
    70 |  lab_69:
            if (!(*((char * *)this) != __position._M_current@0)) goto lab_68;
            $$CIV8 = 0ll;
            do {   /* id=4 guarded */ /* ~66 */ 
              /* region = 72 */
              /* bump-normalized */
   101 |      if (!(NULL != ((char *)__1171  + $$CIV8 * 120ll))) goto lab_67;
    74 |      __1171[$$CIV8] = ((aggr120 *)(*((char * *)this)))[$$CIV8];
            lab_67:
    73 |      $$CIV8 = $$CIV8 + 1ll;
            } while ((unsigned long long) $$CIV8 < (unsigned long long) ((__position._M_current@0 - *((char * *)this)) / 120ll));    /* ~66 */
            __cur = ((char *)__1171  + ((__position._M_current@0 - *((char * *)this)) / 120ll) * 120ll);
          lab_68:
          lab_65:
   115 |    $$PARM.__result1E = ((char *)__cur  + 120ll);
    70 |    __cur = ((char *)__cur  + 120ll);
    73 |    if (!((unsigned long long) ((*((char * *)(this + 8)) - __position._M_current@0) / 120ll) > 16ull)) goto lab_75;
            if (!((((*((char * *)(this + 8)) - __position._M_current@0) / 120ll) * 120ll + (long long) $$PARM.__result1E) - 120ll < (long long) __position._M_current@0 | (((*((char * *)(this + 8)) - __position._M_current@0) / 120ll) * 120ll + (long long) __position._M_current@0) - 120ll < (long long) $$PARM.__result1E)) goto lab_70;
    70 |    if (!(__position._M_current@0 != *((char * *)(this + 8)))) goto lab_48;
            $$CIV8 = 0ll;
            do {   /* id=3 guarded */ /* ~49 */ 
              /* region = 73 */
              /* bump-normalized */
              /* independent */
   101 |      if (!(NULL != ((char *)$$PARM.__result1E  + $$CIV8 * 120ll))) goto lab_50;
    74 |      $$PARM.__result1E[$$CIV8] = __position._M_current@0[$$CIV8];
            lab_50:
    73 |      $$CIV8 = $$CIV8 + 1ll;
            } while ((unsigned long long) $$CIV8 < (unsigned long long) ((*((char * *)(this + 8)) - __position._M_current@0) / 120ll));    /* ~49 */
            __cur = ((char *)$$PARM.__result1E  + ((*((char * *)(this + 8)) - __position._M_current@0) / 120ll) * 120ll);
          lab_48:
            goto lab_71;
          lab_70:
    70 |  lab_75:
            if (!(__position._M_current@0 != *((char * *)(this + 8)))) goto lab_74;
            $$CIV8 = 0ll;
            do {   /* id=5 guarded */ /* ~72 */ 
              /* region = 74 */
              /* bump-normalized */
   101 |      if (!(NULL != ((char *)$$PARM.__result1E  + $$CIV8 * 120ll))) goto lab_73;
    74 |      $$PARM.__result1E[$$CIV8] = __position._M_current@0[$$CIV8];
            lab_73:
    73 |      $$CIV8 = $$CIV8 + 1ll;
            } while ((unsigned long long) $$CIV8 < (unsigned long long) ((*((char * *)(this + 8)) - __position._M_current@0) / 120ll));    /* ~72 */
            __cur = ((char *)$$PARM.__result1E  + ((*((char * *)(this + 8)) - __position._M_current@0) / 120ll) * 120ll);
          lab_74:
          lab_71:
   268 |    __new_finish = __cur;
   349 |    __es.__c4@3 = 0u;
            goto @1168;
   351 |  lab_34:
            /* GLAB  id_no=765{__1166} labtype=USR_LAB          */
            __es.__c4@3 = 2u;
            __1169 = __int_register_value(29u);
            __cxa_begin_catch((char *) __1169)
   352 |    if (__new_finish != NULL) goto lab_21;
   115 |    goto lab_23;
          lab_21:
   143 |  lab_23:
   145 |    if (!(__new_start != NULL)) goto lab_24;
    95 |    operator delete(void*)(__new_start)
   110 |  lab_24:
   357 |    __cxa_rethrow()
            __cxa_end_catch()
            __es.__c4@3 = 0u;
   349 |  @1168:
   145 |    if (!(*((char * *)this) != NULL)) goto lab_26;
    95 |    operator delete(void*)(*((char * *)this))
   110 |  lab_26:
   364 |    *((char * *)this) = __new_start;
   365 |    *((char * *)(this + 8)) = __new_finish;
   366 |    *((char * *)(this + 16)) = ((char *)__new_start  + (long long) (__len * 120ull));
   367 |  lab_11:
   368 |    return;
   351 |    /* GLAB  id_no=771{__1167} labtype=USR_LAB          */
            __cxa_end_catch()
            __es.__c4@3 = 0u;
            __1170 = __int_register_value(29u);
            _Unwind_Resume((char *) __1170)
            goto lab_34;
   368 |  } /* function */ 



Source        Source        Loop Id       Action / Information                                      
File          Line                                                                                  
----------    ----------    ----------    ----------------------------------------------------------
        56           546                  Loop was not SIMD vectorized because it contains 
                                          memory references  with  non-vectorizable strides.
        56           546                  Loop was not SIMD vectorized because it contains 
                                          unsupported vector data types.
       101            70             2    Loop was not SIMD vectorized because it contains 
                                          unsupported loop structure.
       101            70             2    Loop was not SIMD vectorized because it contains 
                                          control flow.
       101            70             4    Loop was not SIMD vectorized because it contains 
                                          unsupported loop structure.
       101            70             4    Loop was not SIMD vectorized because it contains 
                                          control flow.
       101            70             3    Loop was not SIMD vectorized because it contains 
                                          unsupported loop structure.
       101            70             3    Loop was not SIMD vectorized because it contains 
                                          control flow.
       101            70             5    Loop was not SIMD vectorized because it contains 
                                          unsupported loop structure.
       101            70             5    Loop was not SIMD vectorized because it contains 
                                          control flow.

  2277 |  void void std::__introsort_loop<__gnu_cxx::__normal_iterator<CTF_Function_timer*, std::vector<CTF_Function_timer, std::allocator<CTF_Function_timer> > >, long, bool (*)(CTF_Function_timer const&, CTF_Function_timer const&)>(__gnu_cxx::__normal_iterator<CTF_Function_timer*, std::vector<CTF_Function_timer, std::allocator<CTF_Function_timer> > >, __gnu_cxx::__normal_iterator<CTF_Function_timer*, std::vector<CTF_Function_timer, std::allocator<CTF_Function_timer> > >, long, bool (*)(CTF_Function_timer const&, CTF_Function_timer const&))(aggr8 __first, aggr8 __last, long long __depth_limit, funcaddr __comp)
  2280 |  {
  2284 |    if (!((__last._M_current@0 - __first._M_current@0) / 120ll > 16ll)) goto lab_3;
            do {   /* id=1 guarded */ /* ~1 */ 
              /* region = 18 */
  2286 |      if (__depth_limit == 0ll) goto lab_24;
  2291 |      __depth_limit = __depth_limit + -1ll;
   739 |      __1203._M_current@0 = ((char *)__first._M_current@0  + (((__last._M_current@0 - __first._M_current@0) / 120ll) / 2ll) * 120ll);
              __1189 = __1203;
   747 |      __1210._M_current@0 = ((char *)__last._M_current@0  - 120ll);
              __1191 = __1210;
              $$RET1E.rnn28 = 0u == __comp->(bool (const CTF_Function_timer &, const CTF_Function_timer &)).rns241.(__first._M_current@0,(__normal_iterator<CTF_Function_timer *,std::vector<CTF_Function_timer,std::allocator<CTF_Function_timer> > >)._M_current@0.rns260..mga.__1189);
   124 |      if (!($$RET1E.rnn28 == 0)) goto lab_6;
              $$RET1F.rnn27 = 0u == __comp->(bool (const CTF_Function_timer &, const CTF_Function_timer &)).rns244.((__normal_iterator<CTF_Function_timer *,std::vector<CTF_Function_timer,std::allocator<CTF_Function_timer> > >)._M_current@0.rns260..mga.__1189,(__normal_iterator<CTF_Function_timer *,std::vector<CTF_Function_timer,std::allocator<CTF_Function_timer> > >)._M_current@0.rns261..mga.__1191);
   125 |      if (!($$RET1F.rnn27 == 0)) goto lab_8;
   126 |      __1222 = (__normal_iterator<CTF_Function_timer *,std::vector<CTF_Function_timer,std::allocator<CTF_Function_timer> > >)._M_current@0.rns260..mga.__1189;
              goto @1221;
            lab_8:
   120 |      $$RET20.rnn26 = 0u == __comp->(bool (const CTF_Function_timer &, const CTF_Function_timer &)).rns252.(__first._M_current@0,(__normal_iterator<CTF_Function_timer *,std::vector<CTF_Function_timer,std::allocator<CTF_Function_timer> > >)._M_current@0.rns261..mga.__1191);
   128 |      __1222 = ($$RET20.rnn26 == 0 ? (__normal_iterator<CTF_Function_timer *,std::vector<CTF_Function_timer,std::allocator<CTF_Function_timer> > >)._M_current@0.rns261..mga.__1191 : __first._M_current@0);
              goto @1221;
   130 |    lab_6:
   120 |      $$RET21.rnn25 = 0u == __comp->(bool (const CTF_Function_timer &, const CTF_Function_timer &)).rns253.(__first._M_current@0,(__normal_iterator<CTF_Function_timer *,std::vector<CTF_Function_timer,std::allocator<CTF_Function_timer> > >)._M_current@0.rns261..mga.__1191);
   131 |      if (!($$RET21.rnn25 == 0)) goto lab_16;
   132 |      __1222 = __first._M_current@0;
              goto @1221;
            lab_16:
   120 |      $$RET22.rnn24 = 0u == __comp->(bool (const CTF_Function_timer &, const CTF_Function_timer &)).rns254.((__normal_iterator<CTF_Function_timer *,std::vector<CTF_Function_timer,std::allocator<CTF_Function_timer> > >)._M_current@0.rns260..mga.__1189,(__normal_iterator<CTF_Function_timer *,std::vector<CTF_Function_timer,std::allocator<CTF_Function_timer> > >)._M_current@0.rns261..mga.__1191);
   134 |      __1222 = ($$RET22.rnn24 == 0 ? (__normal_iterator<CTF_Function_timer *,std::vector<CTF_Function_timer,std::allocator<CTF_Function_timer> > >)._M_current@0.rns261..mga.__1191 : (__normal_iterator<CTF_Function_timer *,std::vector<CTF_Function_timer,std::allocator<CTF_Function_timer> > >)._M_current@0.rns260..mga.__1189);
   120 |    @1221:
   137 |      __cut = __gnu_cxx::__normal_iterator<CTF_Function_timer*, std::vector<CTF_Function_timer, std::allocator<CTF_Function_timer> > > std::__unguarded_partition<__gnu_cxx::__normal_iterator<CTF_Function_timer*, std::vector<CTF_Function_timer, std::allocator<CTF_Function_timer> > >, CTF_Function_timer, bool (*)(CTF_Function_timer const&, CTF_Function_timer const&)>(__gnu_cxx::__normal_iterator<CTF_Function_timer*, std::vector<CTF_Function_timer, std::allocator<CTF_Function_timer> > >, __gnu_cxx::__normal_iterator<CTF_Function_timer*, std::vector<CTF_Function_timer, std::allocator<CTF_Function_timer> > >, CTF_Function_timer, bool (*)(CTF_Function_timer const&, CTF_Function_timer const&))(__first,__last,*__1222,__comp)->(__normal_iterator<CTF_Function_timer *,std::vector<CTF_Function_timer,std::allocator<CTF_Function_timer> > >).rns249.;
  2302 |      void std::__introsort_loop<__gnu_cxx::__normal_iterator<CTF_Function_timer*, std::vector<CTF_Function_timer, std::allocator<CTF_Function_timer> > >, long, bool (*)(CTF_Function_timer const&, CTF_Function_timer const&)>(__gnu_cxx::__normal_iterator<CTF_Function_timer*, std::vector<CTF_Function_timer, std::allocator<CTF_Function_timer> > >, __gnu_cxx::__normal_iterator<CTF_Function_timer*, std::vector<CTF_Function_timer, std::allocator<CTF_Function_timer> > >, long, bool (*)(CTF_Function_timer const&, CTF_Function_timer const&))(__cut,__last,__depth_limit,__comp)
  2303 |      __last = __cut;
  2284 |    } while ((__last._M_current@0 - __first._M_current@0) / 120ll > 16ll);    /* ~1 */
          lab_3:
  2305 |  lab_23:
            return;
  2286 |  lab_24:
  5108 |    void std::__heap_select<__gnu_cxx::__normal_iterator<CTF_Function_timer*, std::vector<CTF_Function_timer, std::allocator<CTF_Function_timer> > >, bool (*)(CTF_Function_timer const&, CTF_Function_timer const&)>(__gnu_cxx::__normal_iterator<CTF_Function_timer*, std::vector<CTF_Function_timer, std::allocator<CTF_Function_timer> > >, __gnu_cxx::__normal_iterator<CTF_Function_timer*, std::vector<CTF_Function_timer, std::allocator<CTF_Function_timer> > >, __gnu_cxx::__normal_iterator<CTF_Function_timer*, std::vector<CTF_Function_timer, std::allocator<CTF_Function_timer> > >, bool (*)(CTF_Function_timer const&, CTF_Function_timer const&))(__first,__last,__last,__comp)
  5109 |    void std::sort_heap<__gnu_cxx::__normal_iterator<CTF_Function_timer*, std::vector<CTF_Function_timer, std::allocator<CTF_Function_timer> > >, bool (*)(CTF_Function_timer const&, CTF_Function_timer const&)>(__gnu_cxx::__normal_iterator<CTF_Function_timer*, std::vector<CTF_Function_timer, std::allocator<CTF_Function_timer> > >, __gnu_cxx::__normal_iterator<CTF_Function_timer*, std::vector<CTF_Function_timer, std::allocator<CTF_Function_timer> > >, bool (*)(CTF_Function_timer const&, CTF_Function_timer const&))(__first,__last,__comp)
  2289 |    goto lab_23;
  2305 |  } /* function */ 



Source        Source        Loop Id       Action / Information                                      
File          Line                                                                                  
----------    ----------    ----------    ----------------------------------------------------------
        86          2284             1    Loop cannot be normalized and no loop optimizations 
                                          applied.
        86          2284             1    Loop cannot be normalized and no loop optimizations 
                                          applied.
        86          2284             1    Loop was not SIMD vectorized because it contains 
                                          function calls.

  2188 |  void void std::__final_insertion_sort<__gnu_cxx::__normal_iterator<CTF_Function_timer*, std::vector<CTF_Function_timer, std::allocator<CTF_Function_timer> > >, bool (*)(CTF_Function_timer const&, CTF_Function_timer const&)>(__gnu_cxx::__normal_iterator<CTF_Function_timer*, std::vector<CTF_Function_timer, std::allocator<CTF_Function_timer> > >, __gnu_cxx::__normal_iterator<CTF_Function_timer*, std::vector<CTF_Function_timer, std::allocator<CTF_Function_timer> > >, bool (*)(CTF_Function_timer const&, CTF_Function_timer const&))(aggr8 __first, aggr8 __last, funcaddr __comp)
  2190 |  {
  2191 |    if (!((__last._M_current@0 - __first._M_current@0) / 120ll > 16ll)) goto lab_1;
   739 |    __1240._M_current@0 = ((char *)__first._M_current@0  + 1920ll);
            void std::__insertion_sort<__gnu_cxx::__normal_iterator<CTF_Function_timer*, std::vector<CTF_Function_timer, std::allocator<CTF_Function_timer> > >, bool (*)(CTF_Function_timer const&, CTF_Function_timer const&)>(__gnu_cxx::__normal_iterator<CTF_Function_timer*, std::vector<CTF_Function_timer, std::allocator<CTF_Function_timer> > >, __gnu_cxx::__normal_iterator<CTF_Function_timer*, std::vector<CTF_Function_timer, std::allocator<CTF_Function_timer> > >, bool (*)(CTF_Function_timer const&, CTF_Function_timer const&))(__first,__1240,__comp)
            __1245._M_current@0 = ((char *)__first._M_current@0  + 1920ll);
  2160 |    __i = __1245;
            if (!(__i._M_current@0 != __last._M_current@0)) goto lab_5;
            $$CIVINIT6 = __i._M_current@0;
            $$CIVFINAL6 = (unsigned long long) ((__last._M_current@0 - __i._M_current@0) / 120ll);
            $$CIV6 = 0ll;
            do {   /* id=1 guarded */ /* ~3 */ 
              /* region = 12 */
              /* bump-normalized */
              __i._M_current@0 = ((char *)$$CIVINIT6  + $$CIV6 * 120ll);
  2161 |      void std::__unguarded_linear_insert<__gnu_cxx::__normal_iterator<CTF_Function_timer*, std::vector<CTF_Function_timer, std::allocator<CTF_Function_timer> > >, CTF_Function_timer, bool (*)(CTF_Function_timer const&, CTF_Function_timer const&)>(__gnu_cxx::__normal_iterator<CTF_Function_timer*, std::vector<CTF_Function_timer, std::allocator<CTF_Function_timer> > >, CTF_Function_timer, bool (*)(CTF_Function_timer const&, CTF_Function_timer const&))(__i,$$CIVINIT6[$$CIV6],__comp)
  2193 |      $$CIV6 = $$CIV6 + 1ll;
            } while ((unsigned long long) $$CIV6 < $$CIVFINAL6);    /* ~3 */
          lab_5:
  2196 |    goto lab_6;
          lab_1:
  2198 |    void std::__insertion_sort<__gnu_cxx::__normal_iterator<CTF_Function_timer*, std::vector<CTF_Function_timer, std::allocator<CTF_Function_timer> > >, bool (*)(CTF_Function_timer const&, CTF_Function_timer const&)>(__gnu_cxx::__normal_iterator<CTF_Function_timer*, std::vector<CTF_Function_timer, std::allocator<CTF_Function_timer> > >, __gnu_cxx::__normal_iterator<CTF_Function_timer*, std::vector<CTF_Function_timer, std::allocator<CTF_Function_timer> > >, bool (*)(CTF_Function_timer const&, CTF_Function_timer const&))(__first,__last,__comp)
          lab_6:
  2199 |    return;
          } /* function */ 



Source        Source        Loop Id       Action / Information                                      
File          Line                                                                                  
----------    ----------    ----------    ----------------------------------------------------------
        86          2160             1    Loop was not SIMD vectorized because it contains 
                                          function calls.

  2245 |  void void std::__introsort_loop<__gnu_cxx::__normal_iterator<CTF_Function_timer*, std::vector<CTF_Function_timer, std::allocator<CTF_Function_timer> > >, long>(__gnu_cxx::__normal_iterator<CTF_Function_timer*, std::vector<CTF_Function_timer, std::allocator<CTF_Function_timer> > >, __gnu_cxx::__normal_iterator<CTF_Function_timer*, std::vector<CTF_Function_timer, std::allocator<CTF_Function_timer> > >, long)(aggr8 __first, aggr8 __last, long long __depth_limit)
  2248 |  {
  2252 |    if (!((__last._M_current@0 - __first._M_current@0) / 120ll > 16ll)) goto lab_3;
            do {   /* id=1 guarded */ /* ~1 */ 
              /* region = 18 */
  2254 |      if (__depth_limit == 0ll) goto lab_24;
  2259 |      __depth_limit = __depth_limit + -1ll;
   739 |      __1293._M_current@0 = ((char *)__first._M_current@0  + (((__last._M_current@0 - __first._M_current@0) / 120ll) / 2ll) * 120ll);
              __1280 = __1293;
   747 |      __1300._M_current@0 = ((char *)__last._M_current@0  - 120ll);
              __1282 = __1300;
    45 |      $$IRET1D = (char) (*((double *)((char *)__first._M_current@0 + 96)) > *((double *)((char *)(__normal_iterator<CTF_Function_timer *,std::vector<CTF_Function_timer,std::allocator<CTF_Function_timer> > >)._M_current@0.rns282..mga.__1280 + 96)));
    89 |      if (0u == $$IRET1D) goto lab_6;
    45 |      $$IRET1E = (char) (*((double *)((char *)(__normal_iterator<CTF_Function_timer *,std::vector<CTF_Function_timer,std::allocator<CTF_Function_timer> > >)._M_current@0.rns282..mga.__1280 + 96)) > *((double *)((char *)(__normal_iterator<CTF_Function_timer *,std::vector<CTF_Function_timer,std::allocator<CTF_Function_timer> > >)._M_current@0.rns283..mga.__1282 + 96)));
    90 |      if (0u == $$IRET1E) goto lab_8;
    91 |      __1311 = (__normal_iterator<CTF_Function_timer *,std::vector<CTF_Function_timer,std::allocator<CTF_Function_timer> > >)._M_current@0.rns282..mga.__1280;
              goto @1310;
            lab_8:
    45 |      $$IRET1F = (char) (*((double *)((char *)__first._M_current@0 + 96)) > *((double *)((char *)(__normal_iterator<CTF_Function_timer *,std::vector<CTF_Function_timer,std::allocator<CTF_Function_timer> > >)._M_current@0.rns283..mga.__1282 + 96)));
    93 |      __1311 = (0u != $$IRET1F ? (__normal_iterator<CTF_Function_timer *,std::vector<CTF_Function_timer,std::allocator<CTF_Function_timer> > >)._M_current@0.rns283..mga.__1282 : __first._M_current@0);
              goto @1310;
    95 |    lab_6:
    45 |      $$IRET1C = (char) (*((double *)((char *)__first._M_current@0 + 96)) > *((double *)((char *)(__normal_iterator<CTF_Function_timer *,std::vector<CTF_Function_timer,std::allocator<CTF_Function_timer> > >)._M_current@0.rns283..mga.__1282 + 96)));
    96 |      if (!(0u != $$IRET1C)) goto lab_16;
    97 |      __1311 = __first._M_current@0;
              goto @1310;
            lab_16:
    45 |      $$IRET1B = (char) (*((double *)((char *)(__normal_iterator<CTF_Function_timer *,std::vector<CTF_Function_timer,std::allocator<CTF_Function_timer> > >)._M_current@0.rns282..mga.__1280 + 96)) > *((double *)((char *)(__normal_iterator<CTF_Function_timer *,std::vector<CTF_Function_timer,std::allocator<CTF_Function_timer> > >)._M_current@0.rns283..mga.__1282 + 96)));
    99 |      __1311 = (0u != $$IRET1B ? (__normal_iterator<CTF_Function_timer *,std::vector<CTF_Function_timer,std::allocator<CTF_Function_timer> > >)._M_current@0.rns283..mga.__1282 : (__normal_iterator<CTF_Function_timer *,std::vector<CTF_Function_timer,std::allocator<CTF_Function_timer> > >)._M_current@0.rns282..mga.__1280);
    86 |    @1310:
   102 |      __cut = __gnu_cxx::__normal_iterator<CTF_Function_timer*, std::vector<CTF_Function_timer, std::allocator<CTF_Function_timer> > > std::__unguarded_partition<__gnu_cxx::__normal_iterator<CTF_Function_timer*, std::vector<CTF_Function_timer, std::allocator<CTF_Function_timer> > >, CTF_Function_timer>(__gnu_cxx::__normal_iterator<CTF_Function_timer*, std::vector<CTF_Function_timer, std::allocator<CTF_Function_timer> > >, __gnu_cxx::__normal_iterator<CTF_Function_timer*, std::vector<CTF_Function_timer, std::allocator<CTF_Function_timer> > >, CTF_Function_timer)(__first,__last,*__1311)->(__normal_iterator<CTF_Function_timer *,std::vector<CTF_Function_timer,std::allocator<CTF_Function_timer> > >).rns274.;
  2269 |      void std::__introsort_loop<__gnu_cxx::__normal_iterator<CTF_Function_timer*, std::vector<CTF_Function_timer, std::allocator<CTF_Function_timer> > >, long>(__gnu_cxx::__normal_iterator<CTF_Function_timer*, std::vector<CTF_Function_timer, std::allocator<CTF_Function_timer> > >, __gnu_cxx::__normal_iterator<CTF_Function_timer*, std::vector<CTF_Function_timer, std::allocator<CTF_Function_timer> > >, long)(__cut,__last,__depth_limit)
  2270 |      __last = __cut;
  2252 |    } while ((__last._M_current@0 - __first._M_current@0) / 120ll > 16ll);    /* ~1 */
          lab_3:
  2272 |  lab_23:
            return;
  2254 |  lab_24:
  5067 |    void std::__heap_select<__gnu_cxx::__normal_iterator<CTF_Function_timer*, std::vector<CTF_Function_timer, std::allocator<CTF_Function_timer> > > >(__gnu_cxx::__normal_iterator<CTF_Function_timer*, std::vector<CTF_Function_timer, std::allocator<CTF_Function_timer> > >, __gnu_cxx::__normal_iterator<CTF_Function_timer*, std::vector<CTF_Function_timer, std::allocator<CTF_Function_timer> > >, __gnu_cxx::__normal_iterator<CTF_Function_timer*, std::vector<CTF_Function_timer, std::allocator<CTF_Function_timer> > >)(__first,__last,__last)
  5068 |    void std::sort_heap<__gnu_cxx::__normal_iterator<CTF_Function_timer*, std::vector<CTF_Function_timer, std::allocator<CTF_Function_timer> > > >(__gnu_cxx::__normal_iterator<CTF_Function_timer*, std::vector<CTF_Function_timer, std::allocator<CTF_Function_timer> > >, __gnu_cxx::__normal_iterator<CTF_Function_timer*, std::vector<CTF_Function_timer, std::allocator<CTF_Function_timer> > >)(__first,__last)
  2257 |    goto lab_23;
  2272 |  } /* function */ 



Source        Source        Loop Id       Action / Information                                      
File          Line                                                                                  
----------    ----------    ----------    ----------------------------------------------------------
        86          2252             1    Loop cannot be normalized and no loop optimizations 
                                          applied.
        86          2252             1    Loop cannot be normalized and no loop optimizations 
                                          applied.
        86          2252             1    Loop was not SIMD vectorized because it contains 
                                          function calls.

  2173 |  void void std::__final_insertion_sort<__gnu_cxx::__normal_iterator<CTF_Function_timer*, std::vector<CTF_Function_timer, std::allocator<CTF_Function_timer> > > >(__gnu_cxx::__normal_iterator<CTF_Function_timer*, std::vector<CTF_Function_timer, std::allocator<CTF_Function_timer> > >, __gnu_cxx::__normal_iterator<CTF_Function_timer*, std::vector<CTF_Function_timer, std::allocator<CTF_Function_timer> > >)(aggr8 __first, aggr8 __last)
  2175 |  {
  2176 |    if (!((__last._M_current@0 - __first._M_current@0) / 120ll > 16ll)) goto lab_1;
   739 |    __1329._M_current@0 = ((char *)__first._M_current@0  + 1920ll);
            void std::__insertion_sort<__gnu_cxx::__normal_iterator<CTF_Function_timer*, std::vector<CTF_Function_timer, std::allocator<CTF_Function_timer> > > >(__gnu_cxx::__normal_iterator<CTF_Function_timer*, std::vector<CTF_Function_timer, std::allocator<CTF_Function_timer> > >, __gnu_cxx::__normal_iterator<CTF_Function_timer*, std::vector<CTF_Function_timer, std::allocator<CTF_Function_timer> > >)(__first,__1329)
            __1334._M_current@0 = ((char *)__first._M_current@0  + 1920ll);
  2147 |    __i = __1334;
            if (!(__i._M_current@0 != __last._M_current@0)) goto lab_5;
            $$CIVINIT7 = __i._M_current@0;
            $$CIVFINAL7 = (unsigned long long) ((__last._M_current@0 - __i._M_current@0) / 120ll);
            $$CIV7 = 0ll;
            do {   /* id=1 guarded */ /* ~3 */ 
              /* region = 12 */
              /* bump-normalized */
              __i._M_current@0 = ((char *)$$CIVINIT7  + $$CIV7 * 120ll);
  2148 |      void std::__unguarded_linear_insert<__gnu_cxx::__normal_iterator<CTF_Function_timer*, std::vector<CTF_Function_timer, std::allocator<CTF_Function_timer> > >, CTF_Function_timer>(__gnu_cxx::__normal_iterator<CTF_Function_timer*, std::vector<CTF_Function_timer, std::allocator<CTF_Function_timer> > >, CTF_Function_timer)(__i,$$CIVINIT7[$$CIV7])
  2179 |      $$CIV7 = $$CIV7 + 1ll;
            } while ((unsigned long long) $$CIV7 < $$CIVFINAL7);    /* ~3 */
          lab_5:
  2180 |    goto lab_6;
          lab_1:
  2182 |    void std::__insertion_sort<__gnu_cxx::__normal_iterator<CTF_Function_timer*, std::vector<CTF_Function_timer, std::allocator<CTF_Function_timer> > > >(__gnu_cxx::__normal_iterator<CTF_Function_timer*, std::vector<CTF_Function_timer, std::allocator<CTF_Function_timer> > >, __gnu_cxx::__normal_iterator<CTF_Function_timer*, std::vector<CTF_Function_timer, std::allocator<CTF_Function_timer> > >)(__first,__last)
          lab_6:
  2183 |    return;
          } /* function */ 



Source        Source        Loop Id       Action / Information                                      
File          Line                                                                                  
----------    ----------    ----------    ----------------------------------------------------------
        86          2147             1    Loop was not SIMD vectorized because it contains 
                                          function calls.

   131 |  char * std::_Vector_base<CTF_Function_timer, std::allocator<CTF_Function_timer> >::~_Vector_base()(_Vector_impl *this)
   132 |  {
   145 |    if (!(*((char * *)this) != NULL)) goto lab_1;
    95 |    operator delete(void*)(*((char * *)this))
   110 |  lab_1:
   132 |    $$PARM.this2 = this;
   109 |    $$PARM.this0 = $$PARM.this2;
    73 |    $$IRET0 = $$PARM.this0;
   109 |    $$IRET1 = $$PARM.this2;
   132 |    $$IRET2 = $$PARM.this2;
   133 |    rstr = this;
            return rstr;
          } /* function */ 


  1134 |  unsigned long long std::vector<CTF_Function_timer, std::allocator<CTF_Function_timer> >::_M_check_len(unsigned long, char const*) const(_Vector_base<CTF_Function_timer,std::allocator<CTF_Function_timer> > *this, unsigned long long __n, char * __s)
  1135 |  {
            $$__n.nat.9 = __n;
   538 |    if (!((unsigned long long) (153722867280912930ll - (*((char * *)((char *)this + 8)) - *((char * *)this)) / 120ll) < $$__n.nat.9)) goto lab_1;
  1137 |    std::__throw_length_error(char const*)(__s)
            return;
          lab_1:
   214 |    if (!((unsigned long long) ((*((char * *)((char *)this + 8)) - *((char * *)this)) / 120ll) < $$__n.nat.9)) goto lab_3;
   215 |    __n = $$__n.nat.9;
            __1375 = &__n;
            $$__1364.nat.9 = (unsigned long long) ((*((char * *)((char *)this + 8)) - *((char * *)this)) / 120ll);
            __1364 = $$__1364.nat.9;
            goto @1374;
          lab_3:
   216 |    $$__1364.nat.9 = (unsigned long long) ((*((char * *)((char *)this + 8)) - *((char * *)this)) / 120ll);
            __1364 = $$__1364.nat.9;
            __1375 = &__1364;
            __n = $$__n.nat.9;
   210 |  @1374:
  1140 |    if (*__1375 + (unsigned long long) ((*((char * *)((char *)this + 8)) - *((char * *)this)) / 120ll) < (unsigned long long) ((*((char * *)((char *)this + 8)) - *((char * *)this)) / 120ll)) goto lab_6;
   538 |    if (!(*__1375 + (unsigned long long) ((*((char * *)((char *)this + 8)) - *((char * *)this)) / 120ll) > 153722867280912930ull)) goto lab_7;
          lab_6:
            __1389 = 153722867280912930ull;
            goto lab_8;
          lab_7:
            __1389 = *__1375 + (unsigned long long) ((*((char * *)((char *)this + 8)) - *((char * *)this)) / 120ll);
          lab_8:
            rstr = __1389;
            return rstr;
  1141 |  } /* function */ 


   960 |  char * CTF_Function_timer* std::vector<CTF_Function_timer, std::allocator<CTF_Function_timer> >::_M_allocate_and_copy<__gnu_cxx::__normal_iterator<CTF_Function_timer const*, std::vector<CTF_Function_timer, std::allocator<CTF_Function_timer> > > >(unsigned long, __gnu_cxx::__normal_iterator<CTF_Function_timer const*, std::vector<CTF_Function_timer, std::allocator<CTF_Function_timer> > >, __gnu_cxx::__normal_iterator<CTF_Function_timer const*, std::vector<CTF_Function_timer, std::allocator<CTF_Function_timer> > >)(char * this, unsigned long long __n, aggr8 __first, aggr8 __last)
   962 |  {
            __es.__l@0 = 0;
            __es.__t@8 = &__fsm_tab;
            __es.__this@10 = this;
            __es.__i@18 = 0;
   140 |    if (!(__n != 0ull)) goto lab_4;
   111 |    if (!(0ll != __builtin_expect@34((long long) (__n > 153722867280912930ull),0ll))) goto lab_6;
    87 |    std::__throw_bad_alloc()()
            return;
          lab_6:
    89 |    __1407 = operator new(unsigned long)(__n * 120ull);
   107 |    __1455 = __1407;
            goto lab_5;
          lab_4:
            __1455 = NULL;
          lab_5:
   965 |    __es.__c4@3 = 1u;
   257 |    CTF_Function_timer* std::__uninitialized_copy<false>::uninitialized_copy<__gnu_cxx::__normal_iterator<CTF_Function_timer const*, std::vector<CTF_Function_timer, std::allocator<CTF_Function_timer> > >, CTF_Function_timer*>(__gnu_cxx::__normal_iterator<CTF_Function_timer const*, std::vector<CTF_Function_timer, std::allocator<CTF_Function_timer> > >, __gnu_cxx::__normal_iterator<CTF_Function_timer const*, std::vector<CTF_Function_timer, std::allocator<CTF_Function_timer> > >, CTF_Function_timer*)(__first,__last,__1455);
            goto __1450;
            goto __1451;
   968 |    __es.__c4@3 = 0u;
            rstr = __1455;
            return rstr;
   971 |  lab_14:
            /* GLAB  id_no=1205{__1450} labtype=USR_LAB          */
            __es.__c4@3 = 2u;
            __1453 = __int_register_value(29u);
            __cxa_begin_catch((char *) __1453)
   145 |    if (!(__1455 != NULL)) goto lab_9;
    95 |    operator delete(void*)(__1455)
   110 |  lab_9:
   973 |    __cxa_rethrow()
            __cxa_end_catch()
            __es.__c4@3 = 0u;
   975 |    return rstr;
   971 |    /* GLAB  id_no=1211{__1451} labtype=USR_LAB          */
            __cxa_end_catch()
            __es.__c4@3 = 0u;
            __1454 = __int_register_value(29u);
            _Unwind_Resume((char *) __1454)
            goto lab_14;
   975 |  } /* function */ 


    67 |  char * CTF_Function_timer* std::__uninitialized_copy<false>::uninitialized_copy<CTF_Function_timer*, CTF_Function_timer*>(CTF_Function_timer*, CTF_Function_timer*, CTF_Function_timer*)(CTF_Function_timer *__first, char * __last, CTF_Function_timer *__result)
    69 |  {
    70 |    __cur = __result;
            if (!(__first != __last)) goto lab_3;
            $$CIV8 = 0ll;
            do {   /* id=1 guarded */ /* ~1 */ 
              /* region = 10 */
              /* bump-normalized */
   101 |      if (!(NULL != ((char *)__result  + $$CIV8 * 120ll))) goto lab_5;
    74 |      __result[$$CIV8] = __first[$$CIV8];
            lab_5:
    73 |      $$CIV8 = $$CIV8 + 1ll;
            } while ((unsigned long long) $$CIV8 < (unsigned long long) ((__last - __first) / 120ll));    /* ~1 */
            __cur = ((char *)__result  + ((__last - __first) / 120ll) * 120ll);
          lab_3:
    76 |    rstr = __cur;
            return rstr;
    83 |  } /* function */ 


  2224 |  aggr8 __gnu_cxx::__normal_iterator<CTF_Function_timer*, std::vector<CTF_Function_timer, std::allocator<CTF_Function_timer> > > std::__unguarded_partition<__gnu_cxx::__normal_iterator<CTF_Function_timer*, std::vector<CTF_Function_timer, std::allocator<CTF_Function_timer> > >, CTF_Function_timer, bool (*)(CTF_Function_timer const&, CTF_Function_timer const&)>(__gnu_cxx::__normal_iterator<CTF_Function_timer*, std::vector<CTF_Function_timer, std::allocator<CTF_Function_timer> > >, __gnu_cxx::__normal_iterator<CTF_Function_timer*, std::vector<CTF_Function_timer, std::allocator<CTF_Function_timer> > >, CTF_Function_timer, bool (*)(CTF_Function_timer const&, CTF_Function_timer const&))(aggr8 __first, aggr8 __last, aggr120 __pivot, funcaddr __comp)
  2227 |  {
  2228 |    do {   /* id=1 */ /* ~1 */ 
              /* region = 17 */
  2229 |      $$RET29.rnn43 = 0u == __comp->(bool (const CTF_Function_timer &, const CTF_Function_timer &)).rns306.(__first._M_current@0,&__pivot);
  2230 |      if (!($$RET29.rnn43 == 0)) goto lab_6;
              do {   /* id=3 */ /* ~4 */ 
                /* region = 15 */
   708 |        __first._M_current@0 = ((char *)__first._M_current@0  + 120ll);
   710 |        $$RET2A.rnn42 = 0u == __comp->(bool (const CTF_Function_timer &, const CTF_Function_timer &)).rns308.(__first._M_current@0,&__pivot);
  2230 |      } while ($$RET2A.rnn42 == 0);    /* ~4 */
            lab_6:
   720 |      __last._M_current@0 = ((char *)__last._M_current@0  - 120ll);
   722 |      $$RET2B.rnn41 = 0u == __comp->(bool (const CTF_Function_timer &, const CTF_Function_timer &)).rns309.(&__pivot,__last._M_current@0);
  2233 |      if (!($$RET2B.rnn41 == 0)) goto lab_9;
              do {   /* id=2 */ /* ~7 */ 
                /* region = 16 */
   720 |        __last._M_current@0 = ((char *)__last._M_current@0  - 120ll);
   722 |        $$RET2C.rnn40 = 0u == __comp->(bool (const CTF_Function_timer &, const CTF_Function_timer &)).rns311.(&__pivot,__last._M_current@0);
  2233 |      } while ($$RET2C.rnn40 == 0);    /* ~7 */
            lab_9:
  2235 |      if (!(__first._M_current@0 < __last._M_current@0)) goto lab_12;
  2237 |      __1506 = __first;
              __1507 = __last;
    81 |      __tmp = *__1506._M_current@0;
    82 |      *__1506._M_current@0 = *__1507._M_current@0;
    83 |      *__1507._M_current@0 = __tmp;
   708 |      __first._M_current@0 = ((char *)__first._M_current@0  + 120ll);
  2228 |    } while (1);   /* ~1 */
  2235 |  lab_12:
  2236 |    rstr = __first;
            return rstr;
  2240 |  } /* function */ 



Source        Source        Loop Id       Action / Information                                      
File          Line                                                                                  
----------    ----------    ----------    ----------------------------------------------------------
        86          2228             1    Loop was not SIMD vectorized because it contains 
                                          function calls.
        86          2230             3    Loop cannot be normalized and no loop optimizations 
                                          applied.
        86          2230             3    Loop cannot be normalized and no loop optimizations 
                                          applied.
        86          2230             3    Loop was not SIMD vectorized because it contains 
                                          function calls.
        86          2233             2    Loop cannot be normalized and no loop optimizations 
                                          applied.
        86          2233             2    Loop cannot be normalized and no loop optimizations 
                                          applied.
        86          2233             2    Loop was not SIMD vectorized because it contains 
                                          function calls.

  1913 |  void void std::__heap_select<__gnu_cxx::__normal_iterator<CTF_Function_timer*, std::vector<CTF_Function_timer, std::allocator<CTF_Function_timer> > >, bool (*)(CTF_Function_timer const&, CTF_Function_timer const&)>(__gnu_cxx::__normal_iterator<CTF_Function_timer*, std::vector<CTF_Function_timer, std::allocator<CTF_Function_timer> > >, __gnu_cxx::__normal_iterator<CTF_Function_timer*, std::vector<CTF_Function_timer, std::allocator<CTF_Function_timer> > >, __gnu_cxx::__normal_iterator<CTF_Function_timer*, std::vector<CTF_Function_timer, std::allocator<CTF_Function_timer> > >, bool (*)(CTF_Function_timer const&, CTF_Function_timer const&))(aggr8 __first, aggr8 __middle, aggr8 __last, funcaddr __comp)
  1916 |  {
  1917 |    void std::make_heap<__gnu_cxx::__normal_iterator<CTF_Function_timer*, std::vector<CTF_Function_timer, std::allocator<CTF_Function_timer> > >, bool (*)(CTF_Function_timer const&, CTF_Function_timer const&)>(__gnu_cxx::__normal_iterator<CTF_Function_timer*, std::vector<CTF_Function_timer, std::allocator<CTF_Function_timer> > >, __gnu_cxx::__normal_iterator<CTF_Function_timer*, std::vector<CTF_Function_timer, std::allocator<CTF_Function_timer> > >, bool (*)(CTF_Function_timer const&, CTF_Function_timer const&))(__first,__middle,__comp)
  1918 |    __i = __middle;
            if (!(__i._M_current@0 < __last._M_current@0)) goto lab_3;
            $$CIVINIT9 = __i._M_current@0;
            $$CIVFINAL9 = (unsigned long long) (((__last._M_current@0 - 1) - __i._M_current@0) / 120ll + 1ll);
            $$CIV9 = 0ll;
            do {   /* id=1 guarded */ /* ~1 */ 
              /* region = 11 */
              /* bump-normalized */
              __i._M_current@0 = ((char *)$$CIVINIT9  + $$CIV9 * 120ll);
              $$RET2D.rnn44 = 0u == __comp->(bool (const CTF_Function_timer &, const CTF_Function_timer &)).rns316.(((char *)$$CIVINIT9  + $$CIV9 * 120ll),__first._M_current@0);
  1919 |      if (!($$RET2D.rnn44 == 0)) goto lab_4;
  1920 |      __1542 = __i;
   330 |      __value = *__1542._M_current@0;
   331 |      *__1542._M_current@0 = *__first._M_current@0;
   332 |      void std::__adjust_heap<__gnu_cxx::__normal_iterator<CTF_Function_timer*, std::vector<CTF_Function_timer, std::allocator<CTF_Function_timer> > >, long, CTF_Function_timer, bool (*)(CTF_Function_timer const&, CTF_Function_timer const&)>(__gnu_cxx::__normal_iterator<CTF_Function_timer*, std::vector<CTF_Function_timer, std::allocator<CTF_Function_timer> > >, long, long, CTF_Function_timer, bool (*)(CTF_Function_timer const&, CTF_Function_timer const&))(__first,0ll,(__middle._M_current@0 - __first._M_current@0) / 120ll,__value,__comp)
   335 |    lab_4:
   710 |      $$CIV9 = $$CIV9 + 1ll;
            } while ((unsigned long long) $$CIV9 < $$CIVFINAL9);    /* ~1 */
          lab_3:
  1921 |    return;
          } /* function */ 



Source        Source        Loop Id       Action / Information                                      
File          Line                                                                                  
----------    ----------    ----------    ----------------------------------------------------------
        86          1918             1    Loop was not SIMD vectorized because it contains 
                                          function calls.

   481 |  void void std::sort_heap<__gnu_cxx::__normal_iterator<CTF_Function_timer*, std::vector<CTF_Function_timer, std::allocator<CTF_Function_timer> > >, bool (*)(CTF_Function_timer const&, CTF_Function_timer const&)>(__gnu_cxx::__normal_iterator<CTF_Function_timer*, std::vector<CTF_Function_timer, std::allocator<CTF_Function_timer> > >, __gnu_cxx::__normal_iterator<CTF_Function_timer*, std::vector<CTF_Function_timer, std::allocator<CTF_Function_timer> > >, bool (*)(CTF_Function_timer const&, CTF_Function_timer const&))(aggr8 __first, aggr8 __last, funcaddr __comp)
   483 |  {
   490 |    if (!((__last._M_current@0 - __first._M_current@0) / 120ll > 1ll)) goto lab_3;
            do {   /* id=1 guarded */ /* ~1 */ 
              /* region = 9 */
   720 |      __last._M_current@0 = ((char *)__last._M_current@0  - 120ll);
   493 |      __1575 = __last;
              __1576 = __last;
   330 |      __value = *__1576._M_current@0;
   331 |      *__1576._M_current@0 = *__first._M_current@0;
   332 |      void std::__adjust_heap<__gnu_cxx::__normal_iterator<CTF_Function_timer*, std::vector<CTF_Function_timer, std::allocator<CTF_Function_timer> > >, long, CTF_Function_timer, bool (*)(CTF_Function_timer const&, CTF_Function_timer const&)>(__gnu_cxx::__normal_iterator<CTF_Function_timer*, std::vector<CTF_Function_timer, std::allocator<CTF_Function_timer> > >, long, long, CTF_Function_timer, bool (*)(CTF_Function_timer const&, CTF_Function_timer const&))(__first,0ll,(__1575._M_current@0 - __first._M_current@0) / 120ll,__value,__comp)
   490 |    } while ((__last._M_current@0 - __first._M_current@0) / 120ll > 1ll);    /* ~1 */
          lab_3:
   495 |    return;
          } /* function */ 



Source        Source        Loop Id       Action / Information                                      
File          Line                                                                                  
----------    ----------    ----------    ----------------------------------------------------------
        94           490             1    Loop cannot be normalized and no loop optimizations 
                                          applied.
        94           490             1    Loop cannot be normalized and no loop optimizations 
                                          applied.
        94           490             1    Loop was not SIMD vectorized because it contains 
                                          function calls.

  2119 |  void void std::__insertion_sort<__gnu_cxx::__normal_iterator<CTF_Function_timer*, std::vector<CTF_Function_timer, std::allocator<CTF_Function_timer> > >, bool (*)(CTF_Function_timer const&, CTF_Function_timer const&)>(__gnu_cxx::__normal_iterator<CTF_Function_timer*, std::vector<CTF_Function_timer, std::allocator<CTF_Function_timer> > >, __gnu_cxx::__normal_iterator<CTF_Function_timer*, std::vector<CTF_Function_timer, std::allocator<CTF_Function_timer> > >, bool (*)(CTF_Function_timer const&, CTF_Function_timer const&))(aggr8 __first, aggr8 __last, funcaddr __comp)
  2121 |  {
  2122 |    if (!(__first._M_current@0 == __last._M_current@0)) goto lab_1;
            goto lab_12;
          lab_1:
   739 |    __1607._M_current@0 = ((char *)__first._M_current@0  + 120ll);
            __i = __1607;
            if (!(__i._M_current@0 != __last._M_current@0)) goto lab_5;
            $$CIVINITB = __i._M_current@0;
            $$CIVFINALB = (unsigned long long) ((__last._M_current@0 - __i._M_current@0) / 120ll);
            $$CIVB = 0ll;
            do {   /* id=1 guarded */ /* ~3 */ 
              /* region = 19 */
              /* bump-normalized */
  2125 |      __i._M_current@0 = ((char *)$$CIVINITB  + $$CIVB * 120ll);
  2127 |      __val = $$CIVINITB[$$CIVB];
              $$RET2E.rnn45 = 0u == __comp->(bool (const CTF_Function_timer &, const CTF_Function_timer &)).rns325.(&__val,__first._M_current@0);
  2128 |      if (!($$RET2E.rnn45 == 0)) goto lab_6;
   739 |      __1618._M_current@0 = ((char *)$$CIVINITB  + ($$CIVB * 120ll + 120ll));
              __1693 = __1618;
   638 |      __1688 = __first;
              __1689 = __i;
   545 |      if (!((__1689._M_current@0 - __1688._M_current@0) / 120ll > 0ll)) goto lab_10;
              $$CIVA = 0ll;
              do {   /* id=2 guarded */ /* ~8 */ 
                /* region = 18 */
                /* bump-normalized */
   546 |        *((aggr120 *)((char *)__1693._M_current@0 + -120ll - $$CIVA * 120ll)) = *((aggr120 *)((char *)__1689._M_current@0 + -120ll - $$CIVA * 120ll));
   545 |        $$CIVA = $$CIVA + 1ll;
              } while ((unsigned long long) $$CIVA < (unsigned long long) ((__1689._M_current@0 - __1688._M_current@0) / 120ll));    /* ~8 */
            lab_10:
  2131 |      *__first._M_current@0 = __val;
  2132 |      goto lab_11;
            lab_6:
  2134 |      void std::__unguarded_linear_insert<__gnu_cxx::__normal_iterator<CTF_Function_timer*, std::vector<CTF_Function_timer, std::allocator<CTF_Function_timer> > >, CTF_Function_timer, bool (*)(CTF_Function_timer const&, CTF_Function_timer const&)>(__gnu_cxx::__normal_iterator<CTF_Function_timer*, std::vector<CTF_Function_timer, std::allocator<CTF_Function_timer> > >, CTF_Function_timer, bool (*)(CTF_Function_timer const&, CTF_Function_timer const&))(__i,__val,__comp)
            lab_11:
   710 |      $$CIVB = $$CIVB + 1ll;
            } while ((unsigned long long) $$CIVB < $$CIVFINALB);    /* ~3 */
          lab_5:
  2136 |  lab_12:
            return;
          } /* function */ 



Source        Source        Loop Id       Action / Information                                      
File          Line                                                                                  
----------    ----------    ----------    ----------------------------------------------------------
        81           739             1    Loop was not SIMD vectorized because it contains 
                                          function calls.
        56           546                  Loop was not SIMD vectorized because it contains 
                                          memory references  with  non-vectorizable strides.
        56           546                  Loop was not SIMD vectorized because it contains 
                                          unsupported vector data types.

  2079 |  void void std::__unguarded_linear_insert<__gnu_cxx::__normal_iterator<CTF_Function_timer*, std::vector<CTF_Function_timer, std::allocator<CTF_Function_timer> > >, CTF_Function_timer, bool (*)(CTF_Function_timer const&, CTF_Function_timer const&)>(__gnu_cxx::__normal_iterator<CTF_Function_timer*, std::vector<CTF_Function_timer, std::allocator<CTF_Function_timer> > >, CTF_Function_timer, bool (*)(CTF_Function_timer const&, CTF_Function_timer const&))(aggr8 __last, aggr120 __val, funcaddr __comp)
  2081 |  {
  2082 |    __next = __last;
   720 |    __next._M_current@0 = ((char *)__next._M_current@0  - 120ll);
   722 |    $$RET2F.rnn4C = 0u == __comp->(bool (const CTF_Function_timer &, const CTF_Function_timer &)).rns330.(&__val,__next._M_current@0);
  2084 |    if (!($$RET2F.rnn4C == 0)) goto lab_3;
            do {   /* id=1 */ /* ~1 */ 
              /* region = 9 */
  2086 |      *__last._M_current@0 = *__next._M_current@0;
  2087 |      __last = __next;
   720 |      __next._M_current@0 = ((char *)__next._M_current@0  - 120ll);
  2089 |      $$RET30.rnn4D = 0u == __comp->(bool (const CTF_Function_timer &, const CTF_Function_timer &)).rns333.(&__val,__next._M_current@0);
  2084 |    } while ($$RET30.rnn4D == 0);    /* ~1 */
          lab_3:
  2090 |    *__last._M_current@0 = __val;
  2091 |    return;
          } /* function */ 



Source        Source        Loop Id       Action / Information                                      
File          Line                                                                                  
----------    ----------    ----------    ----------------------------------------------------------
        86          2084             1    Loop cannot be normalized and no loop optimizations 
                                          applied.
        86          2084             1    Loop cannot be normalized and no loop optimizations 
                                          applied.
        86          2084             1    Loop was not SIMD vectorized because it contains 
                                          function calls.

  2204 |  aggr8 __gnu_cxx::__normal_iterator<CTF_Function_timer*, std::vector<CTF_Function_timer, std::allocator<CTF_Function_timer> > > std::__unguarded_partition<__gnu_cxx::__normal_iterator<CTF_Function_timer*, std::vector<CTF_Function_timer, std::allocator<CTF_Function_timer> > >, CTF_Function_timer>(__gnu_cxx::__normal_iterator<CTF_Function_timer*, std::vector<CTF_Function_timer, std::allocator<CTF_Function_timer> > >, __gnu_cxx::__normal_iterator<CTF_Function_timer*, std::vector<CTF_Function_timer, std::allocator<CTF_Function_timer> > >, CTF_Function_timer)(aggr8 __first, aggr8 __last, aggr120 __pivot)
  2206 |  {
  2207 |    do {   /* id=1 */ /* ~1 */ 
              /* region = 17 */
    45 |      $$IRET16 = (char) (*((double *)((char *)__first._M_current@0 + 96)) > &__pivot->(CTF_Function_timer).total_time@60.rns22.$$190);
  2209 |      if (0u == $$IRET16) goto lab_6;
              do {   /* id=3 */ /* ~4 */ 
                /* region = 15 */
   708 |        __first._M_current@0 = ((char *)__first._M_current@0  + 120ll);
    45 |        $$IRET12 = (char) (*((double *)((char *)__first._M_current@0 + 96)) > &__pivot->(CTF_Function_timer).total_time@60.rns22.$$190);
  2209 |      } while (!(0u == $$IRET12));   /* ~4 */
            lab_6:
   720 |      __last._M_current@0 = ((char *)__last._M_current@0  - 120ll);
    45 |      $$IRET15 = (char) (&__pivot->(CTF_Function_timer).total_time@60.rns23.$$189 > *((double *)((char *)__last._M_current@0 + 96)));
  2212 |      if (0u == $$IRET15) goto lab_9;
              do {   /* id=2 */ /* ~7 */ 
                /* region = 16 */
   720 |        __last._M_current@0 = ((char *)__last._M_current@0  - 120ll);
    45 |        $$IRET13 = (char) (&__pivot->(CTF_Function_timer).total_time@60.rns23.$$189 > *((double *)((char *)__last._M_current@0 + 96)));
  2212 |      } while (!(0u == $$IRET13));   /* ~7 */
            lab_9:
  2214 |      if (!(__first._M_current@0 < __last._M_current@0)) goto lab_12;
  2216 |      __1726 = __first;
              __1727 = __last;
    81 |      __tmp = *__1726._M_current@0;
    82 |      *__1726._M_current@0 = *__1727._M_current@0;
    83 |      *__1727._M_current@0 = __tmp;
   708 |      __first._M_current@0 = ((char *)__first._M_current@0  + 120ll);
  2207 |    } while (1);   /* ~1 */
  2214 |  lab_12:
  2215 |    rstr = __first;
            return rstr;
  2219 |  } /* function */ 



Source        Source        Loop Id       Action / Information                                      
File          Line                                                                                  
----------    ----------    ----------    ----------------------------------------------------------
        86          2207             1    Loop was not SIMD vectorized because the loop is not 
                                          the innermost loop.
        86          2207             1    Loop was not SIMD vectorized because it contains 
                                          unsupported loop structure.
        86          2209             3    Loop cannot be normalized and no loop optimizations 
                                          applied.
        86          2209             3    Loop cannot be normalized and no loop optimizations 
                                          applied.
        86          2209             3    Loop was not SIMD vectorized because it contains 
                                          unsupported loop structure.
        86          2212             2    Loop cannot be normalized and no loop optimizations 
                                          applied.
        86          2212             2    Loop cannot be normalized and no loop optimizations 
                                          applied.
        86          2212             2    Loop was not SIMD vectorized because it contains 
                                          unsupported loop structure.

  1900 |  void void std::__heap_select<__gnu_cxx::__normal_iterator<CTF_Function_timer*, std::vector<CTF_Function_timer, std::allocator<CTF_Function_timer> > > >(__gnu_cxx::__normal_iterator<CTF_Function_timer*, std::vector<CTF_Function_timer, std::allocator<CTF_Function_timer> > >, __gnu_cxx::__normal_iterator<CTF_Function_timer*, std::vector<CTF_Function_timer, std::allocator<CTF_Function_timer> > >, __gnu_cxx::__normal_iterator<CTF_Function_timer*, std::vector<CTF_Function_timer, std::allocator<CTF_Function_timer> > >)(aggr8 __first, aggr8 __middle, aggr8 __last)
  1903 |  {
  1904 |    void std::make_heap<__gnu_cxx::__normal_iterator<CTF_Function_timer*, std::vector<CTF_Function_timer, std::allocator<CTF_Function_timer> > > >(__gnu_cxx::__normal_iterator<CTF_Function_timer*, std::vector<CTF_Function_timer, std::allocator<CTF_Function_timer> > >, __gnu_cxx::__normal_iterator<CTF_Function_timer*, std::vector<CTF_Function_timer, std::allocator<CTF_Function_timer> > >)(__first,__middle)
  1905 |    __i = __middle;
            if (!(__i._M_current@0 < __last._M_current@0)) goto lab_3;
            $$CIVINITC = __i._M_current@0;
            $$CIVFINALC = (unsigned long long) (((__last._M_current@0 - 1) - __i._M_current@0) / 120ll + 1ll);
            $$CIVC = 0ll;
            do {   /* id=1 guarded */ /* ~1 */ 
              /* region = 11 */
              /* bump-normalized */
              __i._M_current@0 = ((char *)$$CIVINITC  + $$CIVC * 120ll);
    45 |      $$IRET18 = (char) (*(((double *)((char *)$$CIVINITC + 96)) + $$CIVC * 120ll / 8) > *((double *)((char *)__first._M_current@0 + 96)));
  1906 |      if (0u == $$IRET18) goto lab_4;
  1907 |      __1762 = __i;
   258 |      __value = *__1762._M_current@0;
   259 |      *__1762._M_current@0 = *__first._M_current@0;
   260 |      void std::__adjust_heap<__gnu_cxx::__normal_iterator<CTF_Function_timer*, std::vector<CTF_Function_timer, std::allocator<CTF_Function_timer> > >, long, CTF_Function_timer>(__gnu_cxx::__normal_iterator<CTF_Function_timer*, std::vector<CTF_Function_timer, std::allocator<CTF_Function_timer> > >, long, long, CTF_Function_timer)(__first,0ll,(__middle._M_current@0 - __first._M_current@0) / 120ll,__value)
   263 |    lab_4:
   710 |      $$CIVC = $$CIVC + 1ll;
            } while ((unsigned long long) $$CIVC < $$CIVFINALC);    /* ~1 */
          lab_3:
  1908 |    return;
          } /* function */ 



Source        Source        Loop Id       Action / Information                                      
File          Line                                                                                  
----------    ----------    ----------    ----------------------------------------------------------
        86          1905             1    Loop was not SIMD vectorized because it contains 
                                          function calls.

   452 |  void void std::sort_heap<__gnu_cxx::__normal_iterator<CTF_Function_timer*, std::vector<CTF_Function_timer, std::allocator<CTF_Function_timer> > > >(__gnu_cxx::__normal_iterator<CTF_Function_timer*, std::vector<CTF_Function_timer, std::allocator<CTF_Function_timer> > >, __gnu_cxx::__normal_iterator<CTF_Function_timer*, std::vector<CTF_Function_timer, std::allocator<CTF_Function_timer> > >)(aggr8 __first, aggr8 __last)
   453 |  {
   462 |    if (!((__last._M_current@0 - __first._M_current@0) / 120ll > 1ll)) goto lab_3;
            do {   /* id=1 guarded */ /* ~1 */ 
              /* region = 9 */
   720 |      __last._M_current@0 = ((char *)__last._M_current@0  - 120ll);
   465 |      __1794 = __last;
              __1795 = __last;
   258 |      __value = *__1795._M_current@0;
   259 |      *__1795._M_current@0 = *__first._M_current@0;
   260 |      void std::__adjust_heap<__gnu_cxx::__normal_iterator<CTF_Function_timer*, std::vector<CTF_Function_timer, std::allocator<CTF_Function_timer> > >, long, CTF_Function_timer>(__gnu_cxx::__normal_iterator<CTF_Function_timer*, std::vector<CTF_Function_timer, std::allocator<CTF_Function_timer> > >, long, long, CTF_Function_timer)(__first,0ll,(__1794._M_current@0 - __first._M_current@0) / 120ll,__value)
   462 |    } while ((__last._M_current@0 - __first._M_current@0) / 120ll > 1ll);    /* ~1 */
          lab_3:
   467 |    return;
          } /* function */ 



Source        Source        Loop Id       Action / Information                                      
File          Line                                                                                  
----------    ----------    ----------    ----------------------------------------------------------
        94           462             1    Loop cannot be normalized and no loop optimizations 
                                          applied.
        94           462             1    Loop cannot be normalized and no loop optimizations 
                                          applied.
        94           462             1    Loop was not SIMD vectorized because it contains 
                                          function calls.

  2096 |  void void std::__insertion_sort<__gnu_cxx::__normal_iterator<CTF_Function_timer*, std::vector<CTF_Function_timer, std::allocator<CTF_Function_timer> > > >(__gnu_cxx::__normal_iterator<CTF_Function_timer*, std::vector<CTF_Function_timer, std::allocator<CTF_Function_timer> > >, __gnu_cxx::__normal_iterator<CTF_Function_timer*, std::vector<CTF_Function_timer, std::allocator<CTF_Function_timer> > >)(aggr8 __first, aggr8 __last)
  2098 |  {
  2099 |    if (!(__first._M_current@0 == __last._M_current@0)) goto lab_1;
  2100 |    goto lab_12;
          lab_1:
   739 |    __1825._M_current@0 = ((char *)__first._M_current@0  + 120ll);
            __i = __1825;
            if (!(__i._M_current@0 != __last._M_current@0)) goto lab_5;
            $$CIVINITE = __i._M_current@0;
            $$CIVFINALE = (unsigned long long) ((__last._M_current@0 - __i._M_current@0) / 120ll);
            $$CIVE = 0ll;
            do {   /* id=1 guarded */ /* ~3 */ 
              /* region = 19 */
              /* bump-normalized */
  2103 |      __i._M_current@0 = ((char *)$$CIVINITE  + $$CIVE * 120ll);
  2105 |      __val = $$CIVINITE[$$CIVE];
    45 |      $$IRET1A = (char) (&__val->(CTF_Function_timer).total_time@60.rns23.$$195 > *((double *)((char *)__first._M_current@0 + 96)));
  2106 |      if (0u == $$IRET1A) goto lab_6;
   739 |      __1836._M_current@0 = ((char *)$$CIVINITE  + ($$CIVE * 120ll + 120ll));
              __1911 = __1836;
   638 |      __1906 = __first;
              __1907 = __i;
   545 |      if (!((__1907._M_current@0 - __1906._M_current@0) / 120ll > 0ll)) goto lab_10;
              $$CIVD = 0ll;
              do {   /* id=2 guarded */ /* ~8 */ 
                /* region = 18 */
                /* bump-normalized */
   546 |        *((aggr120 *)((char *)__1911._M_current@0 + -120ll - $$CIVD * 120ll)) = *((aggr120 *)((char *)__1907._M_current@0 + -120ll - $$CIVD * 120ll));
   545 |        $$CIVD = $$CIVD + 1ll;
              } while ((unsigned long long) $$CIVD < (unsigned long long) ((__1907._M_current@0 - __1906._M_current@0) / 120ll));    /* ~8 */
            lab_10:
  2109 |      *__first._M_current@0 = __val;
  2110 |      goto lab_11;
            lab_6:
  2112 |      void std::__unguarded_linear_insert<__gnu_cxx::__normal_iterator<CTF_Function_timer*, std::vector<CTF_Function_timer, std::allocator<CTF_Function_timer> > >, CTF_Function_timer>(__gnu_cxx::__normal_iterator<CTF_Function_timer*, std::vector<CTF_Function_timer, std::allocator<CTF_Function_timer> > >, CTF_Function_timer)(__i,__val)
            lab_11:
   710 |      $$CIVE = $$CIVE + 1ll;
            } while ((unsigned long long) $$CIVE < $$CIVFINALE);    /* ~3 */
          lab_5:
  2114 |  lab_12:
            return;
          } /* function */ 



Source        Source        Loop Id       Action / Information                                      
File          Line                                                                                  
----------    ----------    ----------    ----------------------------------------------------------
        81           739             1    Loop was not SIMD vectorized because it contains 
                                          function calls.
        56           546                  Loop was not SIMD vectorized because it contains 
                                          memory references  with  non-vectorizable strides.
        56           546                  Loop was not SIMD vectorized because it contains 
                                          unsupported vector data types.

  2063 |  void void std::__unguarded_linear_insert<__gnu_cxx::__normal_iterator<CTF_Function_timer*, std::vector<CTF_Function_timer, std::allocator<CTF_Function_timer> > >, CTF_Function_timer>(__gnu_cxx::__normal_iterator<CTF_Function_timer*, std::vector<CTF_Function_timer, std::allocator<CTF_Function_timer> > >, CTF_Function_timer)(aggr8 __last, aggr120 __val)
  2064 |  {
  2065 |    __next = __last;
   720 |    __next._M_current@0 = ((char *)__next._M_current@0  - 120ll);
    45 |    $$IRET21 = (char) (&__val->(CTF_Function_timer).total_time@60.rns23.$$198 > *((double *)((char *)__next._M_current@0 + 96)));
  2067 |    if (0u == $$IRET21) goto lab_3;
            do {   /* id=1 */ /* ~1 */ 
              /* region = 9 */
  2069 |      *__last._M_current@0 = *__next._M_current@0;
  2070 |      __last = __next;
   720 |      __next._M_current@0 = ((char *)__next._M_current@0  - 120ll);
    45 |      $$IRET17 = (char) (&__val->(CTF_Function_timer).total_time@60.rns23.$$198 > *((double *)((char *)__next._M_current@0 + 96)));
  2067 |    } while (!(0u == $$IRET17));   /* ~1 */
          lab_3:
  2073 |    *__last._M_current@0 = __val;
  2074 |    return;
          } /* function */ 



Source        Source        Loop Id       Action / Information                                      
File          Line                                                                                  
----------    ----------    ----------    ----------------------------------------------------------
        86          2067             1    Loop cannot be normalized and no loop optimizations 
                                          applied.
        86          2067             1    Loop cannot be normalized and no loop optimizations 
                                          applied.
        86          2067             1    Loop was not SIMD vectorized because it contains 
                                          unsupported loop structure.

          char * std::_Vector_base<CTF_Function_timer, std::allocator<CTF_Function_timer> >::_Vector_impl::~_Vector_impl()(char * this)
          {
   109 |    $$PARM.this0 = this;
    73 |    $$IRET0 = $$PARM.this0;
   109 |    $$IRET1 = this;
            rstr = this;
            return rstr;
          } /* function */ 


    67 |  char * CTF_Function_timer* std::__uninitialized_copy<false>::uninitialized_copy<__gnu_cxx::__normal_iterator<CTF_Function_timer const*, std::vector<CTF_Function_timer, std::allocator<CTF_Function_timer> > >, CTF_Function_timer*>(__gnu_cxx::__normal_iterator<CTF_Function_timer const*, std::vector<CTF_Function_timer, std::allocator<CTF_Function_timer> > >, __gnu_cxx::__normal_iterator<CTF_Function_timer const*, std::vector<CTF_Function_timer, std::allocator<CTF_Function_timer> > >, CTF_Function_timer*)(aggr8 __first, aggr8 __last, CTF_Function_timer *__result)
    69 |  {
    70 |    __cur = __result;
    73 |    if (!((unsigned long long) ((__last._M_current@0 - __first._M_current@0) / 120ll) > 16ull)) goto lab_12;
            if (!((((__last._M_current@0 - __first._M_current@0) / 120ll) * 120ll + (long long) __result) - 120ll < (long long) __first._M_current@0 | (((__last._M_current@0 - __first._M_current@0) / 120ll) * 120ll + (long long) __first._M_current@0) - 120ll < (long long) __result)) goto lab_7;
    70 |    if (!(__first._M_current@0 != __last._M_current@0)) goto lab_3;
            $$CIVF = 0ll;
            do {   /* id=1 guarded */ /* ~1 */ 
              /* region = 19 */
              /* bump-normalized */
              /* independent */
   101 |      if (!(NULL != ((char *)__result  + $$CIVF * 120ll))) goto lab_5;
    74 |      __result[$$CIVF] = __first._M_current@0[$$CIVF];
            lab_5:
   710 |      $$CIVF = $$CIVF + 1ll;
            } while ((unsigned long long) $$CIVF < (unsigned long long) ((__last._M_current@0 - __first._M_current@0) / 120ll));    /* ~1 */
            __cur = ((char *)__result  + ((__last._M_current@0 - __first._M_current@0) / 120ll) * 120ll);
          lab_3:
            goto lab_8;
          lab_7:
    70 |  lab_12:
            if (!(__first._M_current@0 != __last._M_current@0)) goto lab_11;
            $$CIVF = 0ll;
            do {   /* id=2 guarded */ /* ~9 */ 
              /* region = 20 */
              /* bump-normalized */
   101 |      if (!(NULL != ((char *)__result  + $$CIVF * 120ll))) goto lab_10;
    74 |      __result[$$CIVF] = __first._M_current@0[$$CIVF];
            lab_10:
   710 |      $$CIVF = $$CIVF + 1ll;
            } while ((unsigned long long) $$CIVF < (unsigned long long) ((__last._M_current@0 - __first._M_current@0) / 120ll));    /* ~9 */
            __cur = ((char *)__result  + ((__last._M_current@0 - __first._M_current@0) / 120ll) * 120ll);
          lab_11:
          lab_8:
    76 |    rstr = __cur;
            return rstr;
    83 |  } /* function */ 



Source        Source        Loop Id       Action / Information                                      
File          Line                                                                                  
----------    ----------    ----------    ----------------------------------------------------------
       101            70             1    Loop was not SIMD vectorized because it contains 
                                          unsupported loop structure.
       101            70             1    Loop was not SIMD vectorized because it contains 
                                          control flow.
       101            70             2    Loop was not SIMD vectorized because it contains 
                                          unsupported loop structure.
       101            70             2    Loop was not SIMD vectorized because it contains 
                                          control flow.

   413 |  void void std::make_heap<__gnu_cxx::__normal_iterator<CTF_Function_timer*, std::vector<CTF_Function_timer, std::allocator<CTF_Function_timer> > >, bool (*)(CTF_Function_timer const&, CTF_Function_timer const&)>(__gnu_cxx::__normal_iterator<CTF_Function_timer*, std::vector<CTF_Function_timer, std::allocator<CTF_Function_timer> > >, __gnu_cxx::__normal_iterator<CTF_Function_timer*, std::vector<CTF_Function_timer, std::allocator<CTF_Function_timer> > >, bool (*)(CTF_Function_timer const&, CTF_Function_timer const&))(aggr8 __first, aggr8 __last, funcaddr __comp)
   415 |  {
   426 |    if (!((__last._M_current@0 - __first._M_current@0) / 120ll < 2ll)) goto lab_1;
   440 |  lab_8:
            return;
   427 |  lab_1:
   430 |    __parent = ((__last._M_current@0 - __first._M_current@0) / 120ll - 2ll) / 2ll;
   431 |    do {   /* id=1 */ /* ~3 */ 
              /* region = 10 */
   739 |      __1975._M_current@0 = ((char *)__first._M_current@0  + __parent * 120ll);
              __1968 = __1975;
   434 |      void std::__adjust_heap<__gnu_cxx::__normal_iterator<CTF_Function_timer*, std::vector<CTF_Function_timer, std::allocator<CTF_Function_timer> > >, long, CTF_Function_timer, bool (*)(CTF_Function_timer const&, CTF_Function_timer const&)>(__gnu_cxx::__normal_iterator<CTF_Function_timer*, std::vector<CTF_Function_timer, std::allocator<CTF_Function_timer> > >, long, long, CTF_Function_timer, bool (*)(CTF_Function_timer const&, CTF_Function_timer const&))(__first,__parent,(__last._M_current@0 - __first._M_current@0) / 120ll,*(__normal_iterator<CTF_Function_timer *,std::vector<CTF_Function_timer,std::allocator<CTF_Function_timer> > >)._M_current@0.rns361..mga.__1968,__comp)
   436 |      if (__parent == 0ll) goto lab_9;
   438 |      __parent = __parent + -1ll;
   431 |    } while (1);   /* ~3 */
   436 |  lab_9:
   437 |    goto lab_8;
   440 |  } /* function */ 



Source        Source        Loop Id       Action / Information                                      
File          Line                                                                                  
----------    ----------    ----------    ----------------------------------------------------------
        94           431             1    Loop was not SIMD vectorized because it contains 
                                          function calls.

   295 |  void void std::__adjust_heap<__gnu_cxx::__normal_iterator<CTF_Function_timer*, std::vector<CTF_Function_timer, std::allocator<CTF_Function_timer> > >, long, CTF_Function_timer, bool (*)(CTF_Function_timer const&, CTF_Function_timer const&)>(__gnu_cxx::__normal_iterator<CTF_Function_timer*, std::vector<CTF_Function_timer, std::allocator<CTF_Function_timer> > >, long, long, CTF_Function_timer, bool (*)(CTF_Function_timer const&, CTF_Function_timer const&))(aggr8 __first, long long __holeIndex, long long __len, aggr120 __value, funcaddr __comp)
   297 |  {
   298 |    __topIndex = __holeIndex;
   299 |    __secondChild = __holeIndex;
   300 |    if (!(__holeIndex < (__len - 1ll) / 2ll)) goto lab_3;
            do {   /* id=1 guarded */ /* ~1 */ 
              /* region = 12 */
   739 |      __1990._M_current@0 = ((char *)__first._M_current@0  + (__secondChild * 240ll + 240ll));
              __1982 = __1990;
              __1997._M_current@0 = ((char *)__first._M_current@0  + (__secondChild * 240ll + 120ll));
              __1984 = __1997;
              $$RET39 = __comp->(bool (const CTF_Function_timer &, const CTF_Function_timer &)).rns362.((__normal_iterator<CTF_Function_timer *,std::vector<CTF_Function_timer,std::allocator<CTF_Function_timer> > >)._M_current@0.rns370..mga.__1982,(__normal_iterator<CTF_Function_timer *,std::vector<CTF_Function_timer,std::allocator<CTF_Function_timer> > >)._M_current@0.rns371..mga.__1984);
   305 |      __secondChild = ($$RET39 != 0u ? __secondChild * 2ll + 1ll : __secondChild * 2ll + 2ll);
   739 |      __2004._M_current@0 = ((char *)__first._M_current@0  + __holeIndex * 120ll);
              __1985 = __2004;
              __2011._M_current@0 = ((char *)__first._M_current@0  + __secondChild * 120ll);
              __1986 = __2011;
   699 |      *(__normal_iterator<CTF_Function_timer *,std::vector<CTF_Function_timer,std::allocator<CTF_Function_timer> > >)._M_current@0.rns372..mga.__1985 = *(__normal_iterator<CTF_Function_timer *,std::vector<CTF_Function_timer,std::allocator<CTF_Function_timer> > >)._M_current@0.rns373..mga.__1986;
   307 |      __holeIndex = __secondChild;
   300 |    } while (__secondChild < (__len - 1ll) / 2ll);    /* ~1 */
          lab_3:
   309 |    if (!(0ll == (__len & 1ll))) goto lab_6;
            if (!(__secondChild == (__len - 2ll) / 2ll)) goto lab_6;
   739 |    __2018._M_current@0 = ((char *)__first._M_current@0  + __holeIndex * 120ll);
            __1987 = __2018;
            __2025._M_current@0 = ((char *)__first._M_current@0  + (__secondChild * 240ll + 120ll));
            __1989 = __2025;
   699 |    *(__normal_iterator<CTF_Function_timer *,std::vector<CTF_Function_timer,std::allocator<CTF_Function_timer> > >)._M_current@0.rns374..mga.__1987 = *(__normal_iterator<CTF_Function_timer *,std::vector<CTF_Function_timer,std::allocator<CTF_Function_timer> > >)._M_current@0.rns375..mga.__1989;
   314 |    __holeIndex = __secondChild * 2ll + 1ll;
   315 |  lab_6:
   316 |    void std::__push_heap<__gnu_cxx::__normal_iterator<CTF_Function_timer*, std::vector<CTF_Function_timer, std::allocator<CTF_Function_timer> > >, long, CTF_Function_timer, bool (*)(CTF_Function_timer const&, CTF_Function_timer const&)>(__gnu_cxx::__normal_iterator<CTF_Function_timer*, std::vector<CTF_Function_timer, std::allocator<CTF_Function_timer> > >, long, long, CTF_Function_timer, bool (*)(CTF_Function_timer const&, CTF_Function_timer const&))(__first,__holeIndex,__topIndex,__value,__comp)
   318 |    return;
          } /* function */ 



Source        Source        Loop Id       Action / Information                                      
File          Line                                                                                  
----------    ----------    ----------    ----------------------------------------------------------
        94           300             1    Loop was not SIMD vectorized because it contains 
                                          function calls.

   373 |  void void std::make_heap<__gnu_cxx::__normal_iterator<CTF_Function_timer*, std::vector<CTF_Function_timer, std::allocator<CTF_Function_timer> > > >(__gnu_cxx::__normal_iterator<CTF_Function_timer*, std::vector<CTF_Function_timer, std::allocator<CTF_Function_timer> > >, __gnu_cxx::__normal_iterator<CTF_Function_timer*, std::vector<CTF_Function_timer, std::allocator<CTF_Function_timer> > >)(aggr8 __first, aggr8 __last)
   374 |  {
   386 |    if (!((__last._M_current@0 - __first._M_current@0) / 120ll < 2ll)) goto lab_1;
   399 |  lab_8:
            return;
   387 |  lab_1:
   390 |    __parent = ((__last._M_current@0 - __first._M_current@0) / 120ll - 2ll) / 2ll;
   391 |    do {   /* id=1 */ /* ~3 */ 
              /* region = 10 */
   739 |      __2059._M_current@0 = ((char *)__first._M_current@0  + __parent * 120ll);
              __2052 = __2059;
   394 |      void std::__adjust_heap<__gnu_cxx::__normal_iterator<CTF_Function_timer*, std::vector<CTF_Function_timer, std::allocator<CTF_Function_timer> > >, long, CTF_Function_timer>(__gnu_cxx::__normal_iterator<CTF_Function_timer*, std::vector<CTF_Function_timer, std::allocator<CTF_Function_timer> > >, long, long, CTF_Function_timer)(__first,__parent,(__last._M_current@0 - __first._M_current@0) / 120ll,*(__normal_iterator<CTF_Function_timer *,std::vector<CTF_Function_timer,std::allocator<CTF_Function_timer> > >)._M_current@0.rns378..mga.__2052)
   395 |      if (__parent == 0ll) goto lab_9;
   397 |      __parent = __parent + -1ll;
   391 |    } while (1);   /* ~3 */
   395 |  lab_9:
   396 |    goto lab_8;
   399 |  } /* function */ 



Source        Source        Loop Id       Action / Information                                      
File          Line                                                                                  
----------    ----------    ----------    ----------------------------------------------------------
        94           391             1    Loop was not SIMD vectorized because it contains 
                                          function calls.

   224 |  void void std::__adjust_heap<__gnu_cxx::__normal_iterator<CTF_Function_timer*, std::vector<CTF_Function_timer, std::allocator<CTF_Function_timer> > >, long, CTF_Function_timer>(__gnu_cxx::__normal_iterator<CTF_Function_timer*, std::vector<CTF_Function_timer, std::allocator<CTF_Function_timer> > >, long, long, CTF_Function_timer)(aggr8 __first, long long __holeIndex, long long __len, aggr120 __value)
   226 |  {
   227 |    __topIndex = __holeIndex;
   228 |    __secondChild = __holeIndex;
   229 |    if (!(__holeIndex < (__len - 1ll) / 2ll)) goto lab_3;
            do {   /* id=1 guarded */ /* ~1 */ 
              /* region = 12 */
   739 |      __2074._M_current@0 = ((char *)__first._M_current@0  + (__secondChild * 240ll + 240ll));
              __2066 = __2074;
              __2081._M_current@0 = ((char *)__first._M_current@0  + (__secondChild * 240ll + 120ll));
              __2068 = __2081;
              $$RET3A = (char) (*((double *)((char *)(__normal_iterator<CTF_Function_timer *,std::vector<CTF_Function_timer,std::allocator<CTF_Function_timer> > >)._M_current@0.rns386..mga.__2066 + 96)) > *((double *)((char *)(__normal_iterator<CTF_Function_timer *,std::vector<CTF_Function_timer,std::allocator<CTF_Function_timer> > >)._M_current@0.rns387..mga.__2068 + 96)));
   233 |      __secondChild = ($$RET3A != 0u ? __secondChild * 2ll + 1ll : __secondChild * 2ll + 2ll);
   739 |      __2088._M_current@0 = ((char *)__first._M_current@0  + __holeIndex * 120ll);
              __2069 = __2088;
              __2095._M_current@0 = ((char *)__first._M_current@0  + __secondChild * 120ll);
              __2070 = __2095;
   699 |      *(__normal_iterator<CTF_Function_timer *,std::vector<CTF_Function_timer,std::allocator<CTF_Function_timer> > >)._M_current@0.rns388..mga.__2069 = *(__normal_iterator<CTF_Function_timer *,std::vector<CTF_Function_timer,std::allocator<CTF_Function_timer> > >)._M_current@0.rns389..mga.__2070;
   235 |      __holeIndex = __secondChild;
   229 |    } while (__secondChild < (__len - 1ll) / 2ll);    /* ~1 */
          lab_3:
   237 |    if (!(0ll == (__len & 1ll))) goto lab_6;
            if (!(__secondChild == (__len - 2ll) / 2ll)) goto lab_6;
   739 |    __2102._M_current@0 = ((char *)__first._M_current@0  + __holeIndex * 120ll);
            __2071 = __2102;
            __2109._M_current@0 = ((char *)__first._M_current@0  + (__secondChild * 240ll + 120ll));
            __2073 = __2109;
   699 |    *(__normal_iterator<CTF_Function_timer *,std::vector<CTF_Function_timer,std::allocator<CTF_Function_timer> > >)._M_current@0.rns390..mga.__2071 = *(__normal_iterator<CTF_Function_timer *,std::vector<CTF_Function_timer,std::allocator<CTF_Function_timer> > >)._M_current@0.rns391..mga.__2073;
   242 |    __holeIndex = __secondChild * 2ll + 1ll;
   243 |  lab_6:
   244 |    void std::__push_heap<__gnu_cxx::__normal_iterator<CTF_Function_timer*, std::vector<CTF_Function_timer, std::allocator<CTF_Function_timer> > >, long, CTF_Function_timer>(__gnu_cxx::__normal_iterator<CTF_Function_timer*, std::vector<CTF_Function_timer, std::allocator<CTF_Function_timer> > >, long, long, CTF_Function_timer)(__first,__holeIndex,__topIndex,__value)
   246 |    return;
          } /* function */ 



Source        Source        Loop Id       Action / Information                                      
File          Line                                                                                  
----------    ----------    ----------    ----------------------------------------------------------
        94           229             1    Loop was not SIMD vectorized because it contains 
                                          unsupported loop structure.

   109 |  char * std::allocator<CTF_Function_timer>::~allocator()(char * this)
          {
            $$PARM.this0 = this;
    73 |    $$IRET0 = $$PARM.this0;
   109 |    rstr = this;
            return rstr;
          } /* function */ 


   176 |  void void std::__push_heap<__gnu_cxx::__normal_iterator<CTF_Function_timer*, std::vector<CTF_Function_timer, std::allocator<CTF_Function_timer> > >, long, CTF_Function_timer, bool (*)(CTF_Function_timer const&, CTF_Function_timer const&)>(__gnu_cxx::__normal_iterator<CTF_Function_timer*, std::vector<CTF_Function_timer, std::allocator<CTF_Function_timer> > >, long, long, CTF_Function_timer, bool (*)(CTF_Function_timer const&, CTF_Function_timer const&))(aggr8 __first, long long __holeIndex, long long __topIndex, aggr120 __value, funcaddr __comp)
   178 |  {
   180 |    if (!(__holeIndex > __topIndex)) goto lab_3;
   739 |    __2120._M_current@0 = ((char *)__first._M_current@0  + ((__holeIndex - 1ll) / 2ll) * 120ll);
            __2116 = __2120;
            $$RET3B.rnn61 = 0u == __comp->(bool (const CTF_Function_timer &, const CTF_Function_timer &)).rns393.((__normal_iterator<CTF_Function_timer *,std::vector<CTF_Function_timer,std::allocator<CTF_Function_timer> > >)._M_current@0.rns400..mga.__2116,&__value);
            if (!($$RET3B.rnn61 == 0)) goto lab_3;
   179 |    __parent = (__holeIndex - 1ll) / 2ll;
   739 |    do {   /* id=1 */ /* ~1 */ 
              /* region = 11 */
              __2127._M_current@0 = ((char *)__first._M_current@0  + __holeIndex * 120ll);
              __2117 = __2127;
              __2134._M_current@0 = ((char *)__first._M_current@0  + __parent * 120ll);
              __2118 = __2134;
   699 |      *(__normal_iterator<CTF_Function_timer *,std::vector<CTF_Function_timer,std::allocator<CTF_Function_timer> > >)._M_current@0.rns401..mga.__2117 = *(__normal_iterator<CTF_Function_timer *,std::vector<CTF_Function_timer,std::allocator<CTF_Function_timer> > >)._M_current@0.rns402..mga.__2118;
   184 |      __holeIndex = __parent;
   181 |      if (!(__parent > __topIndex)) goto lab_3;
   185 |      __parent = (__parent - 1ll) / 2ll;
   739 |      __2120._M_current@0 = ((char *)__first._M_current@0  + __parent * 120ll);
              __2116 = __2120;
              $$RET3C.rnn62 = 0u == __comp->(bool (const CTF_Function_timer &, const CTF_Function_timer &)).rns397.((__normal_iterator<CTF_Function_timer *,std::vector<CTF_Function_timer,std::allocator<CTF_Function_timer> > >)._M_current@0.rns400..mga.__2116,&__value);
            } while ($$RET3C.rnn62 == 0);    /* ~1 */
          lab_3:
            __2141._M_current@0 = ((char *)__first._M_current@0  + __holeIndex * 120ll);
            __2119 = __2141;
            *(__normal_iterator<CTF_Function_timer *,std::vector<CTF_Function_timer,std::allocator<CTF_Function_timer> > >)._M_current@0.rns403..mga.__2119 = __value;
   188 |    return;
          } /* function */ 



Source        Source        Loop Id       Action / Information                                      
File          Line                                                                                  
----------    ----------    ----------    ----------------------------------------------------------
        81           739             1    Loop was not SIMD vectorized because it contains 
                                          function calls.

   130 |  void void std::__push_heap<__gnu_cxx::__normal_iterator<CTF_Function_timer*, std::vector<CTF_Function_timer, std::allocator<CTF_Function_timer> > >, long, CTF_Function_timer>(__gnu_cxx::__normal_iterator<CTF_Function_timer*, std::vector<CTF_Function_timer, std::allocator<CTF_Function_timer> > >, long, long, CTF_Function_timer)(aggr8 __first, long long __holeIndex, long long __topIndex, aggr120 __value)
   132 |  {
   134 |    if (!(__holeIndex > __topIndex)) goto lab_3;
   739 |    __2152._M_current@0 = ((char *)__first._M_current@0  + ((__holeIndex - 1ll) / 2ll) * 120ll);
            __2148 = __2152;
    45 |    $$IRET20 = (char) (*((double *)((char *)(__normal_iterator<CTF_Function_timer *,std::vector<CTF_Function_timer,std::allocator<CTF_Function_timer> > >)._M_current@0.rns409..mga.__2148 + 96)) > &__value->(CTF_Function_timer).total_time@60.rns22.$$209);
   699 |    if (0u == $$IRET20) goto lab_3;
   133 |    __parent = (__holeIndex - 1ll) / 2ll;
   699 |    do {   /* id=1 */ /* ~1 */ 
              /* region = 11 */
   739 |      __2159._M_current@0 = ((char *)__first._M_current@0  + __holeIndex * 120ll);
              __2149 = __2159;
              __2166._M_current@0 = ((char *)__first._M_current@0  + __parent * 120ll);
              __2150 = __2166;
   699 |      *(__normal_iterator<CTF_Function_timer *,std::vector<CTF_Function_timer,std::allocator<CTF_Function_timer> > >)._M_current@0.rns410..mga.__2149 = *(__normal_iterator<CTF_Function_timer *,std::vector<CTF_Function_timer,std::allocator<CTF_Function_timer> > >)._M_current@0.rns411..mga.__2150;
   137 |      __holeIndex = __parent;
   134 |      if (!(__parent > __topIndex)) goto lab_3;
   138 |      __parent = (__parent - 1ll) / 2ll;
   739 |      __2152._M_current@0 = ((char *)__first._M_current@0  + __parent * 120ll);
              __2148 = __2152;
    45 |      $$IRET19 = (char) (*((double *)((char *)(__normal_iterator<CTF_Function_timer *,std::vector<CTF_Function_timer,std::allocator<CTF_Function_timer> > >)._M_current@0.rns409..mga.__2148 + 96)) > &__value->(CTF_Function_timer).total_time@60.rns22.$$210);
   699 |    } while (!(0u == $$IRET19));   /* ~1 */
          lab_3:
   739 |    __2173._M_current@0 = ((char *)__first._M_current@0  + __holeIndex * 120ll);
            __2151 = __2173;
            *(__normal_iterator<CTF_Function_timer *,std::vector<CTF_Function_timer,std::allocator<CTF_Function_timer> > >)._M_current@0.rns412..mga.__2151 = __value;
   141 |    return;
          } /* function */ 



Source        Source        Loop Id       Action / Information                                      
File          Line                                                                                  
----------    ----------    ----------    ----------------------------------------------------------
        81           699             1    Loop was not SIMD vectorized because it contains 
                                          unsupported loop structure.
        81           699             1    Loop was not SIMD vectorized because it contains 
                                          control flow.

    73 |  char * __gnu_cxx::new_allocator<CTF_Function_timer>::~new_allocator()(char * this)
          {
            rstr = this;
            return rstr;
          } /* function */ 


          void __sinit65535()()
          {
    72 |    std::ios_base::Init::Init()(&__ioinit);
            __cxa_atexit(&__srterm__0(),NULL,&__dso_handle);
            return;
          } /* function */ 


          void __srterm__0()()
          {
    72 |    std::ios_base::Init::~Init()(&__ioinit);
            return;
          } /* function */ 


    23 |  char * CTF_Function_timer::CTF_Function_timer(char const*, double, double)(CTF_Function_timer *this, char * name_, double start_time_, double start_excl_time_)
    25 |  {
            guard__ZGVZN18CTF_Function_timerC1EPKcddE8__func__ = 1;
    26 |    $$RET0 = __builtin_strlen(name_);
            if ($$RET0 + 1ull < 53ull) goto lab_5;
   126 |  lab_5:
            $$RET1 = __builtin_strlen(name_);
    26 |    if ($$RET1 + 1ull < 53ull) goto lab_9;
            __assert_fail("strlen(name_)+1 < 53","timer.cxx",26u,&CTF_Function_timer::CTF_Function_timer(char const*, double, double)::__func__)
            return;
          lab_9:
    27 |    __builtin_strcpy(this,name_);
    28 |    *((double *)((char *)this + 56)) = start_time_;
    29 |    *((double *)((char *)this + 64)) = start_excl_time_;
    30 |    *((double *)((char *)this + 72)) =  0.0000000000000000E+000;
    31 |    *((double *)((char *)this + 80)) =  0.0000000000000000E+000;
    32 |    *((int *)((char *)this + 88)) = 0;
    33 |    rstr = this;
            return rstr;
          } /* function */ 


    23 |  char * CTF_Function_timer::CTF_Function_timer(char const*, double, double)(CTF_Function_timer *this, char * name_, double start_time_, double start_excl_time_)
    25 |  {
            guard__ZGVZN18CTF_Function_timerC1EPKcddE8__func__ = 1;
    26 |    $$RET2 = __builtin_strlen(name_);
            if ($$RET2 + 1ull < 53ull) goto lab_5;
   126 |  lab_5:
            $$RET3 = __builtin_strlen(name_);
    26 |    if ($$RET3 + 1ull < 53ull) goto lab_9;
            __assert_fail("strlen(name_)+1 < 53","timer.cxx",26u,&CTF_Function_timer::CTF_Function_timer(char const*, double, double)::__func__)
            return;
          lab_9:
    27 |    __builtin_strcpy(this,name_);
    28 |    *((double *)((char *)this + 56)) = start_time_;
    29 |    *((double *)((char *)this + 64)) = start_excl_time_;
    30 |    *((double *)((char *)this + 72)) =  0.0000000000000000E+000;
    31 |    *((double *)((char *)this + 80)) =  0.0000000000000000E+000;
    32 |    *((int *)((char *)this + 88)) = 0;
    33 |    rstr = this;
            return rstr;
          } /* function */ 


    35 |  void CTF_Function_timer::compute_totals(int)(char * this, int comm)
          {
    36 |    PMPI_Allreduce((this + 72),(this + 96),1,1275070475,1476395011,comm);
    38 |    PMPI_Allreduce((this + 80),(this + 104),1,1275070475,1476395011,comm);
    40 |    PMPI_Allreduce((this + 88),(this + 112),1,1275069445,1476395011,comm);
    42 |    return;
          } /* function */ 


    44 |  char CTF_Function_timer::operator<(CTF_Function_timer const&) const(CTF_Function_timer *this, CTF_Function_timer *w)
          {
    45 |    rstr = (char) (*((double *)((char *)this + 96)) > *((double *)((char *)w + 96)));
            return rstr;
    46 |  } /* function */ 


    48 |  void CTF_Function_timer::print(_IO_FILE*, int, int, int)(CTF_Function_timer *this, char * output, int comm, int rank, int np)
    51 |  {
    53 |    if (!(rank == 0)) goto lab_1;
    54 |    fprintf(output,"%s",this);
            $$RET4 = __builtin_strlen(this);
    55 |    space = malloc((53ull - $$RET4) + 1ull);
    56 |    i = 0;
            $$RET5 = (int) __builtin_strlen(this);
            if (!(0 < 53 - $$RET5)) goto lab_5;
            do {   /* id=1 */ /* ~3 */ 
              /* region = 11 */
    57 |      space[(long long) i] = 32u;
    56 |      i = i + 1;
              $$RET6 = (int) __builtin_strlen(this);
            } while (i < 53 - $$RET6);    /* ~3 */
          lab_5:
    59 |    space[(long long) i] = 0u;
    60 |    fprintf(output,"%s",space);
    61 |    fprintf(output,"%5d   %3d.%03d   %3d.%02d  %3d.%03d   %3d.%02d/n",*((int *)((char *)this + 112)) / np,(int) (*((double *)((char *)this + 96)) / (double) np),(int) (( 1.0000000000000000E+003 * *((double *)((char *)this + 96))) / (double) np) % 1000,(int) (( 1.0000000000000000E+002 * *((double *)((char *)this + 96))) / complete_time),(int) (( 1.0000000000000000E+004 * *((double *)((char *)this + 96))) / complete_time) % 100,(int) (*((double *)((char *)this + 104)) / (double) np),(int) (( 1.0000000000000000E+003 * *((double *)((char *)this + 104))) / (double) np) % 1000,(int) (( 1.0000000000000000E+002 * *((double *)((char *)this + 104))) / complete_time),(int) (( 1.0000000000000000E+004 * *((double *)((char *)this + 104))) / complete_time) % 100);
    71 |    free(space)
    72 |  lab_1:
    73 |    return;
          } /* function */ 


    75 |  char comp_name(CTF_Function_timer const&, CTF_Function_timer const&)(char * w1, char * w2)
          {
            $$RET7 = __builtin_strcmp(w1,w2);
    76 |    rstr = (char) ($$RET7 > 0);
            return rstr;
    77 |  } /* function */ 


    81 |  char * CTF_Timer::CTF_Timer(char const*)(CTF_Timer *this, char *name)
          {
            __es.__l@0 = 0;
            __es.__t@8 = &__fsm_tab;
            __es.__this@10 = this;
            __es.__i@18 = 0;
    84 |    if (!(function_timers == NULL)) goto lab_1;
    85 |    if (!(77 == (int) name[0ll])) goto lab_3;
            if (!(80 == (int) name[1ll])) goto lab_3;
    86 |    if (!(73 == (int) name[2ll])) goto lab_3;
            if (!(95 == (int) name[3ll])) goto lab_3;
    87 |    *((int *)((char *)this + 12)) = 1;
    88 |    *((int *)((char *)this + 16)) = 0;
    89 |    __es.__c4@3 = 0u;
            rstr = this;
            return rstr;
    90 |  lab_3:
    91 |    *((int *)((char *)this + 16)) = 1;
    92 |    *((int *)((char *)this + 8)) = 0;
    93 |    excl_time =  0.0000000000000000E+000;
    94 |    __50 = operator new(unsigned long)(24ull);
            if (!(__50 != NULL)) goto lab_9;
    81 |    *((char * *)__50) = NULL;
            *((char * *)((char *)__50 + 8)) = NULL;
            *((char * *)((char *)__50 + 16)) = NULL;
    94 |    __es.__c4@3 = 0u;
          lab_9:
            function_timers = __50;
    95 |    __101 = __50;
   734 |    $$RET8 = MPI_Wtime();
    25 |    guard__ZGVZN18CTF_Function_timerC1EPKcddE8__func__ = 1;
    26 |    $$RET0 = __builtin_strlen(name);
            if ($$RET0 + 1ull < 53ull) goto lab_37;
   126 |  lab_37:
            $$RET1 = __builtin_strlen(name);
    26 |    if ($$RET1 + 1ull < 53ull) goto lab_38;
            __assert_fail("strlen(name_)+1 < 53","timer.cxx",26u,&CTF_Function_timer::CTF_Function_timer(char const*, double, double)::__func__)
            return rstr;
          lab_38:
    27 |    __builtin_strcpy(&__52,name);
    28 |    &__52->(CTF_Function_timer).start_time@38.rns3.$$28 = $$RET8;
    29 |    &__52->(CTF_Function_timer).start_excl_time@40.rns4.$$28 =  0.0000000000000000E+000;
    30 |    &__52->(CTF_Function_timer).acc_time@48.rns5.$$28 =  0.0000000000000000E+000;
    31 |    &__52->(CTF_Function_timer).acc_excl_time@50.rns6.$$28 =  0.0000000000000000E+000;
    32 |    &__52->(CTF_Function_timer).calls@58.rns7.$$28 = 0;
   735 |    if (!(*((char * *)((char *)__101 + 8)) != *((char * *)((char *)__101 + 16)))) goto lab_11;
   101 |    if (!(*((char * *)((char *)__101 + 8)) != NULL)) goto lab_30;
   105 |    *((char * *)((char *)__101 + 8))->(CTF_Function_timer).rns200.$$30 = &__52->(CTF_Function_timer).rns201.$$30;
          lab_30:
   738 |    *((char * *)((char *)__101 + 8)) = ((char *)*((char * *)((char *)__101 + 8))  + 120ll);
   739 |    goto lab_13;
          lab_11:
   686 |    __96._M_current@0 = *((char * *)((char *)__101 + 8));
   444 |    std::vector<CTF_Function_timer, std::allocator<CTF_Function_timer> >::_M_insert_aux(__gnu_cxx::__normal_iterator<CTF_Function_timer*, std::vector<CTF_Function_timer, std::allocator<CTF_Function_timer> > >, CTF_Function_timer const&)(__101,__96,&__52)
          lab_13:
    96 |    goto lab_14;
          lab_1:
    97 |    i = 0;
   533 |    if (!(0 < (int) ((unsigned long long) ((*((char * *)((char *)function_timers + 8)) - *((char * *)function_timers)) / 120ll)))) goto lab_17;
            do {   /* id=1 guarded */ /* ~15 */ 
              /* region = 40 */
    98 |      $$RET9.rnn0 = 0 == __builtin_strcmp(((char *)*((char * *)function_timers)  + (long long) ((unsigned long long) i * 120ull)),name);
   611 |      if ($$RET9.rnn0 != 0) goto lab_25;
    97 |      i = i + 1;
   533 |    } while (i < (int) ((unsigned long long) ((*((char * *)((char *)function_timers + 8)) - *((char * *)function_timers)) / 120ll)));    /* ~15 */
          lab_17:
   104 |    *((int *)((char *)this + 8)) = i;
   105 |    *((int *)((char *)this + 16)) = i == 0;
   106 |  lab_28:
          lab_14:
   533 |    $$csx0 = function_timers;
            if (!(*((int *)((char *)this + 8)) == (int) ((unsigned long long) ((*((char * *)($$csx0 + 8)) - *((char * *)$$csx0)) / 120ll)))) goto lab_20;
   108 |    __115 = function_timers;
   734 |    $$RETA = MPI_Wtime();
   108 |    $$PARM.start_excl_time_25 = excl_time;
    25 |    guard__ZGVZN18CTF_Function_timerC1EPKcddE8__func__ = 1;
    26 |    $$RET0 = __builtin_strlen(name);
            if ($$RET0 + 1ull < 53ull) goto lab_34;
   126 |  lab_34:
            $$RET1 = __builtin_strlen(name);
    26 |    if ($$RET1 + 1ull < 53ull) goto lab_35;
            __assert_fail("strlen(name_)+1 < 53","timer.cxx",26u,&CTF_Function_timer::CTF_Function_timer(char const*, double, double)::__func__)
            return rstr;
          lab_35:
    27 |    __builtin_strcpy(&__54,name);
    28 |    &__54->(CTF_Function_timer).start_time@38.rns3.$$22 = $$RETA;
    29 |    &__54->(CTF_Function_timer).start_excl_time@40.rns4.$$22 = $$PARM.start_excl_time_25;
    30 |    &__54->(CTF_Function_timer).acc_time@48.rns5.$$22 =  0.0000000000000000E+000;
    31 |    &__54->(CTF_Function_timer).acc_excl_time@50.rns6.$$22 =  0.0000000000000000E+000;
    32 |    &__54->(CTF_Function_timer).calls@58.rns7.$$22 = 0;
   735 |    if (!(*((char * *)((char *)__115 + 8)) != *((char * *)((char *)__115 + 16)))) goto lab_22;
   101 |    if (!(*((char * *)((char *)__115 + 8)) != NULL)) goto lab_32;
   105 |    *((char * *)((char *)__115 + 8))->(CTF_Function_timer).rns200.$$24 = &__54->(CTF_Function_timer).rns201.$$24;
          lab_32:
   738 |    *((char * *)((char *)__115 + 8)) = ((char *)*((char * *)((char *)__115 + 8))  + 120ll);
   739 |    goto lab_24;
          lab_22:
   686 |    __110._M_current@0 = *((char * *)((char *)__115 + 8));
   444 |    std::vector<CTF_Function_timer, std::allocator<CTF_Function_timer> >::_M_insert_aux(__gnu_cxx::__normal_iterator<CTF_Function_timer*, std::vector<CTF_Function_timer, std::allocator<CTF_Function_timer> > >, CTF_Function_timer const&)(__115,__110,&__54)
          lab_24:
   109 |  lab_20:
   110 |    *((char * *)this) = name;
   111 |    *((int *)((char *)this + 12)) = 0;
   113 |    __es.__c4@3 = 0u;
            rstr = this;
            return rstr;
   611 |  lab_25:
   104 |    *((int *)((char *)this + 8)) = i;
   105 |    *((int *)((char *)this + 16)) = i == 0;
            goto lab_28;
   113 |  } /* function */ 


    81 |  char * CTF_Timer::CTF_Timer(char const*)(CTF_Timer *this, char *name)
          {
            __es.__l@0 = 0;
            __es.__t@8 = &__fsm_tab;
            __es.__this@10 = this;
            __es.__i@18 = 0;
    84 |    if (!(function_timers == NULL)) goto lab_1;
    85 |    if (!(77 == (int) name[0ll])) goto lab_3;
            if (!(80 == (int) name[1ll])) goto lab_3;
    86 |    if (!(73 == (int) name[2ll])) goto lab_3;
            if (!(95 == (int) name[3ll])) goto lab_3;
    87 |    *((int *)((char *)this + 12)) = 1;
    88 |    *((int *)((char *)this + 16)) = 0;
    89 |    __es.__c4@3 = 0u;
            rstr = this;
            return rstr;
    90 |  lab_3:
    91 |    *((int *)((char *)this + 16)) = 1;
    92 |    *((int *)((char *)this + 8)) = 0;
    93 |    excl_time =  0.0000000000000000E+000;
    94 |    __118 = operator new(unsigned long)(24ull);
            if (!(__118 != NULL)) goto lab_9;
    81 |    *((char * *)__118) = NULL;
            *((char * *)((char *)__118 + 8)) = NULL;
            *((char * *)((char *)__118 + 16)) = NULL;
    94 |    __es.__c4@3 = 0u;
          lab_9:
            function_timers = __118;
    95 |    __169 = __118;
   734 |    $$RETB = MPI_Wtime();
    25 |    guard__ZGVZN18CTF_Function_timerC1EPKcddE8__func__ = 1;
    26 |    $$RET0 = __builtin_strlen(name);
            if ($$RET0 + 1ull < 53ull) goto lab_37;
   126 |  lab_37:
            $$RET1 = __builtin_strlen(name);
    26 |    if ($$RET1 + 1ull < 53ull) goto lab_38;
            __assert_fail("strlen(name_)+1 < 53","timer.cxx",26u,&CTF_Function_timer::CTF_Function_timer(char const*, double, double)::__func__)
            return rstr;
          lab_38:
    27 |    __builtin_strcpy(&__120,name);
    28 |    &__120->(CTF_Function_timer).start_time@38.rns3.$$39 = $$RETB;
    29 |    &__120->(CTF_Function_timer).start_excl_time@40.rns4.$$39 =  0.0000000000000000E+000;
    30 |    &__120->(CTF_Function_timer).acc_time@48.rns5.$$39 =  0.0000000000000000E+000;
    31 |    &__120->(CTF_Function_timer).acc_excl_time@50.rns6.$$39 =  0.0000000000000000E+000;
    32 |    &__120->(CTF_Function_timer).calls@58.rns7.$$39 = 0;
   735 |    if (!(*((char * *)((char *)__169 + 8)) != *((char * *)((char *)__169 + 16)))) goto lab_11;
   101 |    if (!(*((char * *)((char *)__169 + 8)) != NULL)) goto lab_32;
   105 |    *((char * *)((char *)__169 + 8))->(CTF_Function_timer).rns200.$$41 = &__120->(CTF_Function_timer).rns201.$$41;
          lab_32:
   738 |    *((char * *)((char *)__169 + 8)) = ((char *)*((char * *)((char *)__169 + 8))  + 120ll);
   739 |    goto lab_13;
          lab_11:
   686 |    __164._M_current@0 = *((char * *)((char *)__169 + 8));
   444 |    std::vector<CTF_Function_timer, std::allocator<CTF_Function_timer> >::_M_insert_aux(__gnu_cxx::__normal_iterator<CTF_Function_timer*, std::vector<CTF_Function_timer, std::allocator<CTF_Function_timer> > >, CTF_Function_timer const&)(__169,__164,&__120)
          lab_13:
    96 |    goto lab_14;
          lab_1:
    97 |    i = 0;
   533 |    if (!(0 < (int) ((unsigned long long) ((*((char * *)((char *)function_timers + 8)) - *((char * *)function_timers)) / 120ll)))) goto lab_17;
            do {   /* id=1 guarded */ /* ~15 */ 
              /* region = 40 */
    98 |      $$RETC.rnn1 = 0 == __builtin_strcmp(((char *)*((char * *)function_timers)  + (long long) ((unsigned long long) i * 120ull)),name);
   611 |      if ($$RETC.rnn1 != 0) goto lab_25;
    97 |      i = i + 1;
   533 |    } while (i < (int) ((unsigned long long) ((*((char * *)((char *)function_timers + 8)) - *((char * *)function_timers)) / 120ll)));    /* ~15 */
          lab_17:
   104 |    *((int *)((char *)this + 8)) = i;
   105 |    *((int *)((char *)this + 16)) = i == 0;
   106 |  lab_28:
          lab_14:
   533 |    $$csx1 = function_timers;
            if (!(*((int *)((char *)this + 8)) == (int) ((unsigned long long) ((*((char * *)($$csx1 + 8)) - *((char * *)$$csx1)) / 120ll)))) goto lab_20;
   108 |    __183 = function_timers;
   734 |    $$RETD = MPI_Wtime();
   108 |    $$PARM.start_excl_time_29 = excl_time;
    25 |    guard__ZGVZN18CTF_Function_timerC1EPKcddE8__func__ = 1;
    26 |    $$RET0 = __builtin_strlen(name);
            if ($$RET0 + 1ull < 53ull) goto lab_34;
   126 |  lab_34:
            $$RET1 = __builtin_strlen(name);
    26 |    if ($$RET1 + 1ull < 53ull) goto lab_35;
            __assert_fail("strlen(name_)+1 < 53","timer.cxx",26u,&CTF_Function_timer::CTF_Function_timer(char const*, double, double)::__func__)
            return rstr;
          lab_35:
    27 |    __builtin_strcpy(&__122,name);
    28 |    &__122->(CTF_Function_timer).start_time@38.rns3.$$33 = $$RETD;
    29 |    &__122->(CTF_Function_timer).start_excl_time@40.rns4.$$33 = $$PARM.start_excl_time_29;
    30 |    &__122->(CTF_Function_timer).acc_time@48.rns5.$$33 =  0.0000000000000000E+000;
    31 |    &__122->(CTF_Function_timer).acc_excl_time@50.rns6.$$33 =  0.0000000000000000E+000;
    32 |    &__122->(CTF_Function_timer).calls@58.rns7.$$33 = 0;
   735 |    if (!(*((char * *)((char *)__183 + 8)) != *((char * *)((char *)__183 + 16)))) goto lab_22;
   101 |    if (!(*((char * *)((char *)__183 + 8)) != NULL)) goto lab_30;
   105 |    *((char * *)((char *)__183 + 8))->(CTF_Function_timer).rns200.$$35 = &__122->(CTF_Function_timer).rns201.$$35;
          lab_30:
   738 |    *((char * *)((char *)__183 + 8)) = ((char *)*((char * *)((char *)__183 + 8))  + 120ll);
   739 |    goto lab_24;
          lab_22:
   686 |    __178._M_current@0 = *((char * *)((char *)__183 + 8));
   444 |    std::vector<CTF_Function_timer, std::allocator<CTF_Function_timer> >::_M_insert_aux(__gnu_cxx::__normal_iterator<CTF_Function_timer*, std::vector<CTF_Function_timer, std::allocator<CTF_Function_timer> > >, CTF_Function_timer const&)(__183,__178,&__122)
          lab_24:
   109 |  lab_20:
   110 |    *((char * *)this) = name;
   111 |    *((int *)((char *)this + 12)) = 0;
   113 |    __es.__c4@3 = 0u;
            rstr = this;
            return rstr;
   611 |  lab_25:
   104 |    *((int *)((char *)this + 8)) = i;
   105 |    *((int *)((char *)this + 16)) = i == 0;
            goto lab_28;
   113 |  } /* function */ 


   139 |  char * CTF_Timer::~CTF_Timer()(char * this)
          {
            rstr = this;
            return rstr;
          } /* function */ 


   115 |  void CTF_Timer::start()(CTF_Timer *this)
          {
   117 |    if (*((int *)((char *)this + 12)) != 0) goto lab_1;
   611 |    __189 = ((char *)*((char * *)function_timers)  + (long long) ((unsigned long long) *((int *)((char *)this + 8)) * 120ull));
            $$RETE = MPI_Wtime();
            *((double *)((char *)__189 + 56)) = $$RETE;
            *((double *)((char *)(*((char * *)function_timers)) + 64 + (long long) ((unsigned long long) *((int *)((char *)this + 8)) * 120ull))) = excl_time;
   120 |  lab_1:
   122 |    return;
          } /* function */ 


   124 |  void CTF_Timer::stop()(CTF_Timer *this)
          {
   126 |    if (*((int *)((char *)this + 12)) != 0) goto lab_1;
   127 |    __195 = function_timers;
            $$BD4 = MPI_Wtime();
   611 |    delta_time = $$BD4 - *((double *)((char *)(*((char * *)__195)) + 56 + (long long) ((unsigned long long) *((int *)((char *)this + 8)) * 120ull)));
            ((double *)((char *)*((char * *)function_timers)  + 72 + (long long) ((unsigned long long) *((int *)((char *)this + 8)) * 120ull)))->(double).rns98. = ((double *)((char *)*((char * *)function_timers)  + 72 + (long long) ((unsigned long long) *((int *)((char *)this + 8)) * 120ull)))->(double).rns98. + ($$BD4 - *((double *)((char *)(*((char * *)__195)) + 56 + (long long) ((unsigned long long) *((int *)((char *)this + 8)) * 120ull))));
            ((double *)((char *)*((char * *)function_timers)  + 80 + (long long) ((unsigned long long) *((int *)((char *)this + 8)) * 120ull)))->(double).rns99. = ((double *)((char *)*((char * *)function_timers)  + 80 + (long long) ((unsigned long long) *((int *)((char *)this + 8)) * 120ull)))->(double).rns99. + (delta_time - (excl_time - *((double *)((char *)(*((char * *)function_timers)) + 64 + (long long) ((unsigned long long) *((int *)((char *)this + 8)) * 120ull)))));
            excl_time = *((double *)((char *)(*((char * *)function_timers)) + 64 + (long long) ((unsigned long long) *((int *)((char *)this + 8)) * 120ull))) + delta_time;
            ((int *)((char *)*((char * *)function_timers)  + 88 + (long long) ((unsigned long long) *((int *)((char *)this + 8)) * 120ull)))->(int).rns100. = ((int *)((char *)*((char * *)function_timers)  + 88 + (long long) ((unsigned long long) *((int *)((char *)this + 8)) * 120ull)))->(int).rns100. + 1;
   258 |    if (!(set_contxt != 0)) goto lab_7;
            if (!(*((int *)((char *)this + 16)) != 0)) goto lab_7;
            if (*((int *)((char *)this + 12)) != 0) goto lab_7;
   259 |    if (!(comm != 1140850688)) goto lab_8;
   261 |    goto lab_17;
   262 |  lab_8:
   263 |    CTF_print_timers(char const*)("all")
  1151 |    $$csx2 = *((char * *)function_timers);
            *((char * *)((char *)function_timers + 8)) = $$csx2;
   265 |    if (!(function_timers != NULL)) goto lab_10;
            $$PARM.this5 = function_timers;
   145 |    if (!($$csx2 != NULL)) goto lab_11;
    95 |    operator delete(void*)($$csx2)
   110 |  lab_11:
   132 |    $$PARM.this2 = $$PARM.this5;
   109 |    $$PARM.this0 = $$PARM.this2;
    73 |    $$IRET0 = $$PARM.this0;
   109 |    $$IRET1 = $$PARM.this2;
   132 |    $$IRET2 = $$PARM.this2;
   133 |    $$IRET3 = $$PARM.this5;
   314 |    $$IRET5 = $$PARM.this5;
   265 |    operator delete(void*)(function_timers)
          lab_10:
   266 |    function_timers = NULL;
   268 |  lab_7:
   270 |  lab_17:
   134 |    *((int *)((char *)this + 12)) = 1;
   135 |  lab_1:
   137 |    return;
          } /* function */ 


   139 |  char * CTF_Timer::~CTF_Timer()(char * this)
          {
            rstr = this;
            return rstr;
          } /* function */ 


   141 |  void CTF_print_timers(char const*)(char * name)
          {
            guard___func__19 = 1;
   144 |    MPI_Comm_rank(comm,&rank);
   145 |    MPI_Comm_size(comm,&np);
   148 |    all_symbols = malloc(1000000ull);
   149 |    recv_symbols = malloc(1000000ull);
   150 |    output = NULL;
   152 |    if (!(rank == 0)) goto lab_2;
   156 |    sprintf(&filename,"profile.%s.",name);
            $$RETF = (unsigned int) time(NULL);
   157 |    srand($$RETF)
            $$RET10 = (long long) __builtin_strlen(&filename);
   158 |    sprintf(((char *)&filename  + $$RET10),"%d.",output_file_counter);
   159 |    output_file_counter = output_file_counter + 1;
   162 |    if (!(main_argc > 0)) goto lab_4;
   163 |    i = 0;
            do {   /* id=10 guarded */ /* ~6 */ 
              /* region = 74 */
   164 |      off = (int) __builtin_strlen(main_argv[(long long) i]);
              if (!(off >= 1)) goto lab_11;
              $$CIVINIT0 = (long long) off;
              $$CIVFINAL0 = (unsigned long long) ((long long) off);
              $$CIV0 = 0ll;
              do {   /* id=11 guarded */ /* ~9 */ 
                /* region = 73 */
                /* bump-normalized */
                off = (int) ($$CIVINIT0 - $$CIV0);
   165 |        if (47 == (int) ((char *)(main_argv[(long long) i]))[($$CIVINIT0 - $$CIV0) - 1ll]) goto lab_69;
   164 |        $$CIV0 = $$CIV0 + 1ll;
              } while ((unsigned long long) $$CIV0 < $$CIVFINAL0);    /* ~9 */
              off = (int) ((long long) ($$CIVFINAL0 * 18446744073709551615ull) + $$CIVINIT0);
            lab_11:
              goto lab_71;
   165 |    lab_69:
   164 |    lab_71:
   167 |      $$RET11 = (long long) __builtin_strlen(&filename);
              sprintf(((char *)&filename  + $$RET11),"%s.",((char *)main_argv[(long long) i]  + (long long) off));
   163 |      i = i + 1;
            } while (i < main_argc);    /* ~6 */
   169 |  lab_4:
            $$RET12 = (long long) __builtin_strlen(&filename);
   170 |    sprintf(((char *)&filename  + $$RET12),"-p%d.out",np);
   173 |    output = stdout;
   174 |    printf("%s/n",&filename);
   176 |    if (!1) goto lab_16;
            __alignx(32,((char *)&part + (1ll)*(0ll)))
            $$CIV1 = 0ll;
            do {   /* id=9 guarded */ /* ~14 */ 
              /* region = 76 */
              /* bump-normalized */
              /* independent */
   177 |      part[$$CIV1] = 32u;
   176 |      $$CIV1 = $$CIV1 + 1ll;
            } while ((unsigned long long) $$CIV1 < 53ull);    /* ~14 */
          lab_16:
   179 |    part[]@0.off53 = 0u;
   180 |    sprintf(&heading,"%s",&part);
   182 |    sprintf(&part,"       inclusive         exclusive/n");
   183 |    __builtin_strcat(&heading,&part);
   184 |    fprintf(output,"%s",&heading);
   185 |    if (!1) goto lab_19;
            __alignx(32,((char *)&part + (1ll)*(0ll)))
            $$CIV2 = 0ll;
            do {   /* id=8 guarded */ /* ~17 */ 
              /* region = 75 */
              /* bump-normalized */
              /* independent */
   186 |      part[$$CIV2] = 32u;
   185 |      $$CIV2 = $$CIV2 + 1ll;
            } while ((unsigned long long) $$CIV2 < 53ull);    /* ~17 */
          lab_19:
   188 |    part[]@0.off53 = 0u;
   189 |    sprintf(&heading,"%s",&part);
   190 |    sprintf(&part,"calls        sec       %%");
   191 |    __builtin_strcat(&heading,&part);
   192 |    sprintf(&part,"       sec       %%/n");
   193 |    __builtin_strcat(&heading,&part);
   194 |    fprintf(output,"%s",&heading);
   196 |  lab_2:
   197 |    $$len_symbols.nat.0 = 0;
   533 |    $$csx3 = function_timers;
            if (!(0 < (int) ((unsigned long long) ((*((char * *)($$csx3 + 8)) - *((char * *)$$csx3)) / 120ll)))) goto lab_22;
   198 |    i.rnn4 = 0;
   533 |    do {   /* id=7 guarded */ /* ~20 */ 
              /* region = 77 */
   611 |      sprintf(((char *)all_symbols  + (long long) $$len_symbols.nat.0),"%s",((char *)*((char * *)function_timers)  + (long long) ((unsigned long long) i.rnn4 * 120ull)));
              $$RET13 = __builtin_strlen(((char *)*((char * *)function_timers)  + (long long) ((unsigned long long) i.rnn4 * 120ull)));
              $$len_symbols.nat.0 = (int) ((unsigned long long) $$len_symbols.nat.0 + ($$RET13 + 1ull));
   198 |      i.rnn4 = i.rnn4 + 1;
   533 |    } while (i.rnn4 < (int) ((unsigned long long) ((*((char * *)((char *)function_timers + 8)) - *((char * *)function_timers)) / 120ll)));    /* ~20 */
          lab_22:
   202 |    len_symbols = $$len_symbols.nat.0;
            if (!(np > 1)) goto lab_23;
   203 |    $$RET14 = log2((double) np);
            len_symbols = $$len_symbols.nat.0;
            if (!( 1.0000000000000000E+000 < $$RET14 +  1.0000000000000000E+000)) goto lab_27;
            lp = 1;
            len_symbols = $$len_symbols.nat.0;
            do {   /* id=4 */ /* ~25 */ 
              /* region = 80 */
   205 |      if (!((1 << lp) / 2 == rank % (1 << lp))) goto lab_28;
   206 |      PMPI_Send(&len_symbols,1,1275069445,rank - (1 << lp) / 2,1,comm);
   207 |      PMPI_Send(all_symbols,len_symbols,1275068673,rank - (1 << lp) / 2,2,comm);
   208 |    lab_28:
   209 |      if (!(0 == rank % (1 << lp))) goto lab_30;
              if (!(rank + (1 << lp) / 2 < np)) goto lab_30;
   211 |      PMPI_Recv(&nrecv_symbols,1,1275069445,rank + (1 << lp) / 2,1,comm,&stat);
   212 |      PMPI_Recv(recv_symbols,nrecv_symbols,1275068673,rank + (1 << lp) / 2,2,comm,&stat);
   213 |      if (!(0 < nrecv_symbols)) goto lab_35;
              i.rnn4.rnnA = 0;
              do {   /* id=5 guarded */ /* ~33 */ 
                /* region = 79 */
   214 |        j = 0;
   215 |        if (!(0 < len_symbols)) goto lab_38;
                $$RET15.rnn2 = 0 == __builtin_strcmp(all_symbols,((char *)recv_symbols  + (long long) i.rnn4.rnnA));
                if (!($$RET15.rnn2 == 0)) goto lab_38;
                do {   /* id=6 */ /* ~36 */ 
                  /* region = 78 */
                  $$RET16 = __builtin_strlen(((char *)all_symbols  + (long long) j));
   216 |          j = (int) ((unsigned long long) j + ($$RET16 + 1ull));
   215 |          if (!(j < len_symbols)) goto lab_38;
                  $$RET17.rnn8 = 0 == __builtin_strcmp(((char *)all_symbols  + (long long) j),((char *)recv_symbols  + (long long) i.rnn4.rnnA));
                } while ($$RET17.rnn8 == 0);    /* ~36 */
              lab_38:
   219 |        if (!(j >= len_symbols)) goto lab_41;
   220 |        sprintf(((char *)all_symbols  + (long long) len_symbols),"%s",((char *)recv_symbols  + (long long) i.rnn4.rnnA));
   221 |        $$SFX1 = (unsigned long long) len_symbols;
                $$RET18 = __builtin_strlen(((char *)recv_symbols  + (long long) i.rnn4.rnnA));
                len_symbols = (int) (1ull + ($$RET18 + $$SFX1));
   222 |      lab_41:
   223 |        $$RET19 = __builtin_strlen(((char *)recv_symbols  + (long long) i.rnn4.rnnA));
   213 |        i.rnn4.rnnA = (int) ((unsigned long long) i.rnn4.rnnA + ($$RET19 + 1ull));
              } while (i.rnn4.rnnA < nrecv_symbols);    /* ~33 */
            lab_35:
   224 |    lab_30:
   203 |      lp = lp + 1;
              $$RET1A = log2((double) np);
            } while ((double) lp < $$RET1A +  1.0000000000000000E+000);    /* ~25 */
          lab_27:
   226 |    PMPI_Bcast(&len_symbols,1,1275069445,0,comm);
   227 |    PMPI_Bcast(all_symbols,len_symbols,1275068673,0,comm);
   229 |    if (!(0 < len_symbols)) goto lab_45;
   228 |    j.rnn9 = 0;
   229 |    do {   /* id=3 guarded */ /* ~43 */ 
              /* region = 81 */
   230 |      CTF_Timer::CTF_Timer(char const*)(&t,((char *)all_symbols  + (long long) j.rnn9));
              $$RET1B = __builtin_strlen(((char *)all_symbols  + (long long) j.rnn9));
   231 |      j.rnn9 = (int) ((unsigned long long) j.rnn9 + ($$RET1B + 1ull));
   229 |    } while (j.rnn9 < len_symbols);    /* ~43 */
          lab_45:
   233 |  lab_23:
   234 |    if (len_symbols <= 1000000) goto lab_53;
            __assert_fail("len_symbols <= 1000000","timer.cxx",234u,&__func__)
            goto lab_159;
          lab_53:
   686 |    __233._M_current@0 = *((char * *)function_timers);
   426 |    __353 = __233;
   686 |    __238._M_current@0 = *((char * *)((char *)function_timers + 8));
   444 |    __354 = __238;
  5256 |    if (!(__353._M_current@0 != __354._M_current@0)) goto lab_54;
  5258 |    $$RET1C = __builtin_clzl((__354._M_current@0 - __353._M_current@0) / 120ll);
  5244 |    void std::__introsort_loop<__gnu_cxx::__normal_iterator<CTF_Function_timer*, std::vector<CTF_Function_timer, std::allocator<CTF_Function_timer> > >, long, bool (*)(CTF_Function_timer const&, CTF_Function_timer const&)>(__gnu_cxx::__normal_iterator<CTF_Function_timer*, std::vector<CTF_Function_timer, std::allocator<CTF_Function_timer> > >, __gnu_cxx::__normal_iterator<CTF_Function_timer*, std::vector<CTF_Function_timer, std::allocator<CTF_Function_timer> > >, long, bool (*)(CTF_Function_timer const&, CTF_Function_timer const&))(__233,__238,(long long) ($$RET1C * 18446744073709551614ull + 126ull),&comp_name(CTF_Function_timer const&, CTF_Function_timer const&))
  5260 |    void std::__final_insertion_sort<__gnu_cxx::__normal_iterator<CTF_Function_timer*, std::vector<CTF_Function_timer, std::allocator<CTF_Function_timer> > >, bool (*)(CTF_Function_timer const&, CTF_Function_timer const&)>(__gnu_cxx::__normal_iterator<CTF_Function_timer*, std::vector<CTF_Function_timer, std::allocator<CTF_Function_timer> > >, __gnu_cxx::__normal_iterator<CTF_Function_timer*, std::vector<CTF_Function_timer, std::allocator<CTF_Function_timer> > >, bool (*)(CTF_Function_timer const&, CTF_Function_timer const&))(__233,__238,&comp_name(CTF_Function_timer const&, CTF_Function_timer const&))
  5261 |  lab_54:
   533 |    if (!(0 < (int) ((unsigned long long) ((*((char * *)((char *)function_timers + 8)) - *((char * *)function_timers)) / 120ll)))) goto lab_58;
   237 |    i.rnn3 = 0;
   533 |    do {   /* id=2 guarded */ /* ~56 */ 
              /* region = 82 */
   611 |      $$PARM.this32 = ((char *)*((char * *)function_timers)  + (long long) ((unsigned long long) i.rnn3 * 120ull));
              $$PARM.comm33 = comm;
    36 |      PMPI_Allreduce((((char *)*((char * *)function_timers)  + (long long) ((unsigned long long) i.rnn3 * 120ull)) + 72),(((char *)*((char * *)function_timers)  + (long long) ((unsigned long long) i.rnn3 * 120ull)) + 96),1,1275070475,1476395011,comm);
    38 |      PMPI_Allreduce(($$PARM.this32 + 80),($$PARM.this32 + 104),1,1275070475,1476395011,$$PARM.comm33);
    40 |      PMPI_Allreduce(($$PARM.this32 + 88),($$PARM.this32 + 112),1,1275069445,1476395011,$$PARM.comm33);
   237 |      i.rnn3 = i.rnn3 + 1;
   533 |    } while (i.rnn3 < (int) ((unsigned long long) ((*((char * *)((char *)function_timers + 8)) - *((char * *)function_timers)) / 120ll)));    /* ~56 */
          lab_58:
   686 |    __276._M_current@0 = *((char * *)function_timers);
   426 |    __315 = __276;
   686 |    __281._M_current@0 = *((char * *)((char *)function_timers + 8));
   444 |    __316 = __281;
  5218 |    if (!(__315._M_current@0 != __316._M_current@0)) goto lab_59;
  5220 |    $$RET1D = __builtin_clzl((__316._M_current@0 - __315._M_current@0) / 120ll);
  5209 |    void std::__introsort_loop<__gnu_cxx::__normal_iterator<CTF_Function_timer*, std::vector<CTF_Function_timer, std::allocator<CTF_Function_timer> > >, long>(__gnu_cxx::__normal_iterator<CTF_Function_timer*, std::vector<CTF_Function_timer, std::allocator<CTF_Function_timer> > >, __gnu_cxx::__normal_iterator<CTF_Function_timer*, std::vector<CTF_Function_timer, std::allocator<CTF_Function_timer> > >, long)(__276,__281,(long long) ($$RET1D * 18446744073709551614ull + 126ull))
  5222 |    void std::__final_insertion_sort<__gnu_cxx::__normal_iterator<CTF_Function_timer*, std::vector<CTF_Function_timer, std::allocator<CTF_Function_timer> > > >(__gnu_cxx::__normal_iterator<CTF_Function_timer*, std::vector<CTF_Function_timer, std::allocator<CTF_Function_timer> > >, __gnu_cxx::__normal_iterator<CTF_Function_timer*, std::vector<CTF_Function_timer, std::allocator<CTF_Function_timer> > >)(__276,__281)
  5223 |  lab_59:
   611 |    complete_time = *((char * *)function_timers)->(CTF_Function_timer).total_time@60.rns151.;
   242 |    if (!(rank == 0)) goto lab_61;
   533 |    if (!(0 < (int) ((unsigned long long) ((*((char * *)((char *)function_timers + 8)) - *((char * *)function_timers)) / 120ll)))) goto lab_65;
   243 |    i.rnn3.rnn7 = 0;
   533 |    do {   /* id=1 guarded */ /* ~63 */ 
              /* region = 83 */
   611 |      CTF_Function_timer::print(_IO_FILE*, int, int, int)(((char *)*((char * *)function_timers)  + (long long) ((unsigned long long) i.rnn3.rnn7 * 120ull)),output,comm,rank,np)
   243 |      i.rnn3.rnn7 = i.rnn3.rnn7 + 1;
   533 |    } while (i.rnn3.rnn7 < (int) ((unsigned long long) ((*((char * *)((char *)function_timers + 8)) - *((char * *)function_timers)) / 120ll)));    /* ~63 */
          lab_65:
   246 |  lab_61:
   248 |    free(recv_symbols)
   249 |    free(all_symbols)
   254 |  lab_159:
            return;
          } /* function */ 


   256 |  void CTF_Timer::exit()(CTF_Timer *this)
          {
   258 |    if (!(set_contxt != 0)) goto lab_1;
            if (!(*((int *)((char *)this + 16)) != 0)) goto lab_1;
            if (*((int *)((char *)this + 12)) != 0) goto lab_1;
   259 |    if (!(comm != 1140850688)) goto lab_5;
   261 |    goto lab_10;
   262 |  lab_5:
   263 |    CTF_print_timers(char const*)("all")
  1151 |    $$csx4 = *((char * *)function_timers);
            *((char * *)((char *)function_timers + 8)) = $$csx4;
   265 |    if (!(function_timers != NULL)) goto lab_8;
            $$PARM.this5 = function_timers;
   145 |    if (!($$csx4 != NULL)) goto lab_11;
    95 |    operator delete(void*)($$csx4)
   110 |  lab_11:
   132 |    $$PARM.this2 = $$PARM.this5;
   109 |    $$PARM.this0 = $$PARM.this2;
    73 |    $$IRET0 = $$PARM.this0;
   109 |    $$IRET1 = $$PARM.this2;
   132 |    $$IRET2 = $$PARM.this2;
   133 |    $$IRET3 = $$PARM.this5;
   314 |    $$IRET5 = $$PARM.this5;
   265 |    operator delete(void*)(function_timers)
          lab_8:
   266 |    function_timers = NULL;
   268 |  lab_1:
   270 |  lab_10:
            return;
          } /* function */ 


   272 |  void CTF_set_main_args(int, char const* const*)(int argc, char * argv)
          {
   273 |    main_argv = argv;
   274 |    main_argc = argc;
   275 |    return;
          } /* function */ 


   277 |  void CTF_set_context(int)(int ctxt)
          {
   278 |    if (set_contxt != 0) goto lab_1;
   279 |    comm = ctxt;
          lab_1:
   280 |    set_contxt = 1;
   281 |    return;
          } /* function */ 


   283 |  char * CTF_Timer_epoch::CTF_Timer_epoch(char const*)(char * this, char * name_)
          {
    81 |    ((char * *)((char *)this  + 16))->(_Vector_impl;vector<CTF_Function_timer,std::allocator<CTF_Function_timer> >)._M_start@0.rns164. = NULL;
            ((char * *)((char *)this  + 16))->(_Vector_impl;vector<CTF_Function_timer,std::allocator<CTF_Function_timer> >)._M_finish@8.rns165. = NULL;
            ((char * *)((char *)this  + 16))->(_Vector_impl;vector<CTF_Function_timer,std::allocator<CTF_Function_timer> >)._M_end_of_storage@10.rns166. = NULL;
   285 |    *((char * *)(this + 48)) = name_;
   287 |    rstr = this;
            return rstr;
          } /* function */ 


   283 |  char * CTF_Timer_epoch::CTF_Timer_epoch(char const*)(char * this, char * name_)
          {
    81 |    ((char * *)((char *)this  + 16))->(_Vector_impl;vector<CTF_Function_timer,std::allocator<CTF_Function_timer> >)._M_start@0.rns168. = NULL;
            ((char * *)((char *)this  + 16))->(_Vector_impl;vector<CTF_Function_timer,std::allocator<CTF_Function_timer> >)._M_finish@8.rns169. = NULL;
            ((char * *)((char *)this  + 16))->(_Vector_impl;vector<CTF_Function_timer,std::allocator<CTF_Function_timer> >)._M_end_of_storage@10.rns170. = NULL;
   285 |    *((char * *)(this + 48)) = name_;
   287 |    rstr = this;
            return rstr;
          } /* function */ 


   289 |  void CTF_Timer_epoch::begin()(CTF_Timer_epoch *this)
          {
            __es.__l@0 = 0;
            __es.__t@8 = &__fsm_tab;
            __es.__this@10 = this;
            __es.__i@18 = 0;
   291 |    __425 = operator new(unsigned long)(24ull);
            if (!(__425 != NULL)) goto lab_2;
            __es.__c4@3 = 1u;
            CTF_Timer::CTF_Timer(char const*)(__425,*((char * *)((char *)this + 48)));
            __es.__c4@3 = 0u;
          lab_2:
            *((char * *)((char *)this + 8)) = __425;
   292 |    $$PARM.this58 = __425;
   117 |    if (*((int *)((char *)$$PARM.this58 + 12)) != 0) goto lab_13;
   611 |    __189 = ((char *)*((char * *)function_timers)  + (long long) ((unsigned long long) *((int *)((char *)$$PARM.this58 + 8)) * 120ull));
            $$RETE = MPI_Wtime();
            *((double *)((char *)__189 + 56)) = $$RETE;
            *((double *)((char *)(*((char * *)function_timers)) + 64 + (long long) ((unsigned long long) *((int *)((char *)$$PARM.this58 + 8)) * 120ull))) = excl_time;
   120 |  lab_13:
   293 |    std::vector<CTF_Function_timer, std::allocator<CTF_Function_timer> >::operator=(std::vector<CTF_Function_timer, std::allocator<CTF_Function_timer> > const&)((this + 16),function_timers);
   294 |    *((double *)((char *)this + 40)) = excl_time;
   295 |    excl_time =  0.0000000000000000E+000;
  1151 |    *((char * *)((char *)function_timers + 8)) = *((char * *)function_timers);
   297 |    __426 = operator new(unsigned long)(24ull);
            if (!(__426 != NULL)) goto lab_5;
            __es.__c4@3 = 2u;
            CTF_Timer::CTF_Timer(char const*)(__426,*((char * *)((char *)this + 48)));
            __es.__c4@3 = 0u;
          lab_5:
            *((char * *)this) = __426;
   298 |    $$PARM.this57 = __426;
   117 |    if (*((int *)((char *)$$PARM.this57 + 12)) != 0) goto lab_11;
   611 |    __189 = ((char *)*((char * *)function_timers)  + (long long) ((unsigned long long) *((int *)((char *)$$PARM.this57 + 8)) * 120ull));
            $$RETE = MPI_Wtime();
            *((double *)((char *)__189 + 56)) = $$RETE;
            *((double *)((char *)(*((char * *)function_timers)) + 64 + (long long) ((unsigned long long) *((int *)((char *)$$PARM.this57 + 8)) * 120ull))) = excl_time;
   120 |  lab_11:
   300 |    return;
          } /* function */ 


   302 |  void CTF_Timer_epoch::end()(CTF_Timer_epoch *this)
          {
            __es.__l@0 = 0;
            __es.__t@8 = &__fsm_tab;
            __es.__this@10 = this;
            __es.__i@18 = 0;
   304 |    $$PARM.this56 = *((char * *)this);
   126 |    if (*((int *)((char *)$$PARM.this56 + 12)) != 0) goto lab_39;
   127 |    __195 = function_timers;
            $$BD4 = MPI_Wtime();
   611 |    delta_time = $$BD4 - *((double *)((char *)(*((char * *)__195)) + 56 + (long long) ((unsigned long long) *((int *)((char *)$$PARM.this56 + 8)) * 120ull)));
            ((double *)((char *)*((char * *)function_timers)  + 72 + (long long) ((unsigned long long) *((int *)((char *)$$PARM.this56 + 8)) * 120ull)))->(double).rns98.$$110 = ((double *)((char *)*((char * *)function_timers)  + 72 + (long long) ((unsigned long long) *((int *)((char *)$$PARM.this56 + 8)) * 120ull)))->(double).rns98.$$110 + ($$BD4 - *((double *)((char *)(*((char * *)__195)) + 56 + (long long) ((unsigned long long) *((int *)((char *)$$PARM.this56 + 8)) * 120ull))));
            ((double *)((char *)*((char * *)function_timers)  + 80 + (long long) ((unsigned long long) *((int *)((char *)$$PARM.this56 + 8)) * 120ull)))->(double).rns99.$$110 = ((double *)((char *)*((char * *)function_timers)  + 80 + (long long) ((unsigned long long) *((int *)((char *)$$PARM.this56 + 8)) * 120ull)))->(double).rns99.$$110 + (delta_time - (excl_time - *((double *)((char *)(*((char * *)function_timers)) + 64 + (long long) ((unsigned long long) *((int *)((char *)$$PARM.this56 + 8)) * 120ull)))));
            excl_time = *((double *)((char *)(*((char * *)function_timers)) + 64 + (long long) ((unsigned long long) *((int *)((char *)$$PARM.this56 + 8)) * 120ull))) + delta_time;
            ((int *)((char *)*((char * *)function_timers)  + 88 + (long long) ((unsigned long long) *((int *)((char *)$$PARM.this56 + 8)) * 120ull)))->(int).rns100.$$110 = ((int *)((char *)*((char * *)function_timers)  + 88 + (long long) ((unsigned long long) *((int *)((char *)$$PARM.this56 + 8)) * 120ull)))->(int).rns100.$$110 + 1;
   258 |    if (!(set_contxt != 0)) goto lab_40;
            if (!(*((int *)((char *)$$PARM.this56 + 16)) != 0)) goto lab_40;
            if (*((int *)((char *)$$PARM.this56 + 12)) != 0) goto lab_40;
   259 |    if (!(comm != 1140850688)) goto lab_41;
   261 |    goto lab_50;
   262 |  lab_41:
   263 |    CTF_print_timers(char const*)("all")
  1151 |    $$csx5 = *((char * *)function_timers);
            *((char * *)((char *)function_timers + 8)) = $$csx5;
   265 |    if (!(function_timers != NULL)) goto lab_43;
            $$PARM.this5 = function_timers;
   145 |    if (!($$csx5 != NULL)) goto lab_44;
    95 |    operator delete(void*)($$csx5)
   110 |  lab_44:
   132 |    $$PARM.this2 = $$PARM.this5;
   109 |    $$PARM.this0 = $$PARM.this2;
    73 |    $$IRET0 = $$PARM.this0;
   109 |    $$IRET1 = $$PARM.this2;
   132 |    $$IRET2 = $$PARM.this2;
   133 |    $$IRET3 = $$PARM.this5;
   314 |    $$IRET5 = $$PARM.this5;
   265 |    operator delete(void*)(function_timers)
          lab_43:
   266 |    function_timers = NULL;
   268 |  lab_40:
   270 |  lab_50:
   134 |    *((int *)((char *)$$PARM.this56 + 12)) = 1;
   135 |  lab_39:
   305 |    if (!(function_timers != NULL)) goto lab_1;
  1151 |    $$csx6 = *((char * *)function_timers);
            *((char * *)((char *)function_timers + 8)) = $$csx6;
   307 |    $$PARM.this4 = function_timers;
   145 |    if (!($$csx6 != NULL)) goto lab_18;
    95 |    operator delete(void*)($$csx6)
   110 |  lab_18:
   132 |    $$PARM.this2 = $$PARM.this4;
   109 |    $$PARM.this0 = $$PARM.this2;
    73 |    $$IRET0 = $$PARM.this0;
   109 |    $$IRET1 = $$PARM.this2;
   132 |    $$IRET2 = $$PARM.this2;
   133 |    $$IRET3 = $$PARM.this4;
   314 |    $$IRET4 = $$PARM.this4;
   307 |    operator delete(void*)(function_timers)
   308 |  lab_1:
   309 |    __450 = operator new(unsigned long)(24ull);
            if (!(__450 != NULL)) goto lab_7;
            __es.__c4@3 = 1u;
            $$PARM.this8 = __450;
    81 |    *((char * *)$$PARM.this8) = NULL;
            *((char * *)((char *)$$PARM.this8 + 8)) = NULL;
            *((char * *)((char *)$$PARM.this8 + 16)) = NULL;
   208 |    $$IRET8 = $$PARM.this8;
   309 |    __es.__c4@3 = 0u;
          lab_7:
            function_timers = __450;
   310 |    std::vector<CTF_Function_timer, std::allocator<CTF_Function_timer> >::operator=(std::vector<CTF_Function_timer, std::allocator<CTF_Function_timer> > const&)(__450,(this + 16));
   311 |    excl_time = *((double *)((char *)this + 40));
   313 |    $$PARM.this55 = *((char * *)((char *)this + 8));
   126 |    if (*((int *)((char *)$$PARM.this55 + 12)) != 0) goto lab_26;
   127 |    __195 = function_timers;
            $$BD4 = MPI_Wtime();
   611 |    delta_time = $$BD4 - *((double *)((char *)(*((char * *)__195)) + 56 + (long long) ((unsigned long long) *((int *)((char *)$$PARM.this55 + 8)) * 120ull)));
            ((double *)((char *)*((char * *)function_timers)  + 72 + (long long) ((unsigned long long) *((int *)((char *)$$PARM.this55 + 8)) * 120ull)))->(double).rns98.$$113 = ((double *)((char *)*((char * *)function_timers)  + 72 + (long long) ((unsigned long long) *((int *)((char *)$$PARM.this55 + 8)) * 120ull)))->(double).rns98.$$113 + ($$BD4 - *((double *)((char *)(*((char * *)__195)) + 56 + (long long) ((unsigned long long) *((int *)((char *)$$PARM.this55 + 8)) * 120ull))));
            ((double *)((char *)*((char * *)function_timers)  + 80 + (long long) ((unsigned long long) *((int *)((char *)$$PARM.this55 + 8)) * 120ull)))->(double).rns99.$$113 = ((double *)((char *)*((char * *)function_timers)  + 80 + (long long) ((unsigned long long) *((int *)((char *)$$PARM.this55 + 8)) * 120ull)))->(double).rns99.$$113 + (delta_time - (excl_time - *((double *)((char *)(*((char * *)function_timers)) + 64 + (long long) ((unsigned long long) *((int *)((char *)$$PARM.this55 + 8)) * 120ull)))));
            excl_time = *((double *)((char *)(*((char * *)function_timers)) + 64 + (long long) ((unsigned long long) *((int *)((char *)$$PARM.this55 + 8)) * 120ull))) + delta_time;
            ((int *)((char *)*((char * *)function_timers)  + 88 + (long long) ((unsigned long long) *((int *)((char *)$$PARM.this55 + 8)) * 120ull)))->(int).rns100.$$113 = ((int *)((char *)*((char * *)function_timers)  + 88 + (long long) ((unsigned long long) *((int *)((char *)$$PARM.this55 + 8)) * 120ull)))->(int).rns100.$$113 + 1;
   258 |    if (!(set_contxt != 0)) goto lab_27;
            if (!(*((int *)((char *)$$PARM.this55 + 16)) != 0)) goto lab_27;
            if (*((int *)((char *)$$PARM.this55 + 12)) != 0) goto lab_27;
   259 |    if (!(comm != 1140850688)) goto lab_28;
   261 |    goto lab_37;
   262 |  lab_28:
   263 |    CTF_print_timers(char const*)("all")
  1151 |    $$csx7 = *((char * *)function_timers);
            *((char * *)((char *)function_timers + 8)) = $$csx7;
   265 |    if (!(function_timers != NULL)) goto lab_30;
            $$PARM.this5 = function_timers;
   145 |    if (!($$csx7 != NULL)) goto lab_31;
    95 |    operator delete(void*)($$csx7)
   110 |  lab_31:
   132 |    $$PARM.this2 = $$PARM.this5;
   109 |    $$PARM.this0 = $$PARM.this2;
    73 |    $$IRET0 = $$PARM.this0;
   109 |    $$IRET1 = $$PARM.this2;
   132 |    $$IRET2 = $$PARM.this2;
   133 |    $$IRET3 = $$PARM.this5;
   314 |    $$IRET5 = $$PARM.this5;
   265 |    operator delete(void*)(function_timers)
          lab_30:
   266 |    function_timers = NULL;
   268 |  lab_27:
   270 |  lab_37:
   134 |    *((int *)((char *)$$PARM.this55 + 12)) = 1;
   135 |  lab_26:
   314 |    if (!(*((char * *)((char *)this + 8)) != NULL)) goto lab_10;
            $$PARM.this9 = *((char * *)((char *)this + 8));
   139 |    $$IRET9 = $$PARM.this9;
   314 |    operator delete(void*)(*((char * *)((char *)this + 8)))
          lab_10:
   316 |    return;
          } /* function */ 


   156 |  char * std::vector<CTF_Function_timer, std::allocator<CTF_Function_timer> >::operator=(std::vector<CTF_Function_timer, std::allocator<CTF_Function_timer> > const&)(vector<CTF_Function_timer,std::allocator<CTF_Function_timer> > *this, _Vector_base<CTF_Function_timer,std::allocator<CTF_Function_timer> > *__x)
   158 |  {
   159 |    if (!(__x != this)) goto lab_1;
   161 |    __xlen = (unsigned long long) ((*((char * *)((char *)__x + 8)) - *((char * *)__x)) / 120ll);
   162 |    if (!((unsigned long long) ((*((char * *)((char *)__x + 8)) - *((char * *)__x)) / 120ll) > (unsigned long long) ((*((char * *)((char *)this + 16)) - *((char * *)this)) / 120ll))) goto lab_3;
   435 |    __593._M_current@0 = *((char * *)__x);
   453 |    __598._M_current@0 = *((char * *)((char *)__x + 8));
            __tmp = CTF_Function_timer* std::vector<CTF_Function_timer, std::allocator<CTF_Function_timer> >::_M_allocate_and_copy<__gnu_cxx::__normal_iterator<CTF_Function_timer const*, std::vector<CTF_Function_timer, std::allocator<CTF_Function_timer> > > >(unsigned long, __gnu_cxx::__normal_iterator<CTF_Function_timer const*, std::vector<CTF_Function_timer, std::allocator<CTF_Function_timer> > >, __gnu_cxx::__normal_iterator<CTF_Function_timer const*, std::vector<CTF_Function_timer, std::allocator<CTF_Function_timer> > >)(this,(unsigned long long) ((*((char * *)((char *)__x + 8)) - *((char * *)__x)) / 120ll),__593,__598);
   145 |    if (!(*((char * *)this) != NULL)) goto lab_5;
    95 |    operator delete(void*)(*((char * *)this))
   110 |  lab_5:
   171 |    *((char * *)this) = __tmp;
   172 |    *((char * *)((char *)this + 16)) = ((char *)__tmp  + (long long) (__xlen * 120ull));
   173 |    goto lab_7;
          lab_3:
   174 |    if (!((unsigned long long) ((*((char * *)((char *)this + 8)) - *((char * *)this)) / 120ll) >= (unsigned long long) ((*((char * *)((char *)__x + 8)) - *((char * *)__x)) / 120ll))) goto lab_8;
   435 |    __681._M_current@0 = *((char * *)__x);
   453 |    __686._M_current@0 = *((char * *)((char *)__x + 8));
   686 |    __691._M_current@0 = *((char * *)this);
   426 |    __866 = __691;
   466 |    __860 = __681;
            __861 = __686;
   459 |    if (!((unsigned long long) ((__861._M_current@0 - __860._M_current@0) / 120ll) > 16ull)) goto lab_31;
            if (!((((__861._M_current@0 - __860._M_current@0) / 120ll) * 120ll + (long long) __866._M_current@0) - 120ll < (long long) __860._M_current@0 | (((__861._M_current@0 - __860._M_current@0) / 120ll) * 120ll + (long long) __860._M_current@0) - 120ll < (long long) __866._M_current@0)) goto lab_27;
   341 |    if (!((__861._M_current@0 - __860._M_current@0) / 120ll > 0ll)) goto lab_12;
            $$CIV3 = 0ll;
            do {   /* id=2 guarded */ /* ~10 */ 
              /* region = 52 */
              /* bump-normalized */
              /* independent */
   343 |      __866._M_current@0[$$CIV3] = __860._M_current@0[$$CIV3];
   341 |      $$CIV3 = $$CIV3 + 1ll;
            } while ((unsigned long long) $$CIV3 < (unsigned long long) ((__861._M_current@0 - __860._M_current@0) / 120ll));    /* ~10 */
          lab_12:
            goto lab_28;
          lab_27:
          lab_31:
            if (!((__861._M_current@0 - __860._M_current@0) / 120ll > 0ll)) goto lab_30;
            $$CIV3 = 0ll;
            do {   /* id=5 guarded */ /* ~29 */ 
              /* region = 53 */
              /* bump-normalized */
   343 |      __866._M_current@0[$$CIV3] = __860._M_current@0[$$CIV3];
   341 |      $$CIV3 = $$CIV3 + 1ll;
            } while ((unsigned long long) $$CIV3 < (unsigned long long) ((__861._M_current@0 - __860._M_current@0) / 120ll));    /* ~29 */
          lab_30:
          lab_28:
   178 |    goto lab_13;
          lab_8:
   459 |    if (!((((*((char * *)((char *)this + 8)) - *((char * *)this)) / 120ll) * 120ll) / 120ll > 0ll)) goto lab_21;
   341 |    if (!((unsigned long long) ((((*((char * *)((char *)this + 8)) - *((char * *)this)) / 120ll) * 120ll) / 120ll) > 16ull)) goto lab_26;
            if (!((((((*((char * *)((char *)this + 8)) - *((char * *)this)) / 120ll) * 120ll) / 120ll) * 120ll + (long long) *((char * *)this)) - 120ll < (long long) *((char * *)__x) | (((((*((char * *)((char *)this + 8)) - *((char * *)this)) / 120ll) * 120ll) / 120ll) * 120ll + (long long) *((char * *)__x)) - 120ll < (long long) *((char * *)this))) goto lab_22;
            if (!1) goto lab_16;
            $$CIV4 = 0ll;
            do {   /* id=1 guarded */ /* ~14 */ 
              /* region = 54 */
              /* bump-normalized */
              /* independent */
   343 |      ((aggr120 *)(*((char * *)this)))[$$CIV4] = ((aggr120 *)(*((char * *)__x)))[$$CIV4];
   341 |      $$CIV4 = $$CIV4 + 1ll;
            } while ((unsigned long long) $$CIV4 < (unsigned long long) ((((*((char * *)((char *)this + 8)) - *((char * *)this)) / 120ll) * 120ll) / 120ll));    /* ~14 */
          lab_16:
            goto lab_23;
          lab_22:
          lab_26:
            if (!1) goto lab_25;
            $$CIV4 = 0ll;
            do {   /* id=4 guarded */ /* ~24 */ 
              /* region = 55 */
              /* bump-normalized */
   343 |      ((aggr120 *)(*((char * *)this)))[$$CIV4] = ((aggr120 *)(*((char * *)__x)))[$$CIV4];
   341 |      $$CIV4 = $$CIV4 + 1ll;
            } while ((unsigned long long) $$CIV4 < (unsigned long long) ((((*((char * *)((char *)this + 8)) - *((char * *)this)) / 120ll) * 120ll) / 120ll));    /* ~24 */
          lab_25:
          lab_23:
          lab_21:
   115 |    $$PARM.__first16 = ((char *)*((char * *)__x)  + ((*((char * *)((char *)this + 8)) - *((char * *)this)) / 120ll) * 120ll);
    70 |    __cur = *((char * *)((char *)this + 8));
    73 |    if (!((unsigned long long) ((*((char * *)((char *)__x + 8)) - ((char *)*((char * *)__x)  + ((*((char * *)((char *)this + 8)) - *((char * *)this)) / 120ll) * 120ll)) / 120ll) > 16ull)) goto lab_37;
            if (!((((*((char * *)((char *)__x + 8)) - ((char *)*((char * *)__x)  + ((*((char * *)((char *)this + 8)) - *((char * *)this)) / 120ll) * 120ll)) / 120ll) * 120ll + (long long) ((char *)*((char * *)__x)  + ((*((char * *)((char *)this + 8)) - *((char * *)this)) / 120ll) * 120ll)) - 120ll < (long long) *((char * *)((char *)this + 8)) | (((*((char * *)((char *)__x + 8)) - ((char *)*((char * *)__x)  + ((*((char * *)((char *)this + 8)) - *((char * *)this)) / 120ll) * 120ll)) / 120ll) * 120ll + (long long) *((char * *)((char *)this + 8))) - 120ll < (long long) ((char *)*((char * *)__x)  + ((*((char * *)((char *)this + 8)) - *((char * *)this)) / 120ll) * 120ll))) goto lab_32;
    70 |    if (!(*((char * *)((char *)__x + 8)) != ((char *)*((char * *)__x)  + ((*((char * *)((char *)this + 8)) - *((char * *)this)) / 120ll) * 120ll))) goto lab_17;
            $$CIV8 = 0ll;
            do {   /* id=3 guarded */ /* ~18 */ 
              /* region = 56 */
              /* bump-normalized */
              /* independent */
   101 |      if (!(NULL != ((char *)*((char * *)((char *)this + 8))  + $$CIV8 * 120ll))) goto lab_19;
    74 |      ((aggr120 *)(*((char * *)((char *)this + 8))))[$$CIV8] = $$PARM.__first16[$$CIV8];
            lab_19:
    73 |      $$CIV8 = $$CIV8 + 1ll;
            } while ((unsigned long long) $$CIV8 < (unsigned long long) ((*((char * *)((char *)__x + 8)) - ((char *)*((char * *)__x)  + ((*((char * *)((char *)this + 8)) - *((char * *)this)) / 120ll) * 120ll)) / 120ll));    /* ~18 */
            __cur = ((char *)*((char * *)((char *)this + 8))  + ((*((char * *)((char *)__x + 8)) - ((char *)*((char * *)__x)  + ((*((char * *)((char *)this + 8)) - *((char * *)this)) / 120ll) * 120ll)) / 120ll) * 120ll);
          lab_17:
            goto lab_33;
          lab_32:
    70 |  lab_37:
            if (!(*((char * *)((char *)__x + 8)) != ((char *)*((char * *)__x)  + ((*((char * *)((char *)this + 8)) - *((char * *)this)) / 120ll) * 120ll))) goto lab_36;
            $$CIV8 = 0ll;
            do {   /* id=6 guarded */ /* ~34 */ 
              /* region = 57 */
              /* bump-normalized */
   101 |      if (!(NULL != ((char *)*((char * *)((char *)this + 8))  + $$CIV8 * 120ll))) goto lab_35;
    74 |      ((aggr120 *)(*((char * *)((char *)this + 8))))[$$CIV8] = $$PARM.__first16[$$CIV8];
            lab_35:
    73 |      $$CIV8 = $$CIV8 + 1ll;
            } while ((unsigned long long) $$CIV8 < (unsigned long long) ((*((char * *)((char *)__x + 8)) - ((char *)*((char * *)__x)  + ((*((char * *)((char *)this + 8)) - *((char * *)this)) / 120ll) * 120ll)) / 120ll));    /* ~34 */
            __cur = ((char *)*((char * *)((char *)this + 8))  + ((*((char * *)((char *)__x + 8)) - ((char *)*((char * *)__x)  + ((*((char * *)((char *)this + 8)) - *((char * *)this)) / 120ll) * 120ll)) / 120ll) * 120ll);
          lab_36:
          lab_33:
   187 |  lab_13:
          lab_7:
   188 |    *((char * *)((char *)this + 8)) = ((char *)*((char * *)this)  + (long long) (__xlen * 120ull));
   189 |  lab_1:
   190 |    rstr = this;
            return rstr;
   191 |  } /* function */ 


   295 |  void std::vector<CTF_Function_timer, std::allocator<CTF_Function_timer> >::_M_insert_aux(__gnu_cxx::__normal_iterator<CTF_Function_timer*, std::vector<CTF_Function_timer, std::allocator<CTF_Function_timer> > >, CTF_Function_timer const&)(char * this, aggr8 __position, CTF_Function_timer *__x)
   298 |  {
   299 |    $$csx8 = *((char * *)(this + 8));
            if (!($$csx8 != *((char * *)(this + 16)))) goto lab_3;
    55 |    if (!($$csx8 != NULL)) goto lab_6;
   105 |    *((aggr120 *)$$csx8) = ((aggr120 *)((char *)$$csx8  - 120ll))->(CTF_Function_timer).rns224.;
          lab_6:
   304 |    $$csx9 = ((char *)$$csx8  + 120ll);
            *((char * *)(this + 8)) = $$csx9;
   306 |    __x_copy = *__x;
   545 |    if (!((((char *)$$csx9  - 240ll) - __position._M_current@0) / 120ll > 0ll)) goto lab_10;
            $$CIV5 = 0ll;
            do {   /* id=1 guarded */ /* ~8 */ 
              /* region = 70 */
              /* bump-normalized */
   546 |      *((aggr120 *)($$csx9 + -240ll - $$CIV5 * 120ll)) = *((aggr120 *)($$csx9 + -360ll - $$CIV5 * 120ll));
   545 |      $$CIV5 = $$CIV5 + 1ll;
            } while ((unsigned long long) $$CIV5 < (unsigned long long) ((((char *)$$csx9  - 240ll) - __position._M_current@0) / 120ll));    /* ~8 */
          lab_10:
   312 |    *__position._M_current@0 = __x_copy;
   316 |    goto lab_11;
          lab_3:
   298 |    __es.__l@0 = 0;
            __es.__t@8 = &__fsm_tab;
            __es.__this@10 = this;
            __es.__i@18 = 0;
   319 |    $$PARM.__n20 = 1ull;
   538 |    if (!((unsigned long long) (153722867280912930ll - ($$csx8 - *((char * *)this)) / 120ll) < 1ull)) goto lab_52;
  1137 |    std::__throw_length_error(char const*)("vector::_M_insert_aux")
            return;
          lab_52:
   214 |    if (!((unsigned long long) (($$csx8 - *((char * *)this)) / 120ll) < 1ull)) goto lab_54;
   215 |    $$PARM.__n20 = 1ull;
            __1375 = &$$PARM.__n20;
            __1364 = (unsigned long long) (($$csx8 - *((char * *)this)) / 120ll);
            goto lab_55;
          lab_54:
   216 |    __1364 = (unsigned long long) (($$csx8 - *((char * *)this)) / 120ll);
            __1375 = &__1364;
            $$PARM.__n20 = 1ull;
   210 |  lab_55:
   217 |    $$csxA = *__1375;
  1140 |    if ($$csxA + (unsigned long long) (($$csx8 - *((char * *)this)) / 120ll) < (unsigned long long) (($$csx8 - *((char * *)this)) / 120ll)) goto lab_56;
   538 |    if (!($$csxA + (unsigned long long) (($$csx8 - *((char * *)this)) / 120ll) > 153722867280912930ull)) goto lab_57;
          lab_56:
            __1389 = 153722867280912930ull;
            goto lab_58;
          lab_57:
            __1389 = $$csxA + (unsigned long long) (($$csx8 - *((char * *)this)) / 120ll);
          lab_58:
   319 |    __len = __1389;
   686 |    __973._M_current@0 = *((char * *)this);
   426 |    __892 = __973;
   140 |    if (!(__1389 != 0ull)) goto lab_13;
   111 |    if (!(0ll != __builtin_expect@34((long long) (__1389 > 153722867280912930ull),0ll))) goto lab_15;
    87 |    std::__throw_bad_alloc()()
            return;
          lab_15:
    89 |    __986 = operator new(unsigned long)(__1389 * 120ull);
   107 |    __1171 = __986;
            goto lab_14;
          lab_13:
            __1171 = NULL;
          lab_14:
   140 |    __new_start = __1171;
    55 |    if (!(NULL != ((char *)__1171  + ((__position._M_current@0 - (__normal_iterator<CTF_Function_timer *,std::vector<CTF_Function_timer,std::allocator<CTF_Function_timer> > >)._M_current@0.rns240..mga.__892) / 120ll) * 120ll))) goto lab_18;
   105 |    __1171[(__position._M_current@0 - (__normal_iterator<CTF_Function_timer *,std::vector<CTF_Function_timer,std::allocator<CTF_Function_timer> > >)._M_current@0.rns240..mga.__892) / 120ll] = *__x;
          lab_18:
    70 |    __cur = __1171;
    73 |    if (!((unsigned long long) ((__position._M_current@0 - *((char * *)this)) / 120ll) > 16ull)) goto lab_69;
            if (!((((__position._M_current@0 - *((char * *)this)) / 120ll) * 120ll + (long long) *((char * *)this)) - 120ll < (long long) __1171 | (((__position._M_current@0 - *((char * *)this)) / 120ll) * 120ll + (long long) __1171) - 120ll < (long long) *((char * *)this))) goto lab_64;
    70 |    if (!(*((char * *)this) != __position._M_current@0)) goto lab_44;
            $$CIV8 = 0ll;
            do {   /* id=2 guarded */ /* ~45 */ 
              /* region = 71 */
              /* bump-normalized */
              /* independent */
   101 |      if (!(NULL != ((char *)__1171  + $$CIV8 * 120ll))) goto lab_46;
    74 |      __1171[$$CIV8] = ((aggr120 *)(*((char * *)this)))[$$CIV8];
            lab_46:
    73 |      $$CIV8 = $$CIV8 + 1ll;
            } while ((unsigned long long) $$CIV8 < (unsigned long long) ((__position._M_current@0 - *((char * *)this)) / 120ll));    /* ~45 */
            __cur = ((char *)__1171  + ((__position._M_current@0 - *((char * *)this)) / 120ll) * 120ll);
          lab_44:
            goto lab_65;
          lab_64:
    70 |  lab_69:
            if (!(*((char * *)this) != __position._M_current@0)) goto lab_68;
            $$CIV8 = 0ll;
            do {   /* id=4 guarded */ /* ~66 */ 
              /* region = 72 */
              /* bump-normalized */
   101 |      if (!(NULL != ((char *)__1171  + $$CIV8 * 120ll))) goto lab_67;
    74 |      __1171[$$CIV8] = ((aggr120 *)(*((char * *)this)))[$$CIV8];
            lab_67:
    73 |      $$CIV8 = $$CIV8 + 1ll;
            } while ((unsigned long long) $$CIV8 < (unsigned long long) ((__position._M_current@0 - *((char * *)this)) / 120ll));    /* ~66 */
            __cur = ((char *)__1171  + ((__position._M_current@0 - *((char * *)this)) / 120ll) * 120ll);
          lab_68:
          lab_65:
   115 |    $$PARM.__result1E = ((char *)__cur  + 120ll);
    70 |    __cur = ((char *)__cur  + 120ll);
    73 |    if (!((unsigned long long) ((*((char * *)(this + 8)) - __position._M_current@0) / 120ll) > 16ull)) goto lab_75;
            if (!((((*((char * *)(this + 8)) - __position._M_current@0) / 120ll) * 120ll + (long long) $$PARM.__result1E) - 120ll < (long long) __position._M_current@0 | (((*((char * *)(this + 8)) - __position._M_current@0) / 120ll) * 120ll + (long long) __position._M_current@0) - 120ll < (long long) $$PARM.__result1E)) goto lab_70;
    70 |    if (!(__position._M_current@0 != *((char * *)(this + 8)))) goto lab_48;
            $$CIV8 = 0ll;
            do {   /* id=3 guarded */ /* ~49 */ 
              /* region = 73 */
              /* bump-normalized */
              /* independent */
   101 |      if (!(NULL != ((char *)$$PARM.__result1E  + $$CIV8 * 120ll))) goto lab_50;
    74 |      $$PARM.__result1E[$$CIV8] = __position._M_current@0[$$CIV8];
            lab_50:
    73 |      $$CIV8 = $$CIV8 + 1ll;
            } while ((unsigned long long) $$CIV8 < (unsigned long long) ((*((char * *)(this + 8)) - __position._M_current@0) / 120ll));    /* ~49 */
            __cur = ((char *)$$PARM.__result1E  + ((*((char * *)(this + 8)) - __position._M_current@0) / 120ll) * 120ll);
          lab_48:
            goto lab_71;
          lab_70:
    70 |  lab_75:
            if (!(__position._M_current@0 != *((char * *)(this + 8)))) goto lab_74;
            $$CIV8 = 0ll;
            do {   /* id=5 guarded */ /* ~72 */ 
              /* region = 74 */
              /* bump-normalized */
   101 |      if (!(NULL != ((char *)$$PARM.__result1E  + $$CIV8 * 120ll))) goto lab_73;
    74 |      $$PARM.__result1E[$$CIV8] = __position._M_current@0[$$CIV8];
            lab_73:
    73 |      $$CIV8 = $$CIV8 + 1ll;
            } while ((unsigned long long) $$CIV8 < (unsigned long long) ((*((char * *)(this + 8)) - __position._M_current@0) / 120ll));    /* ~72 */
            __cur = ((char *)$$PARM.__result1E  + ((*((char * *)(this + 8)) - __position._M_current@0) / 120ll) * 120ll);
          lab_74:
          lab_71:
   268 |    __new_finish = __cur;
   349 |    __es.__c4@3 = 0u;
            goto @1168;
   351 |  lab_34:
            /* GLAB  id_no=765{__1166} labtype=USR_LAB          */
            __es.__c4@3 = 2u;
            __1169 = __int_register_value(29u);
            __cxa_begin_catch((char *) __1169)
   352 |    if (__new_finish != NULL) goto lab_21;
   115 |    goto lab_23;
          lab_21:
   143 |  lab_23:
   145 |    if (!(__new_start != NULL)) goto lab_24;
    95 |    operator delete(void*)(__new_start)
   110 |  lab_24:
   357 |    __cxa_rethrow()
            __cxa_end_catch()
            __es.__c4@3 = 0u;
   349 |  @1168:
   145 |    if (!(*((char * *)this) != NULL)) goto lab_26;
    95 |    operator delete(void*)(*((char * *)this))
   110 |  lab_26:
   364 |    *((char * *)this) = __new_start;
   365 |    *((char * *)(this + 8)) = __new_finish;
   366 |    *((char * *)(this + 16)) = ((char *)__new_start  + (long long) (__len * 120ull));
   367 |  lab_11:
   368 |    return;
   351 |    /* GLAB  id_no=771{__1167} labtype=USR_LAB          */
            __cxa_end_catch()
            __es.__c4@3 = 0u;
            __1170 = __int_register_value(29u);
            _Unwind_Resume((char *) __1170)
            goto lab_34;
   368 |  } /* function */ 


  2277 |  void void std::__introsort_loop<__gnu_cxx::__normal_iterator<CTF_Function_timer*, std::vector<CTF_Function_timer, std::allocator<CTF_Function_timer> > >, long, bool (*)(CTF_Function_timer const&, CTF_Function_timer const&)>(__gnu_cxx::__normal_iterator<CTF_Function_timer*, std::vector<CTF_Function_timer, std::allocator<CTF_Function_timer> > >, __gnu_cxx::__normal_iterator<CTF_Function_timer*, std::vector<CTF_Function_timer, std::allocator<CTF_Function_timer> > >, long, bool (*)(CTF_Function_timer const&, CTF_Function_timer const&))(aggr8 __first, aggr8 __last, long long __depth_limit, funcaddr __comp)
  2280 |  {
  2284 |    if (!((__last._M_current@0 - __first._M_current@0) / 120ll > 16ll)) goto lab_3;
            do {   /* id=1 guarded */ /* ~1 */ 
              /* region = 18 */
  2286 |      if (__depth_limit == 0ll) goto lab_24;
  2291 |      __depth_limit = __depth_limit + -1ll;
   739 |      __1203._M_current@0 = ((char *)__first._M_current@0  + (((__last._M_current@0 - __first._M_current@0) / 120ll) / 2ll) * 120ll);
              __1189 = __1203;
   747 |      __1210._M_current@0 = ((char *)__last._M_current@0  - 120ll);
              __1191 = __1210;
              $$RET1E.rnn28 = 0u == __comp->(bool (const CTF_Function_timer &, const CTF_Function_timer &)).rns241.(__first._M_current@0,(__normal_iterator<CTF_Function_timer *,std::vector<CTF_Function_timer,std::allocator<CTF_Function_timer> > >)._M_current@0.rns260..mga.__1189);
   124 |      if (!($$RET1E.rnn28 == 0)) goto lab_6;
              $$RET1F.rnn27 = 0u == __comp->(bool (const CTF_Function_timer &, const CTF_Function_timer &)).rns244.((__normal_iterator<CTF_Function_timer *,std::vector<CTF_Function_timer,std::allocator<CTF_Function_timer> > >)._M_current@0.rns260..mga.__1189,(__normal_iterator<CTF_Function_timer *,std::vector<CTF_Function_timer,std::allocator<CTF_Function_timer> > >)._M_current@0.rns261..mga.__1191);
   125 |      if (!($$RET1F.rnn27 == 0)) goto lab_8;
   126 |      __1222 = (__normal_iterator<CTF_Function_timer *,std::vector<CTF_Function_timer,std::allocator<CTF_Function_timer> > >)._M_current@0.rns260..mga.__1189;
              goto @1221;
            lab_8:
   120 |      $$RET20.rnn26 = 0u == __comp->(bool (const CTF_Function_timer &, const CTF_Function_timer &)).rns252.(__first._M_current@0,(__normal_iterator<CTF_Function_timer *,std::vector<CTF_Function_timer,std::allocator<CTF_Function_timer> > >)._M_current@0.rns261..mga.__1191);
   128 |      __1222 = ($$RET20.rnn26 == 0 ? (__normal_iterator<CTF_Function_timer *,std::vector<CTF_Function_timer,std::allocator<CTF_Function_timer> > >)._M_current@0.rns261..mga.__1191 : __first._M_current@0);
              goto @1221;
   130 |    lab_6:
   120 |      $$RET21.rnn25 = 0u == __comp->(bool (const CTF_Function_timer &, const CTF_Function_timer &)).rns253.(__first._M_current@0,(__normal_iterator<CTF_Function_timer *,std::vector<CTF_Function_timer,std::allocator<CTF_Function_timer> > >)._M_current@0.rns261..mga.__1191);
   131 |      if (!($$RET21.rnn25 == 0)) goto lab_16;
   132 |      __1222 = __first._M_current@0;
              goto @1221;
            lab_16:
   120 |      $$RET22.rnn24 = 0u == __comp->(bool (const CTF_Function_timer &, const CTF_Function_timer &)).rns254.((__normal_iterator<CTF_Function_timer *,std::vector<CTF_Function_timer,std::allocator<CTF_Function_timer> > >)._M_current@0.rns260..mga.__1189,(__normal_iterator<CTF_Function_timer *,std::vector<CTF_Function_timer,std::allocator<CTF_Function_timer> > >)._M_current@0.rns261..mga.__1191);
   134 |      __1222 = ($$RET22.rnn24 == 0 ? (__normal_iterator<CTF_Function_timer *,std::vector<CTF_Function_timer,std::allocator<CTF_Function_timer> > >)._M_current@0.rns261..mga.__1191 : (__normal_iterator<CTF_Function_timer *,std::vector<CTF_Function_timer,std::allocator<CTF_Function_timer> > >)._M_current@0.rns260..mga.__1189);
   120 |    @1221:
   137 |      __cut = __gnu_cxx::__normal_iterator<CTF_Function_timer*, std::vector<CTF_Function_timer, std::allocator<CTF_Function_timer> > > std::__unguarded_partition<__gnu_cxx::__normal_iterator<CTF_Function_timer*, std::vector<CTF_Function_timer, std::allocator<CTF_Function_timer> > >, CTF_Function_timer, bool (*)(CTF_Function_timer const&, CTF_Function_timer const&)>(__gnu_cxx::__normal_iterator<CTF_Function_timer*, std::vector<CTF_Function_timer, std::allocator<CTF_Function_timer> > >, __gnu_cxx::__normal_iterator<CTF_Function_timer*, std::vector<CTF_Function_timer, std::allocator<CTF_Function_timer> > >, CTF_Function_timer, bool (*)(CTF_Function_timer const&, CTF_Function_timer const&))(__first,__last,*__1222,__comp)->(__normal_iterator<CTF_Function_timer *,std::vector<CTF_Function_timer,std::allocator<CTF_Function_timer> > >).rns249.;
  2302 |      void std::__introsort_loop<__gnu_cxx::__normal_iterator<CTF_Function_timer*, std::vector<CTF_Function_timer, std::allocator<CTF_Function_timer> > >, long, bool (*)(CTF_Function_timer const&, CTF_Function_timer const&)>(__gnu_cxx::__normal_iterator<CTF_Function_timer*, std::vector<CTF_Function_timer, std::allocator<CTF_Function_timer> > >, __gnu_cxx::__normal_iterator<CTF_Function_timer*, std::vector<CTF_Function_timer, std::allocator<CTF_Function_timer> > >, long, bool (*)(CTF_Function_timer const&, CTF_Function_timer const&))(__cut,__last,__depth_limit,__comp)
  2303 |      __last = __cut;
  2284 |    } while ((__last._M_current@0 - __first._M_current@0) / 120ll > 16ll);    /* ~1 */
          lab_3:
  2305 |  lab_23:
            return;
  2286 |  lab_24:
  5108 |    void std::__heap_select<__gnu_cxx::__normal_iterator<CTF_Function_timer*, std::vector<CTF_Function_timer, std::allocator<CTF_Function_timer> > >, bool (*)(CTF_Function_timer const&, CTF_Function_timer const&)>(__gnu_cxx::__normal_iterator<CTF_Function_timer*, std::vector<CTF_Function_timer, std::allocator<CTF_Function_timer> > >, __gnu_cxx::__normal_iterator<CTF_Function_timer*, std::vector<CTF_Function_timer, std::allocator<CTF_Function_timer> > >, __gnu_cxx::__normal_iterator<CTF_Function_timer*, std::vector<CTF_Function_timer, std::allocator<CTF_Function_timer> > >, bool (*)(CTF_Function_timer const&, CTF_Function_timer const&))(__first,__last,__last,__comp)
  5109 |    void std::sort_heap<__gnu_cxx::__normal_iterator<CTF_Function_timer*, std::vector<CTF_Function_timer, std::allocator<CTF_Function_timer> > >, bool (*)(CTF_Function_timer const&, CTF_Function_timer const&)>(__gnu_cxx::__normal_iterator<CTF_Function_timer*, std::vector<CTF_Function_timer, std::allocator<CTF_Function_timer> > >, __gnu_cxx::__normal_iterator<CTF_Function_timer*, std::vector<CTF_Function_timer, std::allocator<CTF_Function_timer> > >, bool (*)(CTF_Function_timer const&, CTF_Function_timer const&))(__first,__last,__comp)
  2289 |    goto lab_23;
  2305 |  } /* function */ 


  2188 |  void void std::__final_insertion_sort<__gnu_cxx::__normal_iterator<CTF_Function_timer*, std::vector<CTF_Function_timer, std::allocator<CTF_Function_timer> > >, bool (*)(CTF_Function_timer const&, CTF_Function_timer const&)>(__gnu_cxx::__normal_iterator<CTF_Function_timer*, std::vector<CTF_Function_timer, std::allocator<CTF_Function_timer> > >, __gnu_cxx::__normal_iterator<CTF_Function_timer*, std::vector<CTF_Function_timer, std::allocator<CTF_Function_timer> > >, bool (*)(CTF_Function_timer const&, CTF_Function_timer const&))(aggr8 __first, aggr8 __last, funcaddr __comp)
  2190 |  {
  2191 |    if (!((__last._M_current@0 - __first._M_current@0) / 120ll > 16ll)) goto lab_1;
   739 |    __1240._M_current@0 = ((char *)__first._M_current@0  + 1920ll);
            void std::__insertion_sort<__gnu_cxx::__normal_iterator<CTF_Function_timer*, std::vector<CTF_Function_timer, std::allocator<CTF_Function_timer> > >, bool (*)(CTF_Function_timer const&, CTF_Function_timer const&)>(__gnu_cxx::__normal_iterator<CTF_Function_timer*, std::vector<CTF_Function_timer, std::allocator<CTF_Function_timer> > >, __gnu_cxx::__normal_iterator<CTF_Function_timer*, std::vector<CTF_Function_timer, std::allocator<CTF_Function_timer> > >, bool (*)(CTF_Function_timer const&, CTF_Function_timer const&))(__first,__1240,__comp)
            __1245._M_current@0 = ((char *)__first._M_current@0  + 1920ll);
  2160 |    __i = __1245;
            if (!(__i._M_current@0 != __last._M_current@0)) goto lab_5;
            $$CIVINIT6 = __i._M_current@0;
            $$CIVFINAL6 = (unsigned long long) ((__last._M_current@0 - __i._M_current@0) / 120ll);
            $$CIV6 = 0ll;
            do {   /* id=1 guarded */ /* ~3 */ 
              /* region = 12 */
              /* bump-normalized */
              __i._M_current@0 = ((char *)$$CIVINIT6  + $$CIV6 * 120ll);
  2161 |      void std::__unguarded_linear_insert<__gnu_cxx::__normal_iterator<CTF_Function_timer*, std::vector<CTF_Function_timer, std::allocator<CTF_Function_timer> > >, CTF_Function_timer, bool (*)(CTF_Function_timer const&, CTF_Function_timer const&)>(__gnu_cxx::__normal_iterator<CTF_Function_timer*, std::vector<CTF_Function_timer, std::allocator<CTF_Function_timer> > >, CTF_Function_timer, bool (*)(CTF_Function_timer const&, CTF_Function_timer const&))(__i,$$CIVINIT6[$$CIV6],__comp)
  2193 |      $$CIV6 = $$CIV6 + 1ll;
            } while ((unsigned long long) $$CIV6 < $$CIVFINAL6);    /* ~3 */
          lab_5:
  2196 |    goto lab_6;
          lab_1:
  2198 |    void std::__insertion_sort<__gnu_cxx::__normal_iterator<CTF_Function_timer*, std::vector<CTF_Function_timer, std::allocator<CTF_Function_timer> > >, bool (*)(CTF_Function_timer const&, CTF_Function_timer const&)>(__gnu_cxx::__normal_iterator<CTF_Function_timer*, std::vector<CTF_Function_timer, std::allocator<CTF_Function_timer> > >, __gnu_cxx::__normal_iterator<CTF_Function_timer*, std::vector<CTF_Function_timer, std::allocator<CTF_Function_timer> > >, bool (*)(CTF_Function_timer const&, CTF_Function_timer const&))(__first,__last,__comp)
          lab_6:
  2199 |    return;
          } /* function */ 


  2245 |  void void std::__introsort_loop<__gnu_cxx::__normal_iterator<CTF_Function_timer*, std::vector<CTF_Function_timer, std::allocator<CTF_Function_timer> > >, long>(__gnu_cxx::__normal_iterator<CTF_Function_timer*, std::vector<CTF_Function_timer, std::allocator<CTF_Function_timer> > >, __gnu_cxx::__normal_iterator<CTF_Function_timer*, std::vector<CTF_Function_timer, std::allocator<CTF_Function_timer> > >, long)(aggr8 __first, aggr8 __last, long long __depth_limit)
  2248 |  {
  2252 |    if (!((__last._M_current@0 - __first._M_current@0) / 120ll > 16ll)) goto lab_3;
            do {   /* id=1 guarded */ /* ~1 */ 
              /* region = 18 */
  2254 |      if (__depth_limit == 0ll) goto lab_24;
  2259 |      __depth_limit = __depth_limit + -1ll;
   739 |      __1293._M_current@0 = ((char *)__first._M_current@0  + (((__last._M_current@0 - __first._M_current@0) / 120ll) / 2ll) * 120ll);
              __1280 = __1293;
   747 |      __1300._M_current@0 = ((char *)__last._M_current@0  - 120ll);
              __1282 = __1300;
    45 |      $$csxB = *((double *)((char *)__first._M_current@0 + 96));
              $$csxC = *((double *)((char *)(__normal_iterator<CTF_Function_timer *,std::vector<CTF_Function_timer,std::allocator<CTF_Function_timer> > >)._M_current@0.rns282..mga.__1280 + 96));
              $$IRET1D = (char) ($$csxB > $$csxC);
    89 |      if (0u == $$IRET1D) goto lab_6;
    45 |      $$csxD = *((double *)((char *)(__normal_iterator<CTF_Function_timer *,std::vector<CTF_Function_timer,std::allocator<CTF_Function_timer> > >)._M_current@0.rns283..mga.__1282 + 96));
              $$IRET1E = (char) ($$csxC > $$csxD);
    90 |      if (0u == $$IRET1E) goto lab_8;
    91 |      __1311 = (__normal_iterator<CTF_Function_timer *,std::vector<CTF_Function_timer,std::allocator<CTF_Function_timer> > >)._M_current@0.rns282..mga.__1280;
              goto @1310;
            lab_8:
    45 |      $$IRET1F = (char) ($$csxB > $$csxD);
    93 |      __1311 = (0u != $$IRET1F ? (__normal_iterator<CTF_Function_timer *,std::vector<CTF_Function_timer,std::allocator<CTF_Function_timer> > >)._M_current@0.rns283..mga.__1282 : __first._M_current@0);
              goto @1310;
    95 |    lab_6:
    45 |      $$csxE = *((double *)((char *)(__normal_iterator<CTF_Function_timer *,std::vector<CTF_Function_timer,std::allocator<CTF_Function_timer> > >)._M_current@0.rns283..mga.__1282 + 96));
              $$IRET1C = (char) ($$csxB > $$csxE);
    96 |      if (!(0u != $$IRET1C)) goto lab_16;
    97 |      __1311 = __first._M_current@0;
              goto @1310;
            lab_16:
    45 |      $$IRET1B = (char) ($$csxC > $$csxE);
    99 |      __1311 = (0u != $$IRET1B ? (__normal_iterator<CTF_Function_timer *,std::vector<CTF_Function_timer,std::allocator<CTF_Function_timer> > >)._M_current@0.rns283..mga.__1282 : (__normal_iterator<CTF_Function_timer *,std::vector<CTF_Function_timer,std::allocator<CTF_Function_timer> > >)._M_current@0.rns282..mga.__1280);
    86 |    @1310:
   102 |      __cut = __gnu_cxx::__normal_iterator<CTF_Function_timer*, std::vector<CTF_Function_timer, std::allocator<CTF_Function_timer> > > std::__unguarded_partition<__gnu_cxx::__normal_iterator<CTF_Function_timer*, std::vector<CTF_Function_timer, std::allocator<CTF_Function_timer> > >, CTF_Function_timer>(__gnu_cxx::__normal_iterator<CTF_Function_timer*, std::vector<CTF_Function_timer, std::allocator<CTF_Function_timer> > >, __gnu_cxx::__normal_iterator<CTF_Function_timer*, std::vector<CTF_Function_timer, std::allocator<CTF_Function_timer> > >, CTF_Function_timer)(__first,__last,*__1311)->(__normal_iterator<CTF_Function_timer *,std::vector<CTF_Function_timer,std::allocator<CTF_Function_timer> > >).rns274.;
  2269 |      void std::__introsort_loop<__gnu_cxx::__normal_iterator<CTF_Function_timer*, std::vector<CTF_Function_timer, std::allocator<CTF_Function_timer> > >, long>(__gnu_cxx::__normal_iterator<CTF_Function_timer*, std::vector<CTF_Function_timer, std::allocator<CTF_Function_timer> > >, __gnu_cxx::__normal_iterator<CTF_Function_timer*, std::vector<CTF_Function_timer, std::allocator<CTF_Function_timer> > >, long)(__cut,__last,__depth_limit)
  2270 |      __last = __cut;
  2252 |    } while ((__last._M_current@0 - __first._M_current@0) / 120ll > 16ll);    /* ~1 */
          lab_3:
  2272 |  lab_23:
            return;
  2254 |  lab_24:
  5067 |    void std::__heap_select<__gnu_cxx::__normal_iterator<CTF_Function_timer*, std::vector<CTF_Function_timer, std::allocator<CTF_Function_timer> > > >(__gnu_cxx::__normal_iterator<CTF_Function_timer*, std::vector<CTF_Function_timer, std::allocator<CTF_Function_timer> > >, __gnu_cxx::__normal_iterator<CTF_Function_timer*, std::vector<CTF_Function_timer, std::allocator<CTF_Function_timer> > >, __gnu_cxx::__normal_iterator<CTF_Function_timer*, std::vector<CTF_Function_timer, std::allocator<CTF_Function_timer> > >)(__first,__last,__last)
  5068 |    void std::sort_heap<__gnu_cxx::__normal_iterator<CTF_Function_timer*, std::vector<CTF_Function_timer, std::allocator<CTF_Function_timer> > > >(__gnu_cxx::__normal_iterator<CTF_Function_timer*, std::vector<CTF_Function_timer, std::allocator<CTF_Function_timer> > >, __gnu_cxx::__normal_iterator<CTF_Function_timer*, std::vector<CTF_Function_timer, std::allocator<CTF_Function_timer> > >)(__first,__last)
  2257 |    goto lab_23;
  2272 |  } /* function */ 


  2173 |  void void std::__final_insertion_sort<__gnu_cxx::__normal_iterator<CTF_Function_timer*, std::vector<CTF_Function_timer, std::allocator<CTF_Function_timer> > > >(__gnu_cxx::__normal_iterator<CTF_Function_timer*, std::vector<CTF_Function_timer, std::allocator<CTF_Function_timer> > >, __gnu_cxx::__normal_iterator<CTF_Function_timer*, std::vector<CTF_Function_timer, std::allocator<CTF_Function_timer> > >)(aggr8 __first, aggr8 __last)
  2175 |  {
  2176 |    if (!((__last._M_current@0 - __first._M_current@0) / 120ll > 16ll)) goto lab_1;
   739 |    __1329._M_current@0 = ((char *)__first._M_current@0  + 1920ll);
            void std::__insertion_sort<__gnu_cxx::__normal_iterator<CTF_Function_timer*, std::vector<CTF_Function_timer, std::allocator<CTF_Function_timer> > > >(__gnu_cxx::__normal_iterator<CTF_Function_timer*, std::vector<CTF_Function_timer, std::allocator<CTF_Function_timer> > >, __gnu_cxx::__normal_iterator<CTF_Function_timer*, std::vector<CTF_Function_timer, std::allocator<CTF_Function_timer> > >)(__first,__1329)
            __1334._M_current@0 = ((char *)__first._M_current@0  + 1920ll);
  2147 |    __i = __1334;
            if (!(__i._M_current@0 != __last._M_current@0)) goto lab_5;
            $$CIVINIT7 = __i._M_current@0;
            $$CIVFINAL7 = (unsigned long long) ((__last._M_current@0 - __i._M_current@0) / 120ll);
            $$CIV7 = 0ll;
            do {   /* id=1 guarded */ /* ~3 */ 
              /* region = 12 */
              /* bump-normalized */
              __i._M_current@0 = ((char *)$$CIVINIT7  + $$CIV7 * 120ll);
  2148 |      void std::__unguarded_linear_insert<__gnu_cxx::__normal_iterator<CTF_Function_timer*, std::vector<CTF_Function_timer, std::allocator<CTF_Function_timer> > >, CTF_Function_timer>(__gnu_cxx::__normal_iterator<CTF_Function_timer*, std::vector<CTF_Function_timer, std::allocator<CTF_Function_timer> > >, CTF_Function_timer)(__i,$$CIVINIT7[$$CIV7])
  2179 |      $$CIV7 = $$CIV7 + 1ll;
            } while ((unsigned long long) $$CIV7 < $$CIVFINAL7);    /* ~3 */
          lab_5:
  2180 |    goto lab_6;
          lab_1:
  2182 |    void std::__insertion_sort<__gnu_cxx::__normal_iterator<CTF_Function_timer*, std::vector<CTF_Function_timer, std::allocator<CTF_Function_timer> > > >(__gnu_cxx::__normal_iterator<CTF_Function_timer*, std::vector<CTF_Function_timer, std::allocator<CTF_Function_timer> > >, __gnu_cxx::__normal_iterator<CTF_Function_timer*, std::vector<CTF_Function_timer, std::allocator<CTF_Function_timer> > >)(__first,__last)
          lab_6:
  2183 |    return;
          } /* function */ 


   960 |  char * CTF_Function_timer* std::vector<CTF_Function_timer, std::allocator<CTF_Function_timer> >::_M_allocate_and_copy<__gnu_cxx::__normal_iterator<CTF_Function_timer const*, std::vector<CTF_Function_timer, std::allocator<CTF_Function_timer> > > >(unsigned long, __gnu_cxx::__normal_iterator<CTF_Function_timer const*, std::vector<CTF_Function_timer, std::allocator<CTF_Function_timer> > >, __gnu_cxx::__normal_iterator<CTF_Function_timer const*, std::vector<CTF_Function_timer, std::allocator<CTF_Function_timer> > >)(char * this, unsigned long long __n, aggr8 __first, aggr8 __last)
   962 |  {
            __es.__l@0 = 0;
            __es.__t@8 = &__fsm_tab;
            __es.__this@10 = this;
            __es.__i@18 = 0;
   140 |    if (!(__n != 0ull)) goto lab_4;
   111 |    if (!(0ll != __builtin_expect@34((long long) (__n > 153722867280912930ull),0ll))) goto lab_6;
    87 |    std::__throw_bad_alloc()()
            return;
          lab_6:
    89 |    __1407 = operator new(unsigned long)(__n * 120ull);
   107 |    __1455 = __1407;
            goto lab_5;
          lab_4:
            __1455 = NULL;
          lab_5:
   965 |    __es.__c4@3 = 1u;
   257 |    CTF_Function_timer* std::__uninitialized_copy<false>::uninitialized_copy<__gnu_cxx::__normal_iterator<CTF_Function_timer const*, std::vector<CTF_Function_timer, std::allocator<CTF_Function_timer> > >, CTF_Function_timer*>(__gnu_cxx::__normal_iterator<CTF_Function_timer const*, std::vector<CTF_Function_timer, std::allocator<CTF_Function_timer> > >, __gnu_cxx::__normal_iterator<CTF_Function_timer const*, std::vector<CTF_Function_timer, std::allocator<CTF_Function_timer> > >, CTF_Function_timer*)(__first,__last,__1455);
            goto __1450;
            goto __1451;
   968 |    __es.__c4@3 = 0u;
            rstr = __1455;
            return rstr;
   971 |  lab_14:
            /* GLAB  id_no=1205{__1450} labtype=USR_LAB          */
            __es.__c4@3 = 2u;
            __1453 = __int_register_value(29u);
            __cxa_begin_catch((char *) __1453)
   145 |    if (!(__1455 != NULL)) goto lab_9;
    95 |    operator delete(void*)(__1455)
   110 |  lab_9:
   973 |    __cxa_rethrow()
            __cxa_end_catch()
            __es.__c4@3 = 0u;
   975 |    return rstr;
   971 |    /* GLAB  id_no=1211{__1451} labtype=USR_LAB          */
            __cxa_end_catch()
            __es.__c4@3 = 0u;
            __1454 = __int_register_value(29u);
            _Unwind_Resume((char *) __1454)
            goto lab_14;
   975 |  } /* function */ 


  2224 |  aggr8 __gnu_cxx::__normal_iterator<CTF_Function_timer*, std::vector<CTF_Function_timer, std::allocator<CTF_Function_timer> > > std::__unguarded_partition<__gnu_cxx::__normal_iterator<CTF_Function_timer*, std::vector<CTF_Function_timer, std::allocator<CTF_Function_timer> > >, CTF_Function_timer, bool (*)(CTF_Function_timer const&, CTF_Function_timer const&)>(__gnu_cxx::__normal_iterator<CTF_Function_timer*, std::vector<CTF_Function_timer, std::allocator<CTF_Function_timer> > >, __gnu_cxx::__normal_iterator<CTF_Function_timer*, std::vector<CTF_Function_timer, std::allocator<CTF_Function_timer> > >, CTF_Function_timer, bool (*)(CTF_Function_timer const&, CTF_Function_timer const&))(aggr8 __first, aggr8 __last, aggr120 __pivot, funcaddr __comp)
  2227 |  {
  2228 |    do {   /* id=1 */ /* ~1 */ 
              /* region = 17 */
  2229 |      $$RET29.rnn43 = 0u == __comp->(bool (const CTF_Function_timer &, const CTF_Function_timer &)).rns306.(__first._M_current@0,&__pivot);
  2230 |      if (!($$RET29.rnn43 == 0)) goto lab_6;
   708 |      $$ICM.__first._M_current@00 = __first._M_current@0;
  2230 |      do {   /* id=3 */ /* ~4 */ 
                /* region = 15 */
   708 |        $$ICM.__first._M_current@00 = ((char *)$$ICM.__first._M_current@00  + 120ll);
   710 |        $$RET2A.rnn42 = 0u == __comp->(bool (const CTF_Function_timer &, const CTF_Function_timer &)).rns308.($$ICM.__first._M_current@00,&__pivot);
  2230 |      } while ($$RET2A.rnn42 == 0);    /* ~4 */
              __first._M_current@0 = $$ICM.__first._M_current@00;
            lab_6:
   720 |      __last._M_current@0 = ((char *)__last._M_current@0  - 120ll);
   722 |      $$RET2B.rnn41 = 0u == __comp->(bool (const CTF_Function_timer &, const CTF_Function_timer &)).rns309.(&__pivot,__last._M_current@0);
  2233 |      if (!($$RET2B.rnn41 == 0)) goto lab_9;
   720 |      $$ICM.__last._M_current@01 = __last._M_current@0;
  2233 |      do {   /* id=2 */ /* ~7 */ 
                /* region = 16 */
   720 |        $$ICM.__last._M_current@01 = ((char *)$$ICM.__last._M_current@01  - 120ll);
   722 |        $$RET2C.rnn40 = 0u == __comp->(bool (const CTF_Function_timer &, const CTF_Function_timer &)).rns311.(&__pivot,$$ICM.__last._M_current@01);
  2233 |      } while ($$RET2C.rnn40 == 0);    /* ~7 */
              __last._M_current@0 = $$ICM.__last._M_current@01;
            lab_9:
  2235 |      if (!(__first._M_current@0 < __last._M_current@0)) goto lab_12;
  2237 |      __1506 = __first;
              __1507 = __last;
    81 |      __tmp = *__1506._M_current@0;
    82 |      *__1506._M_current@0 = *__1507._M_current@0;
    83 |      *__1507._M_current@0 = __tmp;
   708 |      __first._M_current@0 = ((char *)__first._M_current@0  + 120ll);
  2228 |    } while (1);   /* ~1 */
  2235 |  lab_12:
  2236 |    rstr = __first;
            return rstr;
  2240 |  } /* function */ 


  1913 |  void void std::__heap_select<__gnu_cxx::__normal_iterator<CTF_Function_timer*, std::vector<CTF_Function_timer, std::allocator<CTF_Function_timer> > >, bool (*)(CTF_Function_timer const&, CTF_Function_timer const&)>(__gnu_cxx::__normal_iterator<CTF_Function_timer*, std::vector<CTF_Function_timer, std::allocator<CTF_Function_timer> > >, __gnu_cxx::__normal_iterator<CTF_Function_timer*, std::vector<CTF_Function_timer, std::allocator<CTF_Function_timer> > >, __gnu_cxx::__normal_iterator<CTF_Function_timer*, std::vector<CTF_Function_timer, std::allocator<CTF_Function_timer> > >, bool (*)(CTF_Function_timer const&, CTF_Function_timer const&))(aggr8 __first, aggr8 __middle, aggr8 __last, funcaddr __comp)
  1916 |  {
  1917 |    void std::make_heap<__gnu_cxx::__normal_iterator<CTF_Function_timer*, std::vector<CTF_Function_timer, std::allocator<CTF_Function_timer> > >, bool (*)(CTF_Function_timer const&, CTF_Function_timer const&)>(__gnu_cxx::__normal_iterator<CTF_Function_timer*, std::vector<CTF_Function_timer, std::allocator<CTF_Function_timer> > >, __gnu_cxx::__normal_iterator<CTF_Function_timer*, std::vector<CTF_Function_timer, std::allocator<CTF_Function_timer> > >, bool (*)(CTF_Function_timer const&, CTF_Function_timer const&))(__first,__middle,__comp)
  1918 |    __i = __middle;
            if (!(__i._M_current@0 < __last._M_current@0)) goto lab_3;
            $$CIVINIT9 = __i._M_current@0;
            $$CIVFINAL9 = (unsigned long long) (((__last._M_current@0 - 1) - __i._M_current@0) / 120ll + 1ll);
            $$CIV9 = 0ll;
            do {   /* id=1 guarded */ /* ~1 */ 
              /* region = 11 */
              /* bump-normalized */
              __i._M_current@0 = ((char *)$$CIVINIT9  + $$CIV9 * 120ll);
              $$RET2D.rnn44 = 0u == __comp->(bool (const CTF_Function_timer &, const CTF_Function_timer &)).rns316.(((char *)$$CIVINIT9  + $$CIV9 * 120ll),__first._M_current@0);
  1919 |      if (!($$RET2D.rnn44 == 0)) goto lab_4;
  1920 |      __1542 = __i;
   330 |      __value = *__1542._M_current@0;
   331 |      *__1542._M_current@0 = *__first._M_current@0;
   332 |      void std::__adjust_heap<__gnu_cxx::__normal_iterator<CTF_Function_timer*, std::vector<CTF_Function_timer, std::allocator<CTF_Function_timer> > >, long, CTF_Function_timer, bool (*)(CTF_Function_timer const&, CTF_Function_timer const&)>(__gnu_cxx::__normal_iterator<CTF_Function_timer*, std::vector<CTF_Function_timer, std::allocator<CTF_Function_timer> > >, long, long, CTF_Function_timer, bool (*)(CTF_Function_timer const&, CTF_Function_timer const&))(__first,0ll,(__middle._M_current@0 - __first._M_current@0) / 120ll,__value,__comp)
   335 |    lab_4:
   710 |      $$CIV9 = $$CIV9 + 1ll;
            } while ((unsigned long long) $$CIV9 < $$CIVFINAL9);    /* ~1 */
          lab_3:
  1921 |    return;
          } /* function */ 


   481 |  void void std::sort_heap<__gnu_cxx::__normal_iterator<CTF_Function_timer*, std::vector<CTF_Function_timer, std::allocator<CTF_Function_timer> > >, bool (*)(CTF_Function_timer const&, CTF_Function_timer const&)>(__gnu_cxx::__normal_iterator<CTF_Function_timer*, std::vector<CTF_Function_timer, std::allocator<CTF_Function_timer> > >, __gnu_cxx::__normal_iterator<CTF_Function_timer*, std::vector<CTF_Function_timer, std::allocator<CTF_Function_timer> > >, bool (*)(CTF_Function_timer const&, CTF_Function_timer const&))(aggr8 __first, aggr8 __last, funcaddr __comp)
   483 |  {
   490 |    if (!((__last._M_current@0 - __first._M_current@0) / 120ll > 1ll)) goto lab_3;
            do {   /* id=1 guarded */ /* ~1 */ 
              /* region = 9 */
   720 |      __last._M_current@0 = ((char *)__last._M_current@0  - 120ll);
   493 |      __1575 = __last;
              __1576 = __last;
   330 |      __value = *__1576._M_current@0;
   331 |      *__1576._M_current@0 = *__first._M_current@0;
   332 |      void std::__adjust_heap<__gnu_cxx::__normal_iterator<CTF_Function_timer*, std::vector<CTF_Function_timer, std::allocator<CTF_Function_timer> > >, long, CTF_Function_timer, bool (*)(CTF_Function_timer const&, CTF_Function_timer const&)>(__gnu_cxx::__normal_iterator<CTF_Function_timer*, std::vector<CTF_Function_timer, std::allocator<CTF_Function_timer> > >, long, long, CTF_Function_timer, bool (*)(CTF_Function_timer const&, CTF_Function_timer const&))(__first,0ll,(__1575._M_current@0 - __first._M_current@0) / 120ll,__value,__comp)
   490 |    } while ((__last._M_current@0 - __first._M_current@0) / 120ll > 1ll);    /* ~1 */
          lab_3:
   495 |    return;
          } /* function */ 


  2119 |  void void std::__insertion_sort<__gnu_cxx::__normal_iterator<CTF_Function_timer*, std::vector<CTF_Function_timer, std::allocator<CTF_Function_timer> > >, bool (*)(CTF_Function_timer const&, CTF_Function_timer const&)>(__gnu_cxx::__normal_iterator<CTF_Function_timer*, std::vector<CTF_Function_timer, std::allocator<CTF_Function_timer> > >, __gnu_cxx::__normal_iterator<CTF_Function_timer*, std::vector<CTF_Function_timer, std::allocator<CTF_Function_timer> > >, bool (*)(CTF_Function_timer const&, CTF_Function_timer const&))(aggr8 __first, aggr8 __last, funcaddr __comp)
  2121 |  {
  2122 |    if (!(__first._M_current@0 == __last._M_current@0)) goto lab_1;
            goto lab_12;
          lab_1:
   739 |    __1607._M_current@0 = ((char *)__first._M_current@0  + 120ll);
            __i = __1607;
            if (!(__i._M_current@0 != __last._M_current@0)) goto lab_5;
            $$CIVINITB = __i._M_current@0;
            $$CIVFINALB = (unsigned long long) ((__last._M_current@0 - __i._M_current@0) / 120ll);
            $$CIVB = 0ll;
            do {   /* id=1 guarded */ /* ~3 */ 
              /* region = 19 */
              /* bump-normalized */
  2125 |      __i._M_current@0 = ((char *)$$CIVINITB  + $$CIVB * 120ll);
  2127 |      __val = $$CIVINITB[$$CIVB];
              $$RET2E.rnn45 = 0u == __comp->(bool (const CTF_Function_timer &, const CTF_Function_timer &)).rns325.(&__val,__first._M_current@0);
  2128 |      if (!($$RET2E.rnn45 == 0)) goto lab_6;
   739 |      __1618._M_current@0 = ((char *)$$CIVINITB  + ($$CIVB * 120ll + 120ll));
              __1693 = __1618;
   638 |      __1688 = __first;
              __1689 = __i;
   545 |      if (!((__1689._M_current@0 - __1688._M_current@0) / 120ll > 0ll)) goto lab_10;
              $$CIVA = 0ll;
              do {   /* id=2 guarded */ /* ~8 */ 
                /* region = 18 */
                /* bump-normalized */
   546 |        *((aggr120 *)((char *)__1693._M_current@0 + -120ll - $$CIVA * 120ll)) = *((aggr120 *)((char *)__1689._M_current@0 + -120ll - $$CIVA * 120ll));
   545 |        $$CIVA = $$CIVA + 1ll;
              } while ((unsigned long long) $$CIVA < (unsigned long long) ((__1689._M_current@0 - __1688._M_current@0) / 120ll));    /* ~8 */
            lab_10:
  2131 |      *__first._M_current@0 = __val;
  2132 |      goto lab_11;
            lab_6:
  2134 |      void std::__unguarded_linear_insert<__gnu_cxx::__normal_iterator<CTF_Function_timer*, std::vector<CTF_Function_timer, std::allocator<CTF_Function_timer> > >, CTF_Function_timer, bool (*)(CTF_Function_timer const&, CTF_Function_timer const&)>(__gnu_cxx::__normal_iterator<CTF_Function_timer*, std::vector<CTF_Function_timer, std::allocator<CTF_Function_timer> > >, CTF_Function_timer, bool (*)(CTF_Function_timer const&, CTF_Function_timer const&))(__i,__val,__comp)
            lab_11:
   710 |      $$CIVB = $$CIVB + 1ll;
            } while ((unsigned long long) $$CIVB < $$CIVFINALB);    /* ~3 */
          lab_5:
  2136 |  lab_12:
            return;
          } /* function */ 


  2079 |  void void std::__unguarded_linear_insert<__gnu_cxx::__normal_iterator<CTF_Function_timer*, std::vector<CTF_Function_timer, std::allocator<CTF_Function_timer> > >, CTF_Function_timer, bool (*)(CTF_Function_timer const&, CTF_Function_timer const&)>(__gnu_cxx::__normal_iterator<CTF_Function_timer*, std::vector<CTF_Function_timer, std::allocator<CTF_Function_timer> > >, CTF_Function_timer, bool (*)(CTF_Function_timer const&, CTF_Function_timer const&))(aggr8 __last, aggr120 __val, funcaddr __comp)
  2081 |  {
  2082 |    __next = __last;
   720 |    __next._M_current@0 = ((char *)__next._M_current@0  - 120ll);
   722 |    $$RET2F.rnn4C = 0u == __comp->(bool (const CTF_Function_timer &, const CTF_Function_timer &)).rns330.(&__val,__next._M_current@0);
  2084 |    if (!($$RET2F.rnn4C == 0)) goto lab_3;
            do {   /* id=1 */ /* ~1 */ 
              /* region = 9 */
  2086 |      *__last._M_current@0 = *__next._M_current@0;
  2087 |      __last = __next;
   720 |      __next._M_current@0 = ((char *)__next._M_current@0  - 120ll);
  2089 |      $$RET30.rnn4D = 0u == __comp->(bool (const CTF_Function_timer &, const CTF_Function_timer &)).rns333.(&__val,__next._M_current@0);
  2084 |    } while ($$RET30.rnn4D == 0);    /* ~1 */
          lab_3:
  2090 |    *__last._M_current@0 = __val;
  2091 |    return;
          } /* function */ 


  2204 |  aggr8 __gnu_cxx::__normal_iterator<CTF_Function_timer*, std::vector<CTF_Function_timer, std::allocator<CTF_Function_timer> > > std::__unguarded_partition<__gnu_cxx::__normal_iterator<CTF_Function_timer*, std::vector<CTF_Function_timer, std::allocator<CTF_Function_timer> > >, CTF_Function_timer>(__gnu_cxx::__normal_iterator<CTF_Function_timer*, std::vector<CTF_Function_timer, std::allocator<CTF_Function_timer> > >, __gnu_cxx::__normal_iterator<CTF_Function_timer*, std::vector<CTF_Function_timer, std::allocator<CTF_Function_timer> > >, CTF_Function_timer)(aggr8 __first, aggr8 __last, aggr120 __pivot)
  2206 |  {
  2207 |    do {   /* id=1 */ /* ~1 */ 
              /* region = 17 */
    45 |      $$csxF = &__pivot->(CTF_Function_timer).total_time@60.rns22.$$190;
              $$IRET16 = (char) (*((double *)((char *)__first._M_current@0 + 96)) > $$csxF);
  2209 |      if (0u == $$IRET16) goto lab_6;
    45 |      $$ICM.__first._M_current@02 = __first._M_current@0;
  2209 |      do {   /* id=3 */ /* ~4 */ 
                /* region = 15 */
   708 |        $$ICM.__first._M_current@02 = ((char *)$$ICM.__first._M_current@02  + 120ll);
    45 |        $$IRET12 = (char) (*((double *)($$ICM.__first._M_current@02 + 96)) > $$csxF);
  2209 |      } while (!(0u == $$IRET12));   /* ~4 */
              __first._M_current@0 = $$ICM.__first._M_current@02;
            lab_6:
   720 |      __last._M_current@0 = ((char *)__last._M_current@0  - 120ll);
    45 |      $$IRET15 = (char) ($$csxF > *((double *)((char *)__last._M_current@0 + 96)));
  2212 |      if (0u == $$IRET15) goto lab_9;
    45 |      $$ICM.__last._M_current@03 = __last._M_current@0;
  2212 |      do {   /* id=2 */ /* ~7 */ 
                /* region = 16 */
   720 |        $$ICM.__last._M_current@03 = ((char *)$$ICM.__last._M_current@03  - 120ll);
    45 |        $$IRET13 = (char) ($$csxF > *((double *)($$ICM.__last._M_current@03 + 96)));
  2212 |      } while (!(0u == $$IRET13));   /* ~7 */
              __last._M_current@0 = $$ICM.__last._M_current@03;
            lab_9:
  2214 |      if (!(__first._M_current@0 < __last._M_current@0)) goto lab_12;
  2216 |      __1726 = __first;
              __1727 = __last;
    81 |      __tmp = *__1726._M_current@0;
    82 |      *__1726._M_current@0 = *__1727._M_current@0;
    83 |      *__1727._M_current@0 = __tmp;
   708 |      __first._M_current@0 = ((char *)__first._M_current@0  + 120ll);
  2207 |    } while (1);   /* ~1 */
  2214 |  lab_12:
  2215 |    rstr = __first;
            return rstr;
  2219 |  } /* function */ 


  1900 |  void void std::__heap_select<__gnu_cxx::__normal_iterator<CTF_Function_timer*, std::vector<CTF_Function_timer, std::allocator<CTF_Function_timer> > > >(__gnu_cxx::__normal_iterator<CTF_Function_timer*, std::vector<CTF_Function_timer, std::allocator<CTF_Function_timer> > >, __gnu_cxx::__normal_iterator<CTF_Function_timer*, std::vector<CTF_Function_timer, std::allocator<CTF_Function_timer> > >, __gnu_cxx::__normal_iterator<CTF_Function_timer*, std::vector<CTF_Function_timer, std::allocator<CTF_Function_timer> > >)(aggr8 __first, aggr8 __middle, aggr8 __last)
  1903 |  {
  1904 |    void std::make_heap<__gnu_cxx::__normal_iterator<CTF_Function_timer*, std::vector<CTF_Function_timer, std::allocator<CTF_Function_timer> > > >(__gnu_cxx::__normal_iterator<CTF_Function_timer*, std::vector<CTF_Function_timer, std::allocator<CTF_Function_timer> > >, __gnu_cxx::__normal_iterator<CTF_Function_timer*, std::vector<CTF_Function_timer, std::allocator<CTF_Function_timer> > >)(__first,__middle)
  1905 |    __i = __middle;
            if (!(__i._M_current@0 < __last._M_current@0)) goto lab_3;
            $$CIVINITC = __i._M_current@0;
            $$CIVFINALC = (unsigned long long) (((__last._M_current@0 - 1) - __i._M_current@0) / 120ll + 1ll);
            $$CIVC = 0ll;
            do {   /* id=1 guarded */ /* ~1 */ 
              /* region = 11 */
              /* bump-normalized */
              __i._M_current@0 = ((char *)$$CIVINITC  + $$CIVC * 120ll);
    45 |      $$IRET18 = (char) (*(((double *)((char *)$$CIVINITC + 96)) + $$CIVC * 120ll / 8) > *((double *)((char *)__first._M_current@0 + 96)));
  1906 |      if (0u == $$IRET18) goto lab_4;
  1907 |      __1762 = __i;
   258 |      __value = *__1762._M_current@0;
   259 |      *__1762._M_current@0 = *__first._M_current@0;
   260 |      void std::__adjust_heap<__gnu_cxx::__normal_iterator<CTF_Function_timer*, std::vector<CTF_Function_timer, std::allocator<CTF_Function_timer> > >, long, CTF_Function_timer>(__gnu_cxx::__normal_iterator<CTF_Function_timer*, std::vector<CTF_Function_timer, std::allocator<CTF_Function_timer> > >, long, long, CTF_Function_timer)(__first,0ll,(__middle._M_current@0 - __first._M_current@0) / 120ll,__value)
   263 |    lab_4:
   710 |      $$CIVC = $$CIVC + 1ll;
            } while ((unsigned long long) $$CIVC < $$CIVFINALC);    /* ~1 */
          lab_3:
  1908 |    return;
          } /* function */ 


   452 |  void void std::sort_heap<__gnu_cxx::__normal_iterator<CTF_Function_timer*, std::vector<CTF_Function_timer, std::allocator<CTF_Function_timer> > > >(__gnu_cxx::__normal_iterator<CTF_Function_timer*, std::vector<CTF_Function_timer, std::allocator<CTF_Function_timer> > >, __gnu_cxx::__normal_iterator<CTF_Function_timer*, std::vector<CTF_Function_timer, std::allocator<CTF_Function_timer> > >)(aggr8 __first, aggr8 __last)
   453 |  {
   462 |    if (!((__last._M_current@0 - __first._M_current@0) / 120ll > 1ll)) goto lab_3;
            do {   /* id=1 guarded */ /* ~1 */ 
              /* region = 9 */
   720 |      __last._M_current@0 = ((char *)__last._M_current@0  - 120ll);
   465 |      __1794 = __last;
              __1795 = __last;
   258 |      __value = *__1795._M_current@0;
   259 |      *__1795._M_current@0 = *__first._M_current@0;
   260 |      void std::__adjust_heap<__gnu_cxx::__normal_iterator<CTF_Function_timer*, std::vector<CTF_Function_timer, std::allocator<CTF_Function_timer> > >, long, CTF_Function_timer>(__gnu_cxx::__normal_iterator<CTF_Function_timer*, std::vector<CTF_Function_timer, std::allocator<CTF_Function_timer> > >, long, long, CTF_Function_timer)(__first,0ll,(__1794._M_current@0 - __first._M_current@0) / 120ll,__value)
   462 |    } while ((__last._M_current@0 - __first._M_current@0) / 120ll > 1ll);    /* ~1 */
          lab_3:
   467 |    return;
          } /* function */ 


  2096 |  void void std::__insertion_sort<__gnu_cxx::__normal_iterator<CTF_Function_timer*, std::vector<CTF_Function_timer, std::allocator<CTF_Function_timer> > > >(__gnu_cxx::__normal_iterator<CTF_Function_timer*, std::vector<CTF_Function_timer, std::allocator<CTF_Function_timer> > >, __gnu_cxx::__normal_iterator<CTF_Function_timer*, std::vector<CTF_Function_timer, std::allocator<CTF_Function_timer> > >)(aggr8 __first, aggr8 __last)
  2098 |  {
  2099 |    if (!(__first._M_current@0 == __last._M_current@0)) goto lab_1;
  2100 |    goto lab_12;
          lab_1:
   739 |    __1825._M_current@0 = ((char *)__first._M_current@0  + 120ll);
            __i = __1825;
            if (!(__i._M_current@0 != __last._M_current@0)) goto lab_5;
            $$CIVINITE = __i._M_current@0;
            $$CIVFINALE = (unsigned long long) ((__last._M_current@0 - __i._M_current@0) / 120ll);
            $$CIVE = 0ll;
            do {   /* id=1 guarded */ /* ~3 */ 
              /* region = 19 */
              /* bump-normalized */
  2103 |      __i._M_current@0 = ((char *)$$CIVINITE  + $$CIVE * 120ll);
  2105 |      __val = $$CIVINITE[$$CIVE];
    45 |      $$IRET1A = (char) (&__val->(CTF_Function_timer).total_time@60.rns23.$$195 > *((double *)((char *)__first._M_current@0 + 96)));
  2106 |      if (0u == $$IRET1A) goto lab_6;
   739 |      __1836._M_current@0 = ((char *)$$CIVINITE  + ($$CIVE * 120ll + 120ll));
              __1911 = __1836;
   638 |      __1906 = __first;
              __1907 = __i;
   545 |      if (!((__1907._M_current@0 - __1906._M_current@0) / 120ll > 0ll)) goto lab_10;
              $$CIVD = 0ll;
              do {   /* id=2 guarded */ /* ~8 */ 
                /* region = 18 */
                /* bump-normalized */
   546 |        *((aggr120 *)((char *)__1911._M_current@0 + -120ll - $$CIVD * 120ll)) = *((aggr120 *)((char *)__1907._M_current@0 + -120ll - $$CIVD * 120ll));
   545 |        $$CIVD = $$CIVD + 1ll;
              } while ((unsigned long long) $$CIVD < (unsigned long long) ((__1907._M_current@0 - __1906._M_current@0) / 120ll));    /* ~8 */
            lab_10:
  2109 |      *__first._M_current@0 = __val;
  2110 |      goto lab_11;
            lab_6:
  2112 |      void std::__unguarded_linear_insert<__gnu_cxx::__normal_iterator<CTF_Function_timer*, std::vector<CTF_Function_timer, std::allocator<CTF_Function_timer> > >, CTF_Function_timer>(__gnu_cxx::__normal_iterator<CTF_Function_timer*, std::vector<CTF_Function_timer, std::allocator<CTF_Function_timer> > >, CTF_Function_timer)(__i,__val)
            lab_11:
   710 |      $$CIVE = $$CIVE + 1ll;
            } while ((unsigned long long) $$CIVE < $$CIVFINALE);    /* ~3 */
          lab_5:
  2114 |  lab_12:
            return;
          } /* function */ 


  2063 |  void void std::__unguarded_linear_insert<__gnu_cxx::__normal_iterator<CTF_Function_timer*, std::vector<CTF_Function_timer, std::allocator<CTF_Function_timer> > >, CTF_Function_timer>(__gnu_cxx::__normal_iterator<CTF_Function_timer*, std::vector<CTF_Function_timer, std::allocator<CTF_Function_timer> > >, CTF_Function_timer)(aggr8 __last, aggr120 __val)
  2064 |  {
  2065 |    __next = __last;
   720 |    __next._M_current@0 = ((char *)__next._M_current@0  - 120ll);
    45 |    $$IRET21 = (char) (&__val->(CTF_Function_timer).total_time@60.rns23.$$198 > *((double *)((char *)__next._M_current@0 + 96)));
  2067 |    if (0u == $$IRET21) goto lab_3;
            do {   /* id=1 */ /* ~1 */ 
              /* region = 9 */
  2069 |      *__last._M_current@0 = *__next._M_current@0;
  2070 |      __last = __next;
   720 |      __next._M_current@0 = ((char *)__next._M_current@0  - 120ll);
    45 |      $$IRET17 = (char) (&__val->(CTF_Function_timer).total_time@60.rns23.$$198 > *((double *)((char *)__next._M_current@0 + 96)));
  2067 |    } while (!(0u == $$IRET17));   /* ~1 */
          lab_3:
  2073 |    *__last._M_current@0 = __val;
  2074 |    return;
          } /* function */ 


    67 |  char * CTF_Function_timer* std::__uninitialized_copy<false>::uninitialized_copy<__gnu_cxx::__normal_iterator<CTF_Function_timer const*, std::vector<CTF_Function_timer, std::allocator<CTF_Function_timer> > >, CTF_Function_timer*>(__gnu_cxx::__normal_iterator<CTF_Function_timer const*, std::vector<CTF_Function_timer, std::allocator<CTF_Function_timer> > >, __gnu_cxx::__normal_iterator<CTF_Function_timer const*, std::vector<CTF_Function_timer, std::allocator<CTF_Function_timer> > >, CTF_Function_timer*)(aggr8 __first, aggr8 __last, CTF_Function_timer *__result)
    69 |  {
    70 |    __cur = __result;
    73 |    if (!((unsigned long long) ((__last._M_current@0 - __first._M_current@0) / 120ll) > 16ull)) goto lab_12;
            if (!((((__last._M_current@0 - __first._M_current@0) / 120ll) * 120ll + (long long) __result) - 120ll < (long long) __first._M_current@0 | (((__last._M_current@0 - __first._M_current@0) / 120ll) * 120ll + (long long) __first._M_current@0) - 120ll < (long long) __result)) goto lab_7;
    70 |    if (!(__first._M_current@0 != __last._M_current@0)) goto lab_3;
            $$CIVF = 0ll;
            do {   /* id=1 guarded */ /* ~1 */ 
              /* region = 19 */
              /* bump-normalized */
              /* independent */
   101 |      if (!(NULL != ((char *)__result  + $$CIVF * 120ll))) goto lab_5;
    74 |      __result[$$CIVF] = __first._M_current@0[$$CIVF];
            lab_5:
   710 |      $$CIVF = $$CIVF + 1ll;
            } while ((unsigned long long) $$CIVF < (unsigned long long) ((__last._M_current@0 - __first._M_current@0) / 120ll));    /* ~1 */
            __cur = ((char *)__result  + ((__last._M_current@0 - __first._M_current@0) / 120ll) * 120ll);
          lab_3:
            goto lab_8;
          lab_7:
    70 |  lab_12:
            if (!(__first._M_current@0 != __last._M_current@0)) goto lab_11;
            $$CIVF = 0ll;
            do {   /* id=2 guarded */ /* ~9 */ 
              /* region = 20 */
              /* bump-normalized */
   101 |      if (!(NULL != ((char *)__result  + $$CIVF * 120ll))) goto lab_10;
    74 |      __result[$$CIVF] = __first._M_current@0[$$CIVF];
            lab_10:
   710 |      $$CIVF = $$CIVF + 1ll;
            } while ((unsigned long long) $$CIVF < (unsigned long long) ((__last._M_current@0 - __first._M_current@0) / 120ll));    /* ~9 */
            __cur = ((char *)__result  + ((__last._M_current@0 - __first._M_current@0) / 120ll) * 120ll);
          lab_11:
          lab_8:
    76 |    rstr = __cur;
            return rstr;
    83 |  } /* function */ 


   413 |  void void std::make_heap<__gnu_cxx::__normal_iterator<CTF_Function_timer*, std::vector<CTF_Function_timer, std::allocator<CTF_Function_timer> > >, bool (*)(CTF_Function_timer const&, CTF_Function_timer const&)>(__gnu_cxx::__normal_iterator<CTF_Function_timer*, std::vector<CTF_Function_timer, std::allocator<CTF_Function_timer> > >, __gnu_cxx::__normal_iterator<CTF_Function_timer*, std::vector<CTF_Function_timer, std::allocator<CTF_Function_timer> > >, bool (*)(CTF_Function_timer const&, CTF_Function_timer const&))(aggr8 __first, aggr8 __last, funcaddr __comp)
   415 |  {
   426 |    if (!((__last._M_current@0 - __first._M_current@0) / 120ll < 2ll)) goto lab_1;
   440 |  lab_8:
            return;
   427 |  lab_1:
   430 |    __parent = ((__last._M_current@0 - __first._M_current@0) / 120ll - 2ll) / 2ll;
   431 |    do {   /* id=1 */ /* ~3 */ 
              /* region = 10 */
   739 |      __1975._M_current@0 = ((char *)__first._M_current@0  + __parent * 120ll);
              __1968 = __1975;
   434 |      void std::__adjust_heap<__gnu_cxx::__normal_iterator<CTF_Function_timer*, std::vector<CTF_Function_timer, std::allocator<CTF_Function_timer> > >, long, CTF_Function_timer, bool (*)(CTF_Function_timer const&, CTF_Function_timer const&)>(__gnu_cxx::__normal_iterator<CTF_Function_timer*, std::vector<CTF_Function_timer, std::allocator<CTF_Function_timer> > >, long, long, CTF_Function_timer, bool (*)(CTF_Function_timer const&, CTF_Function_timer const&))(__first,__parent,(__last._M_current@0 - __first._M_current@0) / 120ll,*(__normal_iterator<CTF_Function_timer *,std::vector<CTF_Function_timer,std::allocator<CTF_Function_timer> > >)._M_current@0.rns361..mga.__1968,__comp)
   436 |      if (__parent == 0ll) goto lab_9;
   438 |      __parent = __parent + -1ll;
   431 |    } while (1);   /* ~3 */
   436 |  lab_9:
   437 |    goto lab_8;
   440 |  } /* function */ 


   295 |  void void std::__adjust_heap<__gnu_cxx::__normal_iterator<CTF_Function_timer*, std::vector<CTF_Function_timer, std::allocator<CTF_Function_timer> > >, long, CTF_Function_timer, bool (*)(CTF_Function_timer const&, CTF_Function_timer const&)>(__gnu_cxx::__normal_iterator<CTF_Function_timer*, std::vector<CTF_Function_timer, std::allocator<CTF_Function_timer> > >, long, long, CTF_Function_timer, bool (*)(CTF_Function_timer const&, CTF_Function_timer const&))(aggr8 __first, long long __holeIndex, long long __len, aggr120 __value, funcaddr __comp)
   297 |  {
   298 |    __topIndex = __holeIndex;
   299 |    __secondChild = __holeIndex;
   300 |    if (!(__holeIndex < (__len - 1ll) / 2ll)) goto lab_3;
            do {   /* id=1 guarded */ /* ~1 */ 
              /* region = 12 */
   739 |      __1990._M_current@0 = ((char *)__first._M_current@0  + (__secondChild * 240ll + 240ll));
              __1982 = __1990;
              __1997._M_current@0 = ((char *)__first._M_current@0  + (__secondChild * 240ll + 120ll));
              __1984 = __1997;
              $$RET39 = __comp->(bool (const CTF_Function_timer &, const CTF_Function_timer &)).rns362.((__normal_iterator<CTF_Function_timer *,std::vector<CTF_Function_timer,std::allocator<CTF_Function_timer> > >)._M_current@0.rns370..mga.__1982,(__normal_iterator<CTF_Function_timer *,std::vector<CTF_Function_timer,std::allocator<CTF_Function_timer> > >)._M_current@0.rns371..mga.__1984);
   305 |      __secondChild = ($$RET39 != 0u ? __secondChild * 2ll + 1ll : __secondChild * 2ll + 2ll);
   739 |      __2004._M_current@0 = ((char *)__first._M_current@0  + __holeIndex * 120ll);
              __1985 = __2004;
              __2011._M_current@0 = ((char *)__first._M_current@0  + __secondChild * 120ll);
              __1986 = __2011;
   699 |      *(__normal_iterator<CTF_Function_timer *,std::vector<CTF_Function_timer,std::allocator<CTF_Function_timer> > >)._M_current@0.rns372..mga.__1985 = *(__normal_iterator<CTF_Function_timer *,std::vector<CTF_Function_timer,std::allocator<CTF_Function_timer> > >)._M_current@0.rns373..mga.__1986;
   307 |      __holeIndex = __secondChild;
   300 |    } while (__secondChild < (__len - 1ll) / 2ll);    /* ~1 */
          lab_3:
   309 |    if (!(0ll == (__len & 1ll))) goto lab_6;
            if (!(__secondChild == (__len - 2ll) / 2ll)) goto lab_6;
   739 |    __2018._M_current@0 = ((char *)__first._M_current@0  + __holeIndex * 120ll);
            __1987 = __2018;
            __2025._M_current@0 = ((char *)__first._M_current@0  + (__secondChild * 240ll + 120ll));
            __1989 = __2025;
   699 |    *(__normal_iterator<CTF_Function_timer *,std::vector<CTF_Function_timer,std::allocator<CTF_Function_timer> > >)._M_current@0.rns374..mga.__1987 = *(__normal_iterator<CTF_Function_timer *,std::vector<CTF_Function_timer,std::allocator<CTF_Function_timer> > >)._M_current@0.rns375..mga.__1989;
   314 |    __holeIndex = __secondChild * 2ll + 1ll;
   315 |  lab_6:
   316 |    void std::__push_heap<__gnu_cxx::__normal_iterator<CTF_Function_timer*, std::vector<CTF_Function_timer, std::allocator<CTF_Function_timer> > >, long, CTF_Function_timer, bool (*)(CTF_Function_timer const&, CTF_Function_timer const&)>(__gnu_cxx::__normal_iterator<CTF_Function_timer*, std::vector<CTF_Function_timer, std::allocator<CTF_Function_timer> > >, long, long, CTF_Function_timer, bool (*)(CTF_Function_timer const&, CTF_Function_timer const&))(__first,__holeIndex,__topIndex,__value,__comp)
   318 |    return;
          } /* function */ 


   373 |  void void std::make_heap<__gnu_cxx::__normal_iterator<CTF_Function_timer*, std::vector<CTF_Function_timer, std::allocator<CTF_Function_timer> > > >(__gnu_cxx::__normal_iterator<CTF_Function_timer*, std::vector<CTF_Function_timer, std::allocator<CTF_Function_timer> > >, __gnu_cxx::__normal_iterator<CTF_Function_timer*, std::vector<CTF_Function_timer, std::allocator<CTF_Function_timer> > >)(aggr8 __first, aggr8 __last)
   374 |  {
   386 |    if (!((__last._M_current@0 - __first._M_current@0) / 120ll < 2ll)) goto lab_1;
   399 |  lab_8:
            return;
   387 |  lab_1:
   390 |    __parent = ((__last._M_current@0 - __first._M_current@0) / 120ll - 2ll) / 2ll;
   391 |    do {   /* id=1 */ /* ~3 */ 
              /* region = 10 */
   739 |      __2059._M_current@0 = ((char *)__first._M_current@0  + __parent * 120ll);
              __2052 = __2059;
   394 |      void std::__adjust_heap<__gnu_cxx::__normal_iterator<CTF_Function_timer*, std::vector<CTF_Function_timer, std::allocator<CTF_Function_timer> > >, long, CTF_Function_timer>(__gnu_cxx::__normal_iterator<CTF_Function_timer*, std::vector<CTF_Function_timer, std::allocator<CTF_Function_timer> > >, long, long, CTF_Function_timer)(__first,__parent,(__last._M_current@0 - __first._M_current@0) / 120ll,*(__normal_iterator<CTF_Function_timer *,std::vector<CTF_Function_timer,std::allocator<CTF_Function_timer> > >)._M_current@0.rns378..mga.__2052)
   395 |      if (__parent == 0ll) goto lab_9;
   397 |      __parent = __parent + -1ll;
   391 |    } while (1);   /* ~3 */
   395 |  lab_9:
   396 |    goto lab_8;
   399 |  } /* function */ 


   224 |  void void std::__adjust_heap<__gnu_cxx::__normal_iterator<CTF_Function_timer*, std::vector<CTF_Function_timer, std::allocator<CTF_Function_timer> > >, long, CTF_Function_timer>(__gnu_cxx::__normal_iterator<CTF_Function_timer*, std::vector<CTF_Function_timer, std::allocator<CTF_Function_timer> > >, long, long, CTF_Function_timer)(aggr8 __first, long long __holeIndex, long long __len, aggr120 __value)
   226 |  {
   227 |    __topIndex = __holeIndex;
   228 |    __secondChild = __holeIndex;
   229 |    if (!(__holeIndex < (__len - 1ll) / 2ll)) goto lab_3;
            do {   /* id=1 guarded */ /* ~1 */ 
              /* region = 12 */
   739 |      __2074._M_current@0 = ((char *)__first._M_current@0  + (__secondChild * 240ll + 240ll));
              __2066 = __2074;
              __2081._M_current@0 = ((char *)__first._M_current@0  + (__secondChild * 240ll + 120ll));
              __2068 = __2081;
              $$RET3A = (char) (*((double *)((char *)(__normal_iterator<CTF_Function_timer *,std::vector<CTF_Function_timer,std::allocator<CTF_Function_timer> > >)._M_current@0.rns386..mga.__2066 + 96)) > *((double *)((char *)(__normal_iterator<CTF_Function_timer *,std::vector<CTF_Function_timer,std::allocator<CTF_Function_timer> > >)._M_current@0.rns387..mga.__2068 + 96)));
   233 |      __secondChild = ($$RET3A != 0u ? __secondChild * 2ll + 1ll : __secondChild * 2ll + 2ll);
   739 |      __2088._M_current@0 = ((char *)__first._M_current@0  + __holeIndex * 120ll);
              __2069 = __2088;
              __2095._M_current@0 = ((char *)__first._M_current@0  + __secondChild * 120ll);
              __2070 = __2095;
   699 |      *(__normal_iterator<CTF_Function_timer *,std::vector<CTF_Function_timer,std::allocator<CTF_Function_timer> > >)._M_current@0.rns388..mga.__2069 = *(__normal_iterator<CTF_Function_timer *,std::vector<CTF_Function_timer,std::allocator<CTF_Function_timer> > >)._M_current@0.rns389..mga.__2070;
   235 |      __holeIndex = __secondChild;
   229 |    } while (__secondChild < (__len - 1ll) / 2ll);    /* ~1 */
          lab_3:
   237 |    if (!(0ll == (__len & 1ll))) goto lab_6;
            if (!(__secondChild == (__len - 2ll) / 2ll)) goto lab_6;
   739 |    __2102._M_current@0 = ((char *)__first._M_current@0  + __holeIndex * 120ll);
            __2071 = __2102;
            __2109._M_current@0 = ((char *)__first._M_current@0  + (__secondChild * 240ll + 120ll));
            __2073 = __2109;
   699 |    *(__normal_iterator<CTF_Function_timer *,std::vector<CTF_Function_timer,std::allocator<CTF_Function_timer> > >)._M_current@0.rns390..mga.__2071 = *(__normal_iterator<CTF_Function_timer *,std::vector<CTF_Function_timer,std::allocator<CTF_Function_timer> > >)._M_current@0.rns391..mga.__2073;
   242 |    __holeIndex = __secondChild * 2ll + 1ll;
   243 |  lab_6:
   244 |    void std::__push_heap<__gnu_cxx::__normal_iterator<CTF_Function_timer*, std::vector<CTF_Function_timer, std::allocator<CTF_Function_timer> > >, long, CTF_Function_timer>(__gnu_cxx::__normal_iterator<CTF_Function_timer*, std::vector<CTF_Function_timer, std::allocator<CTF_Function_timer> > >, long, long, CTF_Function_timer)(__first,__holeIndex,__topIndex,__value)
   246 |    return;
          } /* function */ 


   176 |  void void std::__push_heap<__gnu_cxx::__normal_iterator<CTF_Function_timer*, std::vector<CTF_Function_timer, std::allocator<CTF_Function_timer> > >, long, CTF_Function_timer, bool (*)(CTF_Function_timer const&, CTF_Function_timer const&)>(__gnu_cxx::__normal_iterator<CTF_Function_timer*, std::vector<CTF_Function_timer, std::allocator<CTF_Function_timer> > >, long, long, CTF_Function_timer, bool (*)(CTF_Function_timer const&, CTF_Function_timer const&))(aggr8 __first, long long __holeIndex, long long __topIndex, aggr120 __value, funcaddr __comp)
   178 |  {
   180 |    if (!(__holeIndex > __topIndex)) goto lab_3;
   739 |    __2120._M_current@0 = ((char *)__first._M_current@0  + ((__holeIndex - 1ll) / 2ll) * 120ll);
            __2116 = __2120;
            $$RET3B.rnn61 = 0u == __comp->(bool (const CTF_Function_timer &, const CTF_Function_timer &)).rns393.((__normal_iterator<CTF_Function_timer *,std::vector<CTF_Function_timer,std::allocator<CTF_Function_timer> > >)._M_current@0.rns400..mga.__2116,&__value);
            if (!($$RET3B.rnn61 == 0)) goto lab_3;
   179 |    __parent = (__holeIndex - 1ll) / 2ll;
   739 |    do {   /* id=1 */ /* ~1 */ 
              /* region = 11 */
              __2127._M_current@0 = ((char *)__first._M_current@0  + __holeIndex * 120ll);
              __2117 = __2127;
              __2134._M_current@0 = ((char *)__first._M_current@0  + __parent * 120ll);
              __2118 = __2134;
   699 |      *(__normal_iterator<CTF_Function_timer *,std::vector<CTF_Function_timer,std::allocator<CTF_Function_timer> > >)._M_current@0.rns401..mga.__2117 = *(__normal_iterator<CTF_Function_timer *,std::vector<CTF_Function_timer,std::allocator<CTF_Function_timer> > >)._M_current@0.rns402..mga.__2118;
   184 |      __holeIndex = __parent;
   181 |      if (!(__parent > __topIndex)) goto lab_3;
   185 |      __parent = (__parent - 1ll) / 2ll;
   739 |      __2120._M_current@0 = ((char *)__first._M_current@0  + __parent * 120ll);
              __2116 = __2120;
              $$RET3C.rnn62 = 0u == __comp->(bool (const CTF_Function_timer &, const CTF_Function_timer &)).rns397.((__normal_iterator<CTF_Function_timer *,std::vector<CTF_Function_timer,std::allocator<CTF_Function_timer> > >)._M_current@0.rns400..mga.__2116,&__value);
            } while ($$RET3C.rnn62 == 0);    /* ~1 */
          lab_3:
            __2141._M_current@0 = ((char *)__first._M_current@0  + __holeIndex * 120ll);
            __2119 = __2141;
            *(__normal_iterator<CTF_Function_timer *,std::vector<CTF_Function_timer,std::allocator<CTF_Function_timer> > >)._M_current@0.rns403..mga.__2119 = __value;
   188 |    return;
          } /* function */ 


   130 |  void void std::__push_heap<__gnu_cxx::__normal_iterator<CTF_Function_timer*, std::vector<CTF_Function_timer, std::allocator<CTF_Function_timer> > >, long, CTF_Function_timer>(__gnu_cxx::__normal_iterator<CTF_Function_timer*, std::vector<CTF_Function_timer, std::allocator<CTF_Function_timer> > >, long, long, CTF_Function_timer)(aggr8 __first, long long __holeIndex, long long __topIndex, aggr120 __value)
   132 |  {
   134 |    if (!(__holeIndex > __topIndex)) goto lab_3;
   739 |    __2152._M_current@0 = ((char *)__first._M_current@0  + ((__holeIndex - 1ll) / 2ll) * 120ll);
            __2148 = __2152;
    45 |    $$IRET20 = (char) (*((double *)((char *)(__normal_iterator<CTF_Function_timer *,std::vector<CTF_Function_timer,std::allocator<CTF_Function_timer> > >)._M_current@0.rns409..mga.__2148 + 96)) > &__value->(CTF_Function_timer).total_time@60.rns22.$$209);
   699 |    if (0u == $$IRET20) goto lab_3;
   133 |    __parent = (__holeIndex - 1ll) / 2ll;
   699 |    do {   /* id=1 */ /* ~1 */ 
              /* region = 11 */
   739 |      __2159._M_current@0 = ((char *)__first._M_current@0  + __holeIndex * 120ll);
              __2149 = __2159;
              __2166._M_current@0 = ((char *)__first._M_current@0  + __parent * 120ll);
              __2150 = __2166;
   699 |      *(__normal_iterator<CTF_Function_timer *,std::vector<CTF_Function_timer,std::allocator<CTF_Function_timer> > >)._M_current@0.rns410..mga.__2149 = *(__normal_iterator<CTF_Function_timer *,std::vector<CTF_Function_timer,std::allocator<CTF_Function_timer> > >)._M_current@0.rns411..mga.__2150;
   137 |      __holeIndex = __parent;
   134 |      if (!(__parent > __topIndex)) goto lab_3;
   138 |      __parent = (__parent - 1ll) / 2ll;
   739 |      __2152._M_current@0 = ((char *)__first._M_current@0  + __parent * 120ll);
              __2148 = __2152;
    45 |      $$IRET19 = (char) (*((double *)((char *)(__normal_iterator<CTF_Function_timer *,std::vector<CTF_Function_timer,std::allocator<CTF_Function_timer> > >)._M_current@0.rns409..mga.__2148 + 96)) > &__value->(CTF_Function_timer).total_time@60.rns22.$$210);
   699 |    } while (!(0u == $$IRET19));   /* ~1 */
          lab_3:
   739 |    __2173._M_current@0 = ((char *)__first._M_current@0  + __holeIndex * 120ll);
            __2151 = __2173;
            *(__normal_iterator<CTF_Function_timer *,std::vector<CTF_Function_timer,std::allocator<CTF_Function_timer> > >)._M_current@0.rns412..mga.__2151 = __value;
   141 |    return;
          } /* function */ 


          void __sinit65535()()
          {
    72 |    std::ios_base::Init::Init()(&__ioinit);
            __cxa_atexit(&__srterm__0(),NULL,&__dso_handle);
            return;
          } /* function */ 


          void __srterm__0()()
          {
    72 |    std::ios_base::Init::~Init()(&__ioinit);
            return;
          } /* function */ 


