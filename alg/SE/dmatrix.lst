1586-539 (I) Loop (loop index 1) at dmatrix.cxx <line 325> was not SIMD vectorized because it contains function calls.
1586-538 (I) Loop (loop index 2) at dmatrix.cxx <line 313> was not SIMD vectorized because it contains unsupported loop structure.
1586-543 (I) <SIMD info> Total number of the innermost loops considered <"2">. Total number of the innermost loops SIMD vectorized <"0">.
1586-534 (I) Loop (loop index 1) at dmatrix.cxx <line 407> was not SIMD vectorized because the loop is not the innermost loop.
1586-540 (I) Loop (loop index 2) at /bgsys/drivers/toolchain/V1R2M4_base/gnu-linux/lib/gcc/powerpc64-bgq-linux/4.4.7/../../../../powerpc64-bgq-linux/include/c++/4.4.7/bits/stl_algobase.h <line 700> was not SIMD vectorized because it contains memory references ((double *)((char *)this->(DMatrix).data@a8.rns181.  + (this->(DMatrix).lda@40.rns180. * $$CIV2 + $$CIV1) * 8ll))->(double).rns178. =  0.0000000000000000E+000; with non-vectorizable strides.
1586-540 (I) Loop (loop index 2) at /bgsys/drivers/toolchain/V1R2M4_base/gnu-linux/lib/gcc/powerpc64-bgq-linux/4.4.7/../../../../powerpc64-bgq-linux/include/c++/4.4.7/bits/stl_algobase.h <line 702> was not SIMD vectorized because it contains memory references  with non-vectorizable strides.
1586-554 (I) Loop (loop index 2) at /bgsys/drivers/toolchain/V1R2M4_base/gnu-linux/lib/gcc/powerpc64-bgq-linux/4.4.7/../../../../powerpc64-bgq-linux/include/c++/4.4.7/bits/stl_algobase.h <line 702> was not SIMD vectorized because the floating point operation is not vectorizable under -qstrict.
1586-543 (I) <SIMD info> Total number of the innermost loops considered <"1">. Total number of the innermost loops SIMD vectorized <"0">.
1586-539 (I) Loop (loop index 1) at dmatrix.cxx <line 456> was not SIMD vectorized because it contains function calls.
1586-543 (I) <SIMD info> Total number of the innermost loops considered <"1">. Total number of the innermost loops SIMD vectorized <"0">.
1586-539 (I) Loop (loop index 1) at ../shared/util.h <line 467> was not SIMD vectorized because it contains function calls.
1586-543 (I) <SIMD info> Total number of the innermost loops considered <"1">. Total number of the innermost loops SIMD vectorized <"0">.
1586-532 (I) Loop (loop index 1) at dmatrix.cxx <line 515> was not SIMD vectorized because it contains non-vectorizable reductions.
1586-537 (I) Loop (loop index 1) at dmatrix.cxx <line 516> was not SIMD vectorized because it contains operation in (long long) pfx + nlrows->(long[@82]).rns229.[$$CIV4] which is not suitable for SIMD vectorization.
1586-551 (I) Loop (loop index 1) at dmatrix.cxx <line 516> was not SIMD vectorized because it contains unsupported vector data types.
1586-539 (I) Loop (loop index 2) at ../shared/util.h <line 467> was not SIMD vectorized because it contains function calls.
1586-543 (I) <SIMD info> Total number of the innermost loops considered <"2">. Total number of the innermost loops SIMD vectorized <"0">.
1586-539 (I) Loop (loop index 1) at dmatrix.cxx <line 542> was not SIMD vectorized because it contains function calls.
1586-539 (I) Loop (loop index 2) at dmatrix.cxx <line 543> was not SIMD vectorized because it contains function calls.
1586-539 (I) Loop (loop index 3) at ../shared/util.h <line 467> was not SIMD vectorized because it contains function calls.
1586-539 (I) Loop (loop index 4) at dmatrix.cxx <line 542> was not SIMD vectorized because it contains function calls.
1586-539 (I) Loop (loop index 5) at dmatrix.cxx <line 543> was not SIMD vectorized because it contains function calls.
1586-539 (I) Loop (loop index 7) at dmatrix.cxx <line 542> was not SIMD vectorized because it contains function calls.
1586-539 (I) Loop (loop index 10) at dmatrix.cxx <line 542> was not SIMD vectorized because it contains function calls.
1586-543 (I) <SIMD info> Total number of the innermost loops considered <"4">. Total number of the innermost loops SIMD vectorized <"0">.
1586-539 (I) Loop (loop index 1) at dmatrix.cxx <line 574> was not SIMD vectorized because it contains function calls.
1586-539 (I) Loop (loop index 2) at dmatrix.cxx <line 575> was not SIMD vectorized because it contains function calls.
1586-539 (I) Loop (loop index 3) at ../shared/util.h <line 467> was not SIMD vectorized because it contains function calls.
1586-539 (I) Loop (loop index 4) at dmatrix.cxx <line 574> was not SIMD vectorized because it contains function calls.
1586-539 (I) Loop (loop index 5) at dmatrix.cxx <line 575> was not SIMD vectorized because it contains function calls.
1586-539 (I) Loop (loop index 7) at dmatrix.cxx <line 574> was not SIMD vectorized because it contains function calls.
1586-539 (I) Loop (loop index 10) at dmatrix.cxx <line 574> was not SIMD vectorized because it contains function calls.
1586-543 (I) <SIMD info> Total number of the innermost loops considered <"4">. Total number of the innermost loops SIMD vectorized <"0">.
1586-534 (I) Loop (loop index 1) at dmatrix.cxx <line 595> was not SIMD vectorized because the loop is not the innermost loop.
1586-534 (I) Loop (loop index 2) at dmatrix.cxx <line 597> was not SIMD vectorized because the loop is not the innermost loop.
1586-534 (I) Loop (loop index 3) at dmatrix.cxx <line 608> was not SIMD vectorized because the loop is not the innermost loop.
1586-540 (I) Loop (loop index 4) at /bgsys/drivers/toolchain/V1R2M4_base/gnu-linux/lib/gcc/powerpc64-bgq-linux/4.4.7/../../../../powerpc64-bgq-linux/include/c++/4.4.7/bits/stl_algobase.h <line 700> was not SIMD vectorized because it contains memory references ((double *)((char *)this->(DMatrix).data@a8.rns280.  + ($$CIV9 + (this->(DMatrix).lda@40.rns279. * $$CIVA + (this->(DMatrix).b@38.rns271. * $$CIVB + $$CIVC * (this->(DMatrix).lda@40.rns279. * this->(DMatrix).b@38.rns271.)))) * 8ll))->(double).rns269. =  0.0000000000000000E+000; with non-vectorizable strides.
1586-540 (I) Loop (loop index 4) at /bgsys/drivers/toolchain/V1R2M4_base/gnu-linux/lib/gcc/powerpc64-bgq-linux/4.4.7/../../../../powerpc64-bgq-linux/include/c++/4.4.7/bits/stl_algobase.h <line 702> was not SIMD vectorized because it contains memory references  with non-vectorizable strides.
1586-554 (I) Loop (loop index 4) at /bgsys/drivers/toolchain/V1R2M4_base/gnu-linux/lib/gcc/powerpc64-bgq-linux/4.4.7/../../../../powerpc64-bgq-linux/include/c++/4.4.7/bits/stl_algobase.h <line 702> was not SIMD vectorized because the floating point operation is not vectorizable under -qstrict.
1586-534 (I) Loop (loop index 5) at dmatrix.cxx <line 601> was not SIMD vectorized because the loop is not the innermost loop.
1586-540 (I) Loop (loop index 6) at /bgsys/drivers/toolchain/V1R2M4_base/gnu-linux/lib/gcc/powerpc64-bgq-linux/4.4.7/../../../../powerpc64-bgq-linux/include/c++/4.4.7/bits/stl_algobase.h <line 700> was not SIMD vectorized because it contains memory references ((double *)((char *)this->(DMatrix).data@a8.rns280.  + ($$CIV7 + (this->(DMatrix).lda@40.rns279. * $$CIV8 + (this->(DMatrix).b@38.rns271. * $$CIVB + $$CIVC * (this->(DMatrix).lda@40.rns279. * this->(DMatrix).b@38.rns271.)))) * 8ll))->(double).rns269. =  0.0000000000000000E+000; with non-vectorizable strides.
1586-540 (I) Loop (loop index 6) at /bgsys/drivers/toolchain/V1R2M4_base/gnu-linux/lib/gcc/powerpc64-bgq-linux/4.4.7/../../../../powerpc64-bgq-linux/include/c++/4.4.7/bits/stl_algobase.h <line 702> was not SIMD vectorized because it contains memory references  with non-vectorizable strides.
1586-554 (I) Loop (loop index 6) at /bgsys/drivers/toolchain/V1R2M4_base/gnu-linux/lib/gcc/powerpc64-bgq-linux/4.4.7/../../../../powerpc64-bgq-linux/include/c++/4.4.7/bits/stl_algobase.h <line 702> was not SIMD vectorized because the floating point operation is not vectorizable under -qstrict.
1586-543 (I) <SIMD info> Total number of the innermost loops considered <"2">. Total number of the innermost loops SIMD vectorized <"0">.
1586-534 (I) Loop (loop index 1) at dmatrix.cxx <line 624> was not SIMD vectorized because the loop is not the innermost loop.
1586-534 (I) Loop (loop index 2) at dmatrix.cxx <line 626> was not SIMD vectorized because the loop is not the innermost loop.
1586-534 (I) Loop (loop index 3) at dmatrix.cxx <line 636> was not SIMD vectorized because the loop is not the innermost loop.
1586-540 (I) Loop (loop index 4) at /bgsys/drivers/toolchain/V1R2M4_base/gnu-linux/lib/gcc/powerpc64-bgq-linux/4.4.7/../../../../powerpc64-bgq-linux/include/c++/4.4.7/bits/stl_algobase.h <line 700> was not SIMD vectorized because it contains memory references ((double *)((char *)this->(DMatrix).data@a8.rns292.  + ($$CIVF + (this->(DMatrix).lda@40.rns291. * $$CIV10 + (this->(DMatrix).b@38.rns283. * $$CIV11 + $$CIV12 * (this->(DMatrix).lda@40.rns291. * this->(DMatrix).b@38.rns283.)))) * 8ll))->(double).rns281. =  0.0000000000000000E+000; with non-vectorizable strides.
1586-540 (I) Loop (loop index 4) at /bgsys/drivers/toolchain/V1R2M4_base/gnu-linux/lib/gcc/powerpc64-bgq-linux/4.4.7/../../../../powerpc64-bgq-linux/include/c++/4.4.7/bits/stl_algobase.h <line 702> was not SIMD vectorized because it contains memory references  with non-vectorizable strides.
1586-554 (I) Loop (loop index 4) at /bgsys/drivers/toolchain/V1R2M4_base/gnu-linux/lib/gcc/powerpc64-bgq-linux/4.4.7/../../../../powerpc64-bgq-linux/include/c++/4.4.7/bits/stl_algobase.h <line 702> was not SIMD vectorized because the floating point operation is not vectorizable under -qstrict.
1586-534 (I) Loop (loop index 5) at dmatrix.cxx <line 630> was not SIMD vectorized because the loop is not the innermost loop.
1586-540 (I) Loop (loop index 6) at /bgsys/drivers/toolchain/V1R2M4_base/gnu-linux/lib/gcc/powerpc64-bgq-linux/4.4.7/../../../../powerpc64-bgq-linux/include/c++/4.4.7/bits/stl_algobase.h <line 700> was not SIMD vectorized because it contains memory references ((double *)((char *)this->(DMatrix).data@a8.rns292.  + (8ll + ((this->(DMatrix).lda@40.rns291. * 8ll + 8ll) * $$CIVE + ($$CIVD + ($$CIV11 * this->(DMatrix).b@38.rns283. + this->(DMatrix).lda@40.rns291. * ($$CIV12 * this->(DMatrix).b@38.rns283.))) * 8ll))))->(double).rns281. =  0.0000000000000000E+000; with non-vectorizable strides.
1586-540 (I) Loop (loop index 6) at /bgsys/drivers/toolchain/V1R2M4_base/gnu-linux/lib/gcc/powerpc64-bgq-linux/4.4.7/../../../../powerpc64-bgq-linux/include/c++/4.4.7/bits/stl_algobase.h <line 702> was not SIMD vectorized because it contains memory references  with non-vectorizable strides.
1586-554 (I) Loop (loop index 6) at /bgsys/drivers/toolchain/V1R2M4_base/gnu-linux/lib/gcc/powerpc64-bgq-linux/4.4.7/../../../../powerpc64-bgq-linux/include/c++/4.4.7/bits/stl_algobase.h <line 702> was not SIMD vectorized because the floating point operation is not vectorizable under -qstrict.
1586-543 (I) <SIMD info> Total number of the innermost loops considered <"2">. Total number of the innermost loops SIMD vectorized <"0">.
1586-534 (I) Loop (loop index 1) at dmatrix.cxx <line 654> was not SIMD vectorized because the loop is not the innermost loop.
1586-538 (I) Loop (loop index 2) at dmatrix.cxx <line 656> was not SIMD vectorized because it contains unsupported loop structure.
1586-552 (I) Loop (loop index 2) at dmatrix.cxx <line 656> was not SIMD vectorized because it contains control flow.
1586-540 (I) Loop (loop index 3) at dmatrix.cxx <line 659> was not SIMD vectorized because it contains memory references ((char *)this->(DMatrix).data@a8.rns304.  + (8ll * (($$CIV15 * this->(DMatrix).b@38.rns295.) * this->(DMatrix).lda@40.rns303.) + 8ll * ($$StripMember0[$$SCIX0] * this->(DMatrix).b@38.rns295.)))->(double).rns293.[(this->(DMatrix).lda@40.rns303. + 1ll) * $$CIV13] = _fmadd@47(((char *)this->(DMatrix).data@a8.rns304.  + (8ll * (($$CIV15 * this->(DMatrix).b@38.rns295.) * this->(DMatrix).lda@40.rns303.) + 8ll * ($$StripMember0[$$SCIX0] * this->(DMatrix).b@38.rns295.)))->(double).rns293.[(this->(DMatrix).lda@40.rns303. + 1ll) * $$CIV13],scale,add); with non-vectorizable strides.
1586-540 (I) Loop (loop index 3) at dmatrix.cxx <line 660> was not SIMD vectorized because it contains memory references ((char *)((char *)this->(DMatrix).data@a8.rns304.  + (8ll * (($$CIV15 * this->(DMatrix).b@38.rns295.) * this->(DMatrix).lda@40.rns303.) + 8ll * ($$StripMember0[$$SCIX0] * this->(DMatrix).b@38.rns295.))) + (8ll)*((this->(DMatrix).lda@40.rns303. + 1ll) * $$CIV13)) with non-vectorizable strides.
1586-554 (I) Loop (loop index 3) at dmatrix.cxx <line 660> was not SIMD vectorized because the floating point operation is not vectorizable under -qstrict.
1586-556 (I) Loop (loop index 3) at dmatrix.cxx <line 660> was not SIMD vectorized because it contains non-stride-one store references ((char *)((char *)this->(DMatrix).data@a8.rns304.  + (8ll * (($$CIV15 * this->(DMatrix).b@38.rns295.) * this->(DMatrix).lda@40.rns303.) + 8ll * ($$StripMember0[$$SCIX0] * this->(DMatrix).b@38.rns295.))) + (8ll)*((this->(DMatrix).lda@40.rns303. + 1ll) * $$CIV13)).
1586-534 (I) Loop (loop index 4) at dmatrix.cxx <line 656> was not SIMD vectorized because the loop is not the innermost loop.
1586-534 (I) Loop (loop index 5) at dmatrix.cxx <line 656> was not SIMD vectorized because the loop is not the innermost loop.
1586-538 (I) Loop (loop index 6) at dmatrix.cxx <line 656> was not SIMD vectorized because it contains unsupported loop structure.
1586-552 (I) Loop (loop index 6) at dmatrix.cxx <line 656> was not SIMD vectorized because it contains control flow.
1586-534 (I) Loop (loop index 7) at dmatrix.cxx <line 656> was not SIMD vectorized because the loop is not the innermost loop.
1586-540 (I) Loop (loop index 8) at dmatrix.cxx <line 659> was not SIMD vectorized because it contains memory references ((char *)this->(DMatrix).data@a8.rns304.  + (8ll * ($$CIV15 * (this->(DMatrix).lda@40.rns303. * this->(DMatrix).b@38.rns295.)) + 8ll * ($$StripMember0[$$CIV1A] * this->(DMatrix).b@38.rns295.)))->(double).rns293.[(this->(DMatrix).lda@40.rns303. + 1ll) * $$CIV13] = _fmadd@47(((char *)this->(DMatrix).data@a8.rns304.  + (8ll * ($$CIV15 * (this->(DMatrix).lda@40.rns303. * this->(DMatrix).b@38.rns295.)) + 8ll * ($$StripMember0[$$CIV1A] * this->(DMatrix).b@38.rns295.)))->(double).rns293.[(this->(DMatrix).lda@40.rns303. + 1ll) * $$CIV13],scale,add); with non-vectorizable strides.
1586-540 (I) Loop (loop index 8) at dmatrix.cxx <line 660> was not SIMD vectorized because it contains memory references ((char *)((char *)this->(DMatrix).data@a8.rns304.  + (8ll * ($$CIV15 * (this->(DMatrix).lda@40.rns303. * this->(DMatrix).b@38.rns295.)) + 8ll * ($$StripMember0[$$CIV1A] * this->(DMatrix).b@38.rns295.))) + (8ll)*((this->(DMatrix).lda@40.rns303. + 1ll) * $$CIV13)) with non-vectorizable strides.
1586-554 (I) Loop (loop index 8) at dmatrix.cxx <line 660> was not SIMD vectorized because the floating point operation is not vectorizable under -qstrict.
1586-556 (I) Loop (loop index 8) at dmatrix.cxx <line 660> was not SIMD vectorized because it contains non-stride-one store references ((char *)((char *)this->(DMatrix).data@a8.rns304.  + (8ll * ($$CIV15 * (this->(DMatrix).lda@40.rns303. * this->(DMatrix).b@38.rns295.)) + 8ll * ($$StripMember0[$$CIV1A] * this->(DMatrix).b@38.rns295.))) + (8ll)*((this->(DMatrix).lda@40.rns303. + 1ll) * $$CIV13)).
1586-534 (I) Loop (loop index 9) at dmatrix.cxx <line 654> was not SIMD vectorized because the loop is not the innermost loop.
1586-534 (I) Loop (loop index 10) at dmatrix.cxx <line 656> was not SIMD vectorized because the loop is not the innermost loop.
1586-538 (I) Loop (loop index 11) at dmatrix.cxx <line 656> was not SIMD vectorized because it contains unsupported loop structure.
1586-552 (I) Loop (loop index 11) at dmatrix.cxx <line 656> was not SIMD vectorized because it contains control flow.
1586-534 (I) Loop (loop index 12) at dmatrix.cxx <line 656> was not SIMD vectorized because the loop is not the innermost loop.
1586-540 (I) Loop (loop index 13) at dmatrix.cxx <line 659> was not SIMD vectorized because it contains memory references ((char *)this->(DMatrix).data@a8.rns304.  + (8ll * (($$CIV15 * this->(DMatrix).b@38.rns295.) * this->(DMatrix).lda@40.rns303.) + 8ll * ($$StripMember0[$$SCIX0] * this->(DMatrix).b@38.rns295.)))->(double).rns293.[(this->(DMatrix).lda@40.rns303. + 1ll) * $$CIV13] = _fmadd@47(((char *)this->(DMatrix).data@a8.rns304.  + (8ll * (($$CIV15 * this->(DMatrix).b@38.rns295.) * this->(DMatrix).lda@40.rns303.) + 8ll * ($$StripMember0[$$SCIX0] * this->(DMatrix).b@38.rns295.)))->(double).rns293.[(this->(DMatrix).lda@40.rns303. + 1ll) * $$CIV13],scale,add); with non-vectorizable strides.
1586-540 (I) Loop (loop index 13) at dmatrix.cxx <line 660> was not SIMD vectorized because it contains memory references ((char *)((char *)this->(DMatrix).data@a8.rns304.  + (8ll * (($$CIV15 * this->(DMatrix).b@38.rns295.) * this->(DMatrix).lda@40.rns303.) + 8ll * ($$StripMember0[$$SCIX0] * this->(DMatrix).b@38.rns295.))) + (8ll)*((this->(DMatrix).lda@40.rns303. + 1ll) * $$CIV13)) with non-vectorizable strides.
1586-554 (I) Loop (loop index 13) at dmatrix.cxx <line 660> was not SIMD vectorized because the floating point operation is not vectorizable under -qstrict.
1586-556 (I) Loop (loop index 13) at dmatrix.cxx <line 660> was not SIMD vectorized because it contains non-stride-one store references ((char *)((char *)this->(DMatrix).data@a8.rns304.  + (8ll * (($$CIV15 * this->(DMatrix).b@38.rns295.) * this->(DMatrix).lda@40.rns303.) + 8ll * ($$StripMember0[$$SCIX0] * this->(DMatrix).b@38.rns295.))) + (8ll)*((this->(DMatrix).lda@40.rns303. + 1ll) * $$CIV13)).
1586-534 (I) Loop (loop index 16) at dmatrix.cxx <line 654> was not SIMD vectorized because the loop is not the innermost loop.
1586-538 (I) Loop (loop index 19) at dmatrix.cxx <line 656> was not SIMD vectorized because it contains unsupported loop structure.
1586-552 (I) Loop (loop index 19) at dmatrix.cxx <line 656> was not SIMD vectorized because it contains control flow.
1586-534 (I) Loop (loop index 20) at dmatrix.cxx <line 656> was not SIMD vectorized because the loop is not the innermost loop.
1586-540 (I) Loop (loop index 21) at dmatrix.cxx <line 659> was not SIMD vectorized because it contains memory references ((char *)this->(DMatrix).data@a8.rns304.  + (8ll * ($$CIV15 * (this->(DMatrix).lda@40.rns303. * this->(DMatrix).b@38.rns295.)) + 8ll * ($$StripMember0[$$CIV1A] * this->(DMatrix).b@38.rns295.)))->(double).rns293.[(this->(DMatrix).lda@40.rns303. + 1ll) * $$CIV13] = _fmadd@47(((char *)this->(DMatrix).data@a8.rns304.  + (8ll * ($$CIV15 * (this->(DMatrix).lda@40.rns303. * this->(DMatrix).b@38.rns295.)) + 8ll * ($$StripMember0[$$CIV1A] * this->(DMatrix).b@38.rns295.)))->(double).rns293.[(this->(DMatrix).lda@40.rns303. + 1ll) * $$CIV13],scale,add); with non-vectorizable strides.
1586-540 (I) Loop (loop index 21) at dmatrix.cxx <line 660> was not SIMD vectorized because it contains memory references ((char *)((char *)this->(DMatrix).data@a8.rns304.  + (8ll * ($$CIV15 * (this->(DMatrix).lda@40.rns303. * this->(DMatrix).b@38.rns295.)) + 8ll * ($$StripMember0[$$CIV1A] * this->(DMatrix).b@38.rns295.))) + (8ll)*((this->(DMatrix).lda@40.rns303. + 1ll) * $$CIV13)) with non-vectorizable strides.
1586-554 (I) Loop (loop index 21) at dmatrix.cxx <line 660> was not SIMD vectorized because the floating point operation is not vectorizable under -qstrict.
1586-556 (I) Loop (loop index 21) at dmatrix.cxx <line 660> was not SIMD vectorized because it contains non-stride-one store references ((char *)((char *)this->(DMatrix).data@a8.rns304.  + (8ll * ($$CIV15 * (this->(DMatrix).lda@40.rns303. * this->(DMatrix).b@38.rns295.)) + 8ll * ($$StripMember0[$$CIV1A] * this->(DMatrix).b@38.rns295.))) + (8ll)*((this->(DMatrix).lda@40.rns303. + 1ll) * $$CIV13)).
1586-538 (I) Loop (loop index 22) at dmatrix.cxx <line 654> was not SIMD vectorized because it contains unsupported loop structure.
1586-552 (I) Loop (loop index 22) at dmatrix.cxx <line 654> was not SIMD vectorized because it contains control flow.
1586-543 (I) <SIMD info> Total number of the innermost loops considered <"9">. Total number of the innermost loops SIMD vectorized <"0">.
1586-539 (I) Loop (loop index 1) at ../shared/util.h <line 467> was not SIMD vectorized because it contains function calls.
1586-543 (I) <SIMD info> Total number of the innermost loops considered <"1">. Total number of the innermost loops SIMD vectorized <"0">.
    21 |  char * DMatrix::DMatrix()(DMatrix *this)
          {
    22 |    *((char * *)((char *)this + 168)) = NULL;
    23 |    *((char * *)((char *)this + 176)) = NULL;
    24 |    *((char * *)((char *)this + 192)) = NULL;
    25 |    rstr = this;
            return rstr;
          } /* function */ 


    21 |  char * DMatrix::DMatrix()(DMatrix *this)
          {
    22 |    *((char * *)((char *)this + 168)) = NULL;
    23 |    *((char * *)((char *)this + 176)) = NULL;
    24 |    *((char * *)((char *)this + 192)) = NULL;
    25 |    rstr = this;
            return rstr;
          } /* function */ 


    51 |  char * DMatrix::DMatrix(long, long, long, pview const&, long, double*, double*, bool)(char * this, long long nrow_, long long ncol_, long long b_, pview *pv_, long long lda_, char * root_data_, char * data_, char is_transp_)
    58 |  {
    61 |    *((long long *)(this + 40)) = nrow_;
    62 |    *((long long *)(this + 48)) = ncol_;
    64 |    *((long long *)(this + 56)) = b_;
    65 |    *((aggr92 *)(this + 72)) = *pv_;
    66 |    *((char *)(this + 184)) = is_transp_;
    67 |    if (!(lda_ != 0ll)) goto lab_1;
    68 |    *((long long *)(this + 64)) = lda_;
            goto lab_3;
          lab_1:
    70 |    $$PARM.this40 = this;
   195 |    $$IRET32 = ((*((long long *)($$PARM.this40 + 40)) / *((long long *)($$PARM.this40 + 56))) / (long long) ((int *)($$PARM.this40 + 4))[100 / 4] + (long long) ((*((long long *)($$PARM.this40 + 40)) / *((long long *)($$PARM.this40 + 56))) % (long long) ((int *)($$PARM.this40 + 4))[100 / 4] > (long long) ((((int *)($$PARM.this40 + 8))[100 / 4] + (((int *)($$PARM.this40 + 4))[100 / 4] - ((int *)$$PARM.this40)[72 / 4])) % ((int *)($$PARM.this40 + 4))[100 / 4]))) * *((long long *)($$PARM.this40 + 56));
    70 |    $$RET0 = $$IRET32;
            *((long long *)(this + 64)) = $$RET0;
          lab_3:
    71 |    if (!(data_ == NULL)) goto lab_4;
            $$PARM.this2D = this;
   202 |    $$IRET1F = ((*((long long *)($$PARM.this2D + 48)) / *((long long *)($$PARM.this2D + 56))) / (long long) ((int *)($$PARM.this2D + 4))[80 / 4] + (long long) ((*((long long *)($$PARM.this2D + 48)) / *((long long *)($$PARM.this2D + 56))) % (long long) ((int *)($$PARM.this2D + 4))[80 / 4] > (long long) ((((int *)($$PARM.this2D + 8))[80 / 4] + (((int *)($$PARM.this2D + 4))[80 / 4] - ((int *)($$PARM.this2D + 4))[72 / 4])) % ((int *)($$PARM.this2D + 4))[80 / 4]))) * *((long long *)($$PARM.this2D + 56));
    71 |    $$RET1 = (unsigned long long) $$IRET1F;
            $$RET2 = malloc(8ull * ((unsigned long long) *((long long *)(this + 64)) * $$RET1));
    72 |    *((char * *)(this + 168)) = $$RET2;
    73 |    *((char * *)(this + 176)) = $$RET2;
    75 |    goto lab_6;
          lab_4:
    76 |    *((char * *)(this + 168)) = data_;
    77 |    *((char * *)(this + 176)) = root_data_;
    79 |  lab_6:
    80 |    *((char * *)(this + 192)) = NULL;
    81 |    cdescinit(int*, int, int, int, int, int, int, int, int, int*)(this,(int) *((long long *)(this + 40)),(int) *((long long *)(this + 48)),(int) *((long long *)(this + 56)),(int) *((long long *)(this + 56)),((int *)this)[72 / 4],((int *)(this + 4))[72 / 4],((int *)(this + 88))[72 / 4],(int) *((long long *)(this + 64)),&info)
    86 |    rstr = this;
            return rstr;
          } /* function */ 


    98 |  char * DMatrix::DMatrix(long, long, long, pview const&, char const*)(char * this, long long nrow_, long long ncol_, long long b_, pview *pv_, char * name_)
   102 |  {
   104 |    *((long long *)(this + 40)) = nrow_;
   105 |    *((long long *)(this + 48)) = ncol_;
   106 |    *((long long *)(this + 56)) = b_;
   107 |    *((aggr92 *)(this + 72)) = *pv_;
   108 |    *((char *)(this + 184)) = 0u;
            $$PARM.this41 = this;
   195 |    $$IRET33 = ((*((long long *)($$PARM.this41 + 40)) / *((long long *)($$PARM.this41 + 56))) / (long long) ((int *)($$PARM.this41 + 4))[100 / 4] + (long long) ((*((long long *)($$PARM.this41 + 40)) / *((long long *)($$PARM.this41 + 56))) % (long long) ((int *)($$PARM.this41 + 4))[100 / 4] > (long long) ((((int *)($$PARM.this41 + 8))[100 / 4] + (((int *)($$PARM.this41 + 4))[100 / 4] - ((int *)$$PARM.this41)[72 / 4])) % ((int *)($$PARM.this41 + 4))[100 / 4]))) * *((long long *)($$PARM.this41 + 56));
   108 |    $$RET3 = $$IRET33;
   109 |    *((long long *)(this + 64)) = $$RET3;
            $$PARM.this2F = this;
   202 |    $$IRET21 = ((*((long long *)($$PARM.this2F + 48)) / *((long long *)($$PARM.this2F + 56))) / (long long) ((int *)($$PARM.this2F + 4))[80 / 4] + (long long) ((*((long long *)($$PARM.this2F + 48)) / *((long long *)($$PARM.this2F + 56))) % (long long) ((int *)($$PARM.this2F + 4))[80 / 4] > (long long) ((((int *)($$PARM.this2F + 8))[80 / 4] + (((int *)($$PARM.this2F + 4))[80 / 4] - ((int *)($$PARM.this2F + 4))[72 / 4])) % ((int *)($$PARM.this2F + 4))[80 / 4]))) * *((long long *)($$PARM.this2F + 56));
   109 |    $$RET4 = (unsigned long long) $$IRET21;
            $$RET5 = malloc(8ull * ((unsigned long long) *((long long *)(this + 64)) * $$RET4));
   110 |    *((char * *)(this + 168)) = $$RET5;
   111 |    *((char * *)(this + 176)) = $$RET5;
            $$RET6 = __builtin_strlen(name_);
            $$RET7 = malloc($$RET6 + 1ull);
   112 |    *((char * *)(this + 192)) = $$RET7;
   113 |    __builtin_strcpy($$RET7,name_);
   114 |    cdescinit(int*, int, int, int, int, int, int, int, int, int*)(this,(int) *((long long *)(this + 40)),(int) *((long long *)(this + 48)),(int) *((long long *)(this + 56)),(int) *((long long *)(this + 56)),((int *)this)[72 / 4],((int *)(this + 4))[72 / 4],((int *)(this + 88))[72 / 4],(int) *((long long *)(this + 64)),&info)
   120 |    rstr = this;
            return rstr;
          } /* function */ 


    33 |  void DMatrix::destroy()(DMatrix *this)
          {
    34 |    free(*((char * *)((char *)this + 176)))
    35 |    if (!(*((char * *)((char *)this + 192)) != NULL)) goto lab_1;
            free(*((char * *)((char *)this + 192)))
          lab_1:
    36 |    return;
          } /* function */ 


    51 |  char * DMatrix::DMatrix(long, long, long, pview const&, long, double*, double*, bool)(char * this, long long nrow_, long long ncol_, long long b_, pview *pv_, long long lda_, char * root_data_, char * data_, char is_transp_)
    58 |  {
    61 |    *((long long *)(this + 40)) = nrow_;
    62 |    *((long long *)(this + 48)) = ncol_;
    64 |    *((long long *)(this + 56)) = b_;
    65 |    *((aggr92 *)(this + 72)) = *pv_;
    66 |    *((char *)(this + 184)) = is_transp_;
    67 |    if (!(lda_ != 0ll)) goto lab_1;
    68 |    *((long long *)(this + 64)) = lda_;
            goto lab_3;
          lab_1:
    70 |    $$PARM.this33 = this;
   195 |    $$IRET25 = ((*((long long *)($$PARM.this33 + 40)) / *((long long *)($$PARM.this33 + 56))) / (long long) ((int *)($$PARM.this33 + 4))[100 / 4] + (long long) ((*((long long *)($$PARM.this33 + 40)) / *((long long *)($$PARM.this33 + 56))) % (long long) ((int *)($$PARM.this33 + 4))[100 / 4] > (long long) ((((int *)($$PARM.this33 + 8))[100 / 4] + (((int *)($$PARM.this33 + 4))[100 / 4] - ((int *)$$PARM.this33)[72 / 4])) % ((int *)($$PARM.this33 + 4))[100 / 4]))) * *((long long *)($$PARM.this33 + 56));
    70 |    $$RET8 = $$IRET25;
            *((long long *)(this + 64)) = $$RET8;
          lab_3:
    71 |    if (!(data_ == NULL)) goto lab_4;
            $$PARM.this28 = this;
   202 |    $$IRET1A = ((*((long long *)($$PARM.this28 + 48)) / *((long long *)($$PARM.this28 + 56))) / (long long) ((int *)($$PARM.this28 + 4))[80 / 4] + (long long) ((*((long long *)($$PARM.this28 + 48)) / *((long long *)($$PARM.this28 + 56))) % (long long) ((int *)($$PARM.this28 + 4))[80 / 4] > (long long) ((((int *)($$PARM.this28 + 8))[80 / 4] + (((int *)($$PARM.this28 + 4))[80 / 4] - ((int *)($$PARM.this28 + 4))[72 / 4])) % ((int *)($$PARM.this28 + 4))[80 / 4]))) * *((long long *)($$PARM.this28 + 56));
    71 |    $$RET9 = (unsigned long long) $$IRET1A;
            $$RETA = malloc(8ull * ((unsigned long long) *((long long *)(this + 64)) * $$RET9));
    72 |    *((char * *)(this + 168)) = $$RETA;
    73 |    *((char * *)(this + 176)) = $$RETA;
    75 |    goto lab_6;
          lab_4:
    76 |    *((char * *)(this + 168)) = data_;
    77 |    *((char * *)(this + 176)) = root_data_;
    79 |  lab_6:
    80 |    *((char * *)(this + 192)) = NULL;
    81 |    cdescinit(int*, int, int, int, int, int, int, int, int, int*)(this,(int) *((long long *)(this + 40)),(int) *((long long *)(this + 48)),(int) *((long long *)(this + 56)),(int) *((long long *)(this + 56)),((int *)this)[72 / 4],((int *)(this + 4))[72 / 4],((int *)(this + 88))[72 / 4],(int) *((long long *)(this + 64)),&info)
    86 |    rstr = this;
            return rstr;
          } /* function */ 


    98 |  char * DMatrix::DMatrix(long, long, long, pview const&, char const*)(char * this, long long nrow_, long long ncol_, long long b_, pview *pv_, char * name_)
   102 |  {
   104 |    *((long long *)(this + 40)) = nrow_;
   105 |    *((long long *)(this + 48)) = ncol_;
   106 |    *((long long *)(this + 56)) = b_;
   107 |    *((aggr92 *)(this + 72)) = *pv_;
   108 |    *((char *)(this + 184)) = 0u;
            $$PARM.this42 = this;
   195 |    $$IRET34 = ((*((long long *)($$PARM.this42 + 40)) / *((long long *)($$PARM.this42 + 56))) / (long long) ((int *)($$PARM.this42 + 4))[100 / 4] + (long long) ((*((long long *)($$PARM.this42 + 40)) / *((long long *)($$PARM.this42 + 56))) % (long long) ((int *)($$PARM.this42 + 4))[100 / 4] > (long long) ((((int *)($$PARM.this42 + 8))[100 / 4] + (((int *)($$PARM.this42 + 4))[100 / 4] - ((int *)$$PARM.this42)[72 / 4])) % ((int *)($$PARM.this42 + 4))[100 / 4]))) * *((long long *)($$PARM.this42 + 56));
   108 |    $$RETB = $$IRET34;
   109 |    *((long long *)(this + 64)) = $$RETB;
            $$PARM.this2A = this;
   202 |    $$IRET1C = ((*((long long *)($$PARM.this2A + 48)) / *((long long *)($$PARM.this2A + 56))) / (long long) ((int *)($$PARM.this2A + 4))[80 / 4] + (long long) ((*((long long *)($$PARM.this2A + 48)) / *((long long *)($$PARM.this2A + 56))) % (long long) ((int *)($$PARM.this2A + 4))[80 / 4] > (long long) ((((int *)($$PARM.this2A + 8))[80 / 4] + (((int *)($$PARM.this2A + 4))[80 / 4] - ((int *)($$PARM.this2A + 4))[72 / 4])) % ((int *)($$PARM.this2A + 4))[80 / 4]))) * *((long long *)($$PARM.this2A + 56));
   109 |    $$RETC = (unsigned long long) $$IRET1C;
            $$RETD = malloc(8ull * ((unsigned long long) *((long long *)(this + 64)) * $$RETC));
   110 |    *((char * *)(this + 168)) = $$RETD;
   111 |    *((char * *)(this + 176)) = $$RETD;
            $$RETE = __builtin_strlen(name_);
            $$RETF = malloc($$RETE + 1ull);
   112 |    *((char * *)(this + 192)) = $$RETF;
   113 |    __builtin_strcpy($$RETF,name_);
   114 |    cdescinit(int*, int, int, int, int, int, int, int, int, int*)(this,(int) *((long long *)(this + 40)),(int) *((long long *)(this + 48)),(int) *((long long *)(this + 56)),(int) *((long long *)(this + 56)),((int *)this)[72 / 4],((int *)(this + 4))[72 / 4],((int *)(this + 88))[72 / 4],(int) *((long long *)(this + 64)),&info)
   120 |    rstr = this;
            return rstr;
          } /* function */ 


   123 |  void DMatrix::set_name(char const*)(DMatrix *this, char * name_)
          {
   124 |    if (!(name_ != NULL)) goto lab_1;
            $$RET10 = __builtin_strlen(name_);
            $$RET11 = malloc($$RET10 + 1ull);
   125 |    *((char * *)((char *)this + 192)) = $$RET11;
   126 |    __builtin_strcpy($$RET11,name_);
   127 |  lab_1:
   128 |    return;
          } /* function */ 


   134 |  char * DMatrix::operator double*() const(DMatrix *this)
          {
   135 |    rstr = *((char * *)((char *)this + 168));
            return rstr;
   136 |  } /* function */ 


   141 |  void DMatrix::print()(char * this)
          {
   189 |    return;
          } /* function */ 


   194 |  long long DMatrix::get_mynrow()(char * this)
          {
   195 |    rstr = ((*((long long *)(this + 40)) / *((long long *)(this + 56))) / (long long) ((int *)(this + 4))[100 / 4] + (long long) ((*((long long *)(this + 40)) / *((long long *)(this + 56))) % (long long) ((int *)(this + 4))[100 / 4] > (long long) ((((int *)(this + 8))[100 / 4] + (((int *)(this + 4))[100 / 4] - ((int *)this)[72 / 4])) % ((int *)(this + 4))[100 / 4]))) * *((long long *)(this + 56));
            return rstr;
   196 |  } /* function */ 


   201 |  long long DMatrix::get_myncol()(char * this)
          {
   202 |    rstr = ((*((long long *)(this + 48)) / *((long long *)(this + 56))) / (long long) ((int *)(this + 4))[80 / 4] + (long long) ((*((long long *)(this + 48)) / *((long long *)(this + 56))) % (long long) ((int *)(this + 4))[80 / 4] > (long long) ((((int *)(this + 8))[80 / 4] + (((int *)(this + 4))[80 / 4] - ((int *)(this + 4))[72 / 4])) % ((int *)(this + 4))[80 / 4]))) * *((long long *)(this + 56));
            return rstr;
   203 |  } /* function */ 


   208 |  long long DMatrix::get_mysize()(char * this)
          {
   209 |    $$PARM.this34 = this;
   195 |    $$IRET26 = ((*((long long *)($$PARM.this34 + 40)) / *((long long *)($$PARM.this34 + 56))) / (long long) ((int *)($$PARM.this34 + 4))[100 / 4] + (long long) ((*((long long *)($$PARM.this34 + 40)) / *((long long *)($$PARM.this34 + 56))) % (long long) ((int *)($$PARM.this34 + 4))[100 / 4] > (long long) ((((int *)($$PARM.this34 + 8))[100 / 4] + (((int *)($$PARM.this34 + 4))[100 / 4] - ((int *)$$PARM.this34)[72 / 4])) % ((int *)($$PARM.this34 + 4))[100 / 4]))) * *((long long *)($$PARM.this34 + 56));
   209 |    $$SFX0 = $$IRET26;
            $$PARM.this1F = this;
   202 |    $$IRET11 = ((*((long long *)($$PARM.this1F + 48)) / *((long long *)($$PARM.this1F + 56))) / (long long) ((int *)($$PARM.this1F + 4))[80 / 4] + (long long) ((*((long long *)($$PARM.this1F + 48)) / *((long long *)($$PARM.this1F + 56))) % (long long) ((int *)($$PARM.this1F + 4))[80 / 4] > (long long) ((((int *)($$PARM.this1F + 8))[80 / 4] + (((int *)($$PARM.this1F + 4))[80 / 4] - ((int *)($$PARM.this1F + 4))[72 / 4])) % ((int *)($$PARM.this1F + 4))[80 / 4]))) * *((long long *)($$PARM.this1F + 56));
   209 |    $$RET12 = $$IRET11;
            rstr = $$RET12 * $$SFX0;
            return rstr;
   210 |  } /* function */ 


   219 |  void DMatrix::move_ptr(long, long)(DMatrix *this, long long mrow, long long mcol)
   220 |  {
   221 |    slc = DMatrix::slice(long, long, long, long)(this,mrow,*((long long *)((char *)this + 40)) - mrow,mcol,*((long long *)((char *)this + 48)) - mcol)->(DMatrix).rns95.;
   222 |    *this = slc;
   223 |    return;
          } /* function */ 


   232 |  void DMatrix::move_ptr(long, long, long, long)(DMatrix *this, long long firstrow, long long numrows, long long firstcol, long long numcols)
   235 |  {
   236 |    slc = DMatrix::slice(long, long, long, long)(this,firstrow,numrows,firstcol,numcols)->(DMatrix).rns99.;
   237 |    *this = slc;
   238 |    return;
          } /* function */ 


   243 |  aggr200 DMatrix::transp()(DMatrix *this)
          {
   244 |    $$PARM.this80 = &mat;
            $$PARM.nrow_81 = *((long long *)((char *)this + 40));
            $$PARM.ncol_82 = *((long long *)((char *)this + 48));
            $$PARM.b_83 = *((long long *)((char *)this + 56));
            $$PARM.pv_84 = (this + 72);
            $$PARM.lda_85 = *((long long *)((char *)this + 64));
            $$PARM.root_data_86 = *((char * *)((char *)this + 176));
            $$PARM.data_87 = *((char * *)((char *)this + 168));
            $$PARM.is_transp_88 = (char) (0u == *((char *)((char *)this + 184)));
    61 |    *((long long *)($$PARM.this80 + 40)) = $$PARM.nrow_81;
    62 |    *((long long *)($$PARM.this80 + 48)) = $$PARM.ncol_82;
    64 |    *((long long *)($$PARM.this80 + 56)) = $$PARM.b_83;
    65 |    *((aggr92 *)($$PARM.this80 + 72)) = *$$PARM.pv_84;
    66 |    *((char *)($$PARM.this80 + 184)) = $$PARM.is_transp_88;
    67 |    if (!($$PARM.lda_85 != 0ll)) goto lab_3;
    68 |    *((long long *)($$PARM.this80 + 64)) = $$PARM.lda_85;
            goto lab_4;
          lab_3:
    70 |    $$PARM.this33 = $$PARM.this80;
   195 |    $$IRET25 = ((*((long long *)($$PARM.this33 + 40)) / *((long long *)($$PARM.this33 + 56))) / (long long) ((int *)($$PARM.this33 + 4))[100 / 4] + (long long) ((*((long long *)($$PARM.this33 + 40)) / *((long long *)($$PARM.this33 + 56))) % (long long) ((int *)($$PARM.this33 + 4))[100 / 4] > (long long) ((((int *)($$PARM.this33 + 8))[100 / 4] + (((int *)($$PARM.this33 + 4))[100 / 4] - ((int *)$$PARM.this33)[72 / 4])) % ((int *)($$PARM.this33 + 4))[100 / 4]))) * *((long long *)($$PARM.this33 + 56));
    70 |    $$RET8 = $$IRET25;
            *((long long *)($$PARM.this80 + 64)) = $$RET8;
          lab_4:
    71 |    if (!($$PARM.data_87 == NULL)) goto lab_6;
            $$PARM.this28 = $$PARM.this80;
   202 |    $$IRET1A = ((*((long long *)($$PARM.this28 + 48)) / *((long long *)($$PARM.this28 + 56))) / (long long) ((int *)($$PARM.this28 + 4))[80 / 4] + (long long) ((*((long long *)($$PARM.this28 + 48)) / *((long long *)($$PARM.this28 + 56))) % (long long) ((int *)($$PARM.this28 + 4))[80 / 4] > (long long) ((((int *)($$PARM.this28 + 8))[80 / 4] + (((int *)($$PARM.this28 + 4))[80 / 4] - ((int *)($$PARM.this28 + 4))[72 / 4])) % ((int *)($$PARM.this28 + 4))[80 / 4]))) * *((long long *)($$PARM.this28 + 56));
    71 |    $$RET9 = (unsigned long long) $$IRET1A;
            $$RETA = malloc(8ull * ((unsigned long long) *((long long *)($$PARM.this80 + 64)) * $$RET9));
    72 |    *((char * *)($$PARM.this80 + 168)) = $$RETA;
    73 |    *((char * *)($$PARM.this80 + 176)) = $$RETA;
    75 |    goto lab_8;
          lab_6:
    76 |    *((char * *)($$PARM.this80 + 168)) = $$PARM.data_87;
    77 |    *((char * *)($$PARM.this80 + 176)) = $$PARM.root_data_86;
    79 |  lab_8:
    80 |    *((char * *)($$PARM.this80 + 192)) = NULL;
    81 |    cdescinit(int*, int, int, int, int, int, int, int, int, int*)($$PARM.this80,(int) *((long long *)($$PARM.this80 + 40)),(int) *((long long *)($$PARM.this80 + 48)),(int) *((long long *)($$PARM.this80 + 56)),(int) *((long long *)($$PARM.this80 + 56)),((int *)$$PARM.this80)[72 / 4],((int *)($$PARM.this80 + 4))[72 / 4],((int *)($$PARM.this80 + 88))[72 / 4],(int) *((long long *)($$PARM.this80 + 64)),&info)
    86 |    $$IRET42 = $$PARM.this80;
   245 |    $$PARM.name_13 = *((char * *)((char *)this + 192));
   124 |    if (!($$PARM.name_13 != NULL)) goto lab_1;
            $$RET10 = __builtin_strlen($$PARM.name_13);
            $$RET11 = malloc($$RET10 + 1ull);
   125 |    &mat->(DMatrix).name@c0.rns79.$$33 = $$RET11;
   126 |    __builtin_strcpy($$RET11,$$PARM.name_13);
   127 |  lab_1:
   246 |    rstr = mat;
            return rstr;
   247 |  } /* function */ 


   252 |  aggr200 DMatrix::transpose_data()(char * this)
          {
            __es.__l@0 = 0;
            __es.__t@8 = &__fsm_tab;
            __es.__this@10 = this;
            __es.__i@18 = 0;
   253 |    mat = DMatrix::get_contig()(this)->(DMatrix).rns113.;
   254 |    $$PARM.this45 = &mat;
   195 |    $$IRET37 = ((*((long long *)($$PARM.this45 + 40)) / *((long long *)($$PARM.this45 + 56))) / (long long) ((int *)($$PARM.this45 + 4))[100 / 4] + (long long) ((*((long long *)($$PARM.this45 + 40)) / *((long long *)($$PARM.this45 + 56))) % (long long) ((int *)($$PARM.this45 + 4))[100 / 4] > (long long) ((((int *)($$PARM.this45 + 8))[100 / 4] + (((int *)($$PARM.this45 + 4))[100 / 4] - ((int *)$$PARM.this45)[72 / 4])) % ((int *)($$PARM.this45 + 4))[100 / 4]))) * *((long long *)($$PARM.this45 + 56));
   254 |    mnrow = $$IRET37;
   255 |    $$PARM.this2E = &mat;
   202 |    $$IRET20 = ((*((long long *)($$PARM.this2E + 48)) / *((long long *)($$PARM.this2E + 56))) / (long long) ((int *)($$PARM.this2E + 4))[80 / 4] + (long long) ((*((long long *)($$PARM.this2E + 48)) / *((long long *)($$PARM.this2E + 56))) % (long long) ((int *)($$PARM.this2E + 4))[80 / 4] > (long long) ((((int *)($$PARM.this2E + 8))[80 / 4] + (((int *)($$PARM.this2E + 4))[80 / 4] - ((int *)($$PARM.this2E + 4))[72 / 4])) % ((int *)($$PARM.this2E + 4))[80 / 4]))) * *((long long *)($$PARM.this2E + 56));
   255 |    mncol = $$IRET20;
   256 |    mat2 = DMatrix::get_contig()(this)->(DMatrix).rns114.;
   257 |    CTF_Timer::CTF_Timer(char const*)(&__t,"MPI_Sendrecv");
            __es.__c4@3 = 1u;
            CTF_Timer::start()(&__t)
   135 |    $$IRET6 = &mat2->(DMatrix).data@a8.rns81.$$40;
   257 |    $$RET13 = $$IRET6;
            $$SFX1 = ((int *)(this + 4))[80 / 4] * ((int *)(this + 8))[100 / 4] + ((int *)(this + 8))[80 / 4];
   135 |    $$IRETA = &mat->(DMatrix).data@a8.rns81.$$41;
   257 |    $$RET14 = $$IRETA;
            PMPI_Sendrecv($$RET13,(int) (mncol * mnrow),1275070475,$$SFX1,342,$$RET14,(int) (mncol * mnrow),1275070475,((int *)(this + 4))[80 / 4] * ((int *)(this + 8))[100 / 4] + ((int *)(this + 8))[80 / 4],342,((int *)this)[140 / 4],(char *) 1);
            CTF_Timer::stop()(&__t)
            __es.__c4@3 = 0u;
            CTF_Timer::~CTF_Timer()(&__t);
   260 |    $$PARM.name_11 = *((char * *)(this + 192));
   124 |    if (!($$PARM.name_11 != NULL)) goto lab_6;
            $$RET10 = __builtin_strlen($$PARM.name_11);
            $$RET11 = malloc($$RET10 + 1ull);
   125 |    &mat->(DMatrix).name@c0.rns79.$$45 = $$RET11;
   126 |    __builtin_strcpy($$RET11,$$PARM.name_11);
   127 |  lab_6:
    34 |    free(&mat2->(DMatrix).root_data@b0.rns42.$$46)
    35 |    if (!(&mat2->(DMatrix).name@c0.rns43.$$46 != NULL)) goto lab_10;
            free(&mat2->(DMatrix).name@c0.rns43.$$46)
          lab_10:
   262 |    rstr = mat;
            return rstr;
   263 |  } /* function */ 


   268 |  char * DMatrix::replicate_vertical()(char * this)
          {
            __es.__l@0 = 0;
            __es.__t@8 = &__fsm_tab;
            __es.__this@10 = this;
            __es.__i@18 = 0;
   280 |    ctg = DMatrix::get_contig()(this)->(DMatrix).rns126.;
   282 |    $$SFX2 = (unsigned long long) (*((long long *)(this + 40)) * 8ll);
            $$PARM.this2B = this;
   202 |    $$IRET1D = ((*((long long *)($$PARM.this2B + 48)) / *((long long *)($$PARM.this2B + 56))) / (long long) ((int *)($$PARM.this2B + 4))[80 / 4] + (long long) ((*((long long *)($$PARM.this2B + 48)) / *((long long *)($$PARM.this2B + 56))) % (long long) ((int *)($$PARM.this2B + 4))[80 / 4] > (long long) ((((int *)($$PARM.this2B + 8))[80 / 4] + (((int *)($$PARM.this2B + 4))[80 / 4] - ((int *)($$PARM.this2B + 4))[72 / 4])) % ((int *)($$PARM.this2B + 4))[80 / 4]))) * *((long long *)($$PARM.this2B + 56));
   282 |    $$RET15 = (unsigned long long) $$IRET1D;
            rep_mat = malloc($$RET15 * $$SFX2);
   284 |    CTF_Timer::CTF_Timer(char const*)(&__t,"MPI_Allgather");
            __es.__c4@3 = 1u;
            CTF_Timer::start()(&__t)
   135 |    $$IRET4 = &ctg->(DMatrix).data@a8.rns81.$$52;
   284 |    $$RET16 = $$IRET4;
            $$PARM.thisBE = &ctg;
   209 |    $$PARM.this34 = $$PARM.thisBE;
   195 |    $$IRET26 = ((*((long long *)($$PARM.this34 + 40)) / *((long long *)($$PARM.this34 + 56))) / (long long) ((int *)($$PARM.this34 + 4))[100 / 4] + (long long) ((*((long long *)($$PARM.this34 + 40)) / *((long long *)($$PARM.this34 + 56))) % (long long) ((int *)($$PARM.this34 + 4))[100 / 4] > (long long) ((((int *)($$PARM.this34 + 8))[100 / 4] + (((int *)($$PARM.this34 + 4))[100 / 4] - ((int *)$$PARM.this34)[72 / 4])) % ((int *)($$PARM.this34 + 4))[100 / 4]))) * *((long long *)($$PARM.this34 + 56));
   209 |    $$SFX0 = $$IRET26;
            $$PARM.this1F = $$PARM.thisBE;
   202 |    $$IRET11 = ((*((long long *)($$PARM.this1F + 48)) / *((long long *)($$PARM.this1F + 56))) / (long long) ((int *)($$PARM.this1F + 4))[80 / 4] + (long long) ((*((long long *)($$PARM.this1F + 48)) / *((long long *)($$PARM.this1F + 56))) % (long long) ((int *)($$PARM.this1F + 4))[80 / 4] > (long long) ((((int *)($$PARM.this1F + 8))[80 / 4] + (((int *)($$PARM.this1F + 4))[80 / 4] - ((int *)($$PARM.this1F + 4))[72 / 4])) % ((int *)($$PARM.this1F + 4))[80 / 4]))) * *((long long *)($$PARM.this1F + 56));
   209 |    $$RET12 = $$IRET11;
            $$IRET4E = $$RET12 * $$SFX0;
   284 |    $$SFX3 = (int) $$IRET4E;
            $$PARM.thisBF = &ctg;
   209 |    $$PARM.this34 = $$PARM.thisBF;
   195 |    $$IRET26 = ((*((long long *)($$PARM.this34 + 40)) / *((long long *)($$PARM.this34 + 56))) / (long long) ((int *)($$PARM.this34 + 4))[100 / 4] + (long long) ((*((long long *)($$PARM.this34 + 40)) / *((long long *)($$PARM.this34 + 56))) % (long long) ((int *)($$PARM.this34 + 4))[100 / 4] > (long long) ((((int *)($$PARM.this34 + 8))[100 / 4] + (((int *)($$PARM.this34 + 4))[100 / 4] - ((int *)$$PARM.this34)[72 / 4])) % ((int *)($$PARM.this34 + 4))[100 / 4]))) * *((long long *)($$PARM.this34 + 56));
   209 |    $$SFX0 = $$IRET26;
            $$PARM.this1F = $$PARM.thisBF;
   202 |    $$IRET11 = ((*((long long *)($$PARM.this1F + 48)) / *((long long *)($$PARM.this1F + 56))) / (long long) ((int *)($$PARM.this1F + 4))[80 / 4] + (long long) ((*((long long *)($$PARM.this1F + 48)) / *((long long *)($$PARM.this1F + 56))) % (long long) ((int *)($$PARM.this1F + 4))[80 / 4] > (long long) ((((int *)($$PARM.this1F + 8))[80 / 4] + (((int *)($$PARM.this1F + 4))[80 / 4] - ((int *)($$PARM.this1F + 4))[72 / 4])) % ((int *)($$PARM.this1F + 4))[80 / 4]))) * *((long long *)($$PARM.this1F + 56));
   209 |    $$RET12 = $$IRET11;
            $$IRET4F = $$RET12 * $$SFX0;
   284 |    $$RET17 = (int) $$IRET4F;
            PMPI_Allgather($$RET16,$$SFX3,1275070475,rep_mat,$$RET17,1275070475,((int *)this)[100 / 4]);
            CTF_Timer::stop()(&__t)
            __es.__c4@3 = 0u;
            CTF_Timer::~CTF_Timer()(&__t);
   288 |    rstr = rep_mat;
            return rstr;
   289 |  } /* function */ 


   294 |  char * DMatrix::replicate_horizontal()(char * this)
          {
            __es.__l@0 = 0;
            __es.__t@8 = &__fsm_tab;
            __es.__this@10 = this;
            __es.__i@18 = 0;
   295 |    ctg = DMatrix::get_contig()(this)->(DMatrix).rns133.;
   297 |    $$SFX4 = (unsigned long long) (*((long long *)(this + 48)) * 8ll);
            $$PARM.this49 = this;
   195 |    $$IRET3B = ((*((long long *)($$PARM.this49 + 40)) / *((long long *)($$PARM.this49 + 56))) / (long long) ((int *)($$PARM.this49 + 4))[100 / 4] + (long long) ((*((long long *)($$PARM.this49 + 40)) / *((long long *)($$PARM.this49 + 56))) % (long long) ((int *)($$PARM.this49 + 4))[100 / 4] > (long long) ((((int *)($$PARM.this49 + 8))[100 / 4] + (((int *)($$PARM.this49 + 4))[100 / 4] - ((int *)$$PARM.this49)[72 / 4])) % ((int *)($$PARM.this49 + 4))[100 / 4]))) * *((long long *)($$PARM.this49 + 56));
   297 |    $$RET18 = (unsigned long long) $$IRET3B;
            rep_mat = malloc($$RET18 * $$SFX4);
   299 |    CTF_Timer::CTF_Timer(char const*)(&__t,"MPI_Allgather");
            __es.__c4@3 = 1u;
            CTF_Timer::start()(&__t)
   135 |    $$IRETB = &ctg->(DMatrix).data@a8.rns81.$$63;
   299 |    $$RET19 = $$IRETB;
            $$PARM.thisC0 = &ctg;
   209 |    $$PARM.this34 = $$PARM.thisC0;
   195 |    $$IRET26 = ((*((long long *)($$PARM.this34 + 40)) / *((long long *)($$PARM.this34 + 56))) / (long long) ((int *)($$PARM.this34 + 4))[100 / 4] + (long long) ((*((long long *)($$PARM.this34 + 40)) / *((long long *)($$PARM.this34 + 56))) % (long long) ((int *)($$PARM.this34 + 4))[100 / 4] > (long long) ((((int *)($$PARM.this34 + 8))[100 / 4] + (((int *)($$PARM.this34 + 4))[100 / 4] - ((int *)$$PARM.this34)[72 / 4])) % ((int *)($$PARM.this34 + 4))[100 / 4]))) * *((long long *)($$PARM.this34 + 56));
   209 |    $$SFX0 = $$IRET26;
            $$PARM.this1F = $$PARM.thisC0;
   202 |    $$IRET11 = ((*((long long *)($$PARM.this1F + 48)) / *((long long *)($$PARM.this1F + 56))) / (long long) ((int *)($$PARM.this1F + 4))[80 / 4] + (long long) ((*((long long *)($$PARM.this1F + 48)) / *((long long *)($$PARM.this1F + 56))) % (long long) ((int *)($$PARM.this1F + 4))[80 / 4] > (long long) ((((int *)($$PARM.this1F + 8))[80 / 4] + (((int *)($$PARM.this1F + 4))[80 / 4] - ((int *)($$PARM.this1F + 4))[72 / 4])) % ((int *)($$PARM.this1F + 4))[80 / 4]))) * *((long long *)($$PARM.this1F + 56));
   209 |    $$RET12 = $$IRET11;
            $$IRET50 = $$RET12 * $$SFX0;
   299 |    $$SFX5 = (int) $$IRET50;
            $$PARM.thisBB = &ctg;
   209 |    $$PARM.this34 = $$PARM.thisBB;
   195 |    $$IRET26 = ((*((long long *)($$PARM.this34 + 40)) / *((long long *)($$PARM.this34 + 56))) / (long long) ((int *)($$PARM.this34 + 4))[100 / 4] + (long long) ((*((long long *)($$PARM.this34 + 40)) / *((long long *)($$PARM.this34 + 56))) % (long long) ((int *)($$PARM.this34 + 4))[100 / 4] > (long long) ((((int *)($$PARM.this34 + 8))[100 / 4] + (((int *)($$PARM.this34 + 4))[100 / 4] - ((int *)$$PARM.this34)[72 / 4])) % ((int *)($$PARM.this34 + 4))[100 / 4]))) * *((long long *)($$PARM.this34 + 56));
   209 |    $$SFX0 = $$IRET26;
            $$PARM.this1F = $$PARM.thisBB;
   202 |    $$IRET11 = ((*((long long *)($$PARM.this1F + 48)) / *((long long *)($$PARM.this1F + 56))) / (long long) ((int *)($$PARM.this1F + 4))[80 / 4] + (long long) ((*((long long *)($$PARM.this1F + 48)) / *((long long *)($$PARM.this1F + 56))) % (long long) ((int *)($$PARM.this1F + 4))[80 / 4] > (long long) ((((int *)($$PARM.this1F + 8))[80 / 4] + (((int *)($$PARM.this1F + 4))[80 / 4] - ((int *)($$PARM.this1F + 4))[72 / 4])) % ((int *)($$PARM.this1F + 4))[80 / 4]))) * *((long long *)($$PARM.this1F + 56));
   209 |    $$RET12 = $$IRET11;
            $$IRET4B = $$RET12 * $$SFX0;
   299 |    $$RET1A = (int) $$IRET4B;
            PMPI_Allgather($$RET19,$$SFX5,1275070475,rep_mat,$$RET1A,1275070475,((int *)this)[80 / 4]);
            CTF_Timer::stop()(&__t)
            __es.__c4@3 = 0u;
            CTF_Timer::~CTF_Timer()(&__t);
   303 |    rstr = rep_mat;
            return rstr;
   304 |  } /* function */ 


   310 |  void DMatrix::reduce_scatter_horizontal(double*)(char * this, char * cntrb)
          {
            __es.__l@0 = 0;
            __es.__t@8 = &__fsm_tab;
            __es.__this@10 = this;
            __es.__i@18 = 0;
            guard___func__15 = 1;
   311 |    jp = 1;
   312 |    logdep = 0;
   313 |    if (!(1 < ((int *)(this + 4))[80 / 4])) goto lab_4;
            do {   /* id=2 guarded */ /* ~2 */ 
              /* region = 23 */
   314 |      jp = jp * 2;
   315 |      logdep = logdep + 1;
   313 |    } while (jp < ((int *)(this + 4))[80 / 4]);    /* ~2 */
          lab_4:
   317 |    if (jp == ((int *)(this + 4))[80 / 4]) goto lab_7;
            __assert_fail("jp==pv.crow.np","dmatrix.cxx",317u,&__func__)
            return;
          lab_7:
   318 |    $$SFX6 = *((long long *)(this + 48));
            $$RET1B = ((*((long long *)(this + 40)) / *((long long *)(this + 56))) / (long long) ((int *)(this + 4))[100 / 4] + (long long) ((*((long long *)(this + 40)) / *((long long *)(this + 56))) % (long long) ((int *)(this + 4))[100 / 4] > (long long) ((((int *)(this + 8))[100 / 4] + (((int *)(this + 4))[100 / 4] - ((int *)this)[72 / 4])) % ((int *)(this + 4))[100 / 4]))) * *((long long *)(this + 56));
   320 |    recv_buf = malloc((unsigned long long) (8ll * ($$RET1B * *((long long *)(this + 48)))) / 2ull);
   322 |    ptr_keep = cntrb;
   324 |    ghost_rank = 0;
   325 |    if (!(0 < logdep)) goto lab_10;
            $$CIV0 = 0ll;
            do {   /* id=1 guarded */ /* ~8 */ 
              /* region = 24 */
              /* bump-normalized */
   328 |      if (!(1 == (((int *)(this + 8))[80 / 4] >> (int) $$CIV0) % 2)) goto lab_11;
   332 |      ghost_rank = ghost_rank + (1 << (logdep - (int) $$CIV0) - 1);
   333 |      nbr = ((int *)(this + 8))[80 / 4] - (1 << (int) $$CIV0);
   334 |      ptr_send = ptr_keep;
   335 |      ptr_keep = ((char *)ptr_keep  + (($$RET1B * $$SFX6) / (long long) (2 << (int) $$CIV0)) * 8ll);
   336 |      goto lab_13;
            lab_11:
   337 |      nbr = (1 << (int) $$CIV0) + ((int *)(this + 8))[80 / 4];
   338 |      ptr_send = ((char *)ptr_keep  + (($$RET1B * $$SFX6) / (long long) (2 << (int) $$CIV0)) * 8ll);
   339 |    lab_13:
   341 |      CTF_Timer::CTF_Timer(char const*)(&__t,"MPI_Sendrecv");
              __es.__c4@3 = 1u;
              CTF_Timer::start()(&__t)
              PMPI_Sendrecv(ptr_send,(int) (($$RET1B * $$SFX6) / (long long) (2 << (int) $$CIV0)),1275070475,nbr,(int) $$CIV0,recv_buf,(int) (($$RET1B * $$SFX6) / (long long) (2 << (int) $$CIV0)),1275070475,nbr,(int) $$CIV0,((int *)this)[80 / 4],(char *) 1);
              CTF_Timer::stop()(&__t)
              __es.__c4@3 = 0u;
              CTF_Timer::~CTF_Timer()(&__t);
   345 |      cdaxpy(int, double, double const*, int, double*, int)((int) (($$RET1B * $$SFX6) / (long long) (2 << (int) $$CIV0)), 1.0000000000000000E+000,recv_buf,1,ptr_keep,1)
   325 |      $$CIV0 = $$CIV0 + 1ll;
            } while ((unsigned long long) $$CIV0 < (unsigned long long) ((long long) logdep));    /* ~8 */
          lab_10:
   347 |    if (!(ghost_rank != ((int *)(this + 8))[80 / 4])) goto lab_17;
   348 |    CTF_Timer::CTF_Timer(char const*)(&__t,"MPI_Sendrecv");
            __es.__c4@3 = 2u;
            CTF_Timer::start()(&__t)
            PMPI_Sendrecv(ptr_keep,(int) ((((*((long long *)(this + 48)) / *((long long *)(this + 56))) / (long long) ((int *)(this + 4))[80 / 4] + (long long) ((*((long long *)(this + 48)) / *((long long *)(this + 56))) % (long long) ((int *)(this + 4))[80 / 4] > (long long) ((((int *)(this + 8))[80 / 4] + (((int *)(this + 4))[80 / 4] - ((int *)(this + 4))[72 / 4])) % ((int *)(this + 4))[80 / 4]))) * *((long long *)(this + 56))) * (((*((long long *)(this + 40)) / *((long long *)(this + 56))) / (long long) ((int *)(this + 4))[100 / 4] + (long long) ((*((long long *)(this + 40)) / *((long long *)(this + 56))) % (long long) ((int *)(this + 4))[100 / 4] > (long long) ((((int *)(this + 8))[100 / 4] + (((int *)(this + 4))[100 / 4] - ((int *)this)[72 / 4])) % ((int *)(this + 4))[100 / 4]))) * *((long long *)(this + 56)))),1275070475,ghost_rank,17,ptr_send,(int) ((((*((long long *)(this + 48)) / *((long long *)(this + 56))) / (long long) ((int *)(this + 4))[80 / 4] + (long long) ((*((long long *)(this + 48)) / *((long long *)(this + 56))) % (long long) ((int *)(this + 4))[80 / 4] > (long long) ((((int *)(this + 8))[80 / 4] + (((int *)(this + 4))[80 / 4] - ((int *)(this + 4))[72 / 4])) % ((int *)(this + 4))[80 / 4]))) * *((long long *)(this + 56))) * (((*((long long *)(this + 40)) / *((long long *)(this + 56))) / (long long) ((int *)(this + 4))[100 / 4] + (long long) ((*((long long *)(this + 40)) / *((long long *)(this + 56))) % (long long) ((int *)(this + 4))[100 / 4] > (long long) ((((int *)(this + 8))[100 / 4] + (((int *)(this + 4))[100 / 4] - ((int *)this)[72 / 4])) % ((int *)(this + 4))[100 / 4]))) * *((long long *)(this + 56)))),1275070475,ghost_rank,17,((int *)this)[80 / 4],(char *) 1);
            CTF_Timer::stop()(&__t)
            __es.__c4@3 = 0u;
            CTF_Timer::~CTF_Timer()(&__t);
   351 |    goto lab_22;
          lab_17:
            ptr_send = ptr_keep;
          lab_22:
   352 |    if (*((long long *)(this + 64)) == ((*((long long *)(this + 40)) / *((long long *)(this + 56))) / (long long) ((int *)(this + 4))[100 / 4] + (long long) ((*((long long *)(this + 40)) / *((long long *)(this + 56))) % (long long) ((int *)(this + 4))[100 / 4] > (long long) ((((int *)(this + 8))[100 / 4] + (((int *)(this + 4))[100 / 4] - ((int *)this)[72 / 4])) % ((int *)(this + 4))[100 / 4]))) * *((long long *)(this + 56))) goto lab_25;
            __assert_fail("lda == get_mynrow()","dmatrix.cxx",352u,&__func__)
            return;
          lab_25:
   353 |    cdaxpy(int, double, double const*, int, double*, int)((int) ((((*((long long *)(this + 48)) / *((long long *)(this + 56))) / (long long) ((int *)(this + 4))[80 / 4] + (long long) ((*((long long *)(this + 48)) / *((long long *)(this + 56))) % (long long) ((int *)(this + 4))[80 / 4] > (long long) ((((int *)(this + 8))[80 / 4] + (((int *)(this + 4))[80 / 4] - ((int *)(this + 4))[72 / 4])) % ((int *)(this + 4))[80 / 4]))) * *((long long *)(this + 56))) * (((*((long long *)(this + 40)) / *((long long *)(this + 56))) / (long long) ((int *)(this + 4))[100 / 4] + (long long) ((*((long long *)(this + 40)) / *((long long *)(this + 56))) % (long long) ((int *)(this + 4))[100 / 4] > (long long) ((((int *)(this + 8))[100 / 4] + (((int *)(this + 4))[100 / 4] - ((int *)this)[72 / 4])) % ((int *)(this + 4))[100 / 4]))) * *((long long *)(this + 56)))), 1.0000000000000000E+000,ptr_send,1,*((char * *)(this + 168)),1)
   354 |    free(recv_buf)
   355 |    return;
          } /* function */ 



Source        Source        Loop Id       Action / Information                                      
File          Line                                                                                  
----------    ----------    ----------    ----------------------------------------------------------
         0           313             2    Loop was not SIMD vectorized because it contains 
                                          unsupported loop structure.
         0           325             1    Loop was not SIMD vectorized because it contains 
                                          function calls.

   367 |  aggr200 DMatrix::slice(long, long, long, long)(char * this, long long firstrow, long long numrows, long long firstcol, long long numcols)
   370 |  {
            __es.__l@0 = 0;
            __es.__t@8 = &__fsm_tab;
            __es.__this@10 = this;
            __es.__i@18 = 0;
            guard___func__11 = 1;
   372 |    __builtin_strcpy(&pname,"slice ");
   373 |    if (!(*((char * *)(this + 192)) != NULL)) goto lab_2;
   374 |    __builtin_strcat(&pname,*((char * *)(this + 192)));
          lab_2:
   375 |    CTF_Timer::CTF_Timer(char const*)(&tmr,&pname);
            __es.__c4@3 = 1u;
   376 |    CTF_Timer::start()(&tmr)
   378 |    pvr = *((aggr92 *)(this + 72));
   379 |    if (0ll == firstrow % *((long long *)(this + 56))) goto lab_11;
            __assert_fail("firstrow % b == 0","dmatrix.cxx",379u,&__func__)
            return;
          lab_11:
   380 |    if (0ll == firstcol % *((long long *)(this + 56))) goto lab_19;
            __assert_fail("firstcol % b == 0","dmatrix.cxx",380u,&__func__)
            return;
          lab_19:
   381 |    pvr.rrow@0 = (int) (((long long) pvr.rrow@0 + firstrow / *((long long *)(this + 56))) % (long long) ((int *)(this + 4))[100 / 4]);
   382 |    pvr.rcol@4 = (int) (((long long) pvr.rcol@4 + firstcol / *((long long *)(this + 56))) % (long long) ((int *)(this + 4))[80 / 4]);
   383 |    $$PARM.this65 = &dfslc;
            $$PARM.nrow_66 = *((long long *)(this + 40)) - firstrow;
            $$PARM.ncol_67 = *((long long *)(this + 48)) - firstcol;
            $$PARM.b_68 = *((long long *)(this + 56));
            $$PARM.lda_6A = *((long long *)(this + 64));
            $$PARM.root_data_6B = *((char * *)(this + 176));
            $$PARM.data_6C = *((char * *)(this + 168));
            $$PARM.is_transp_6D = *((char *)(this + 184));
    61 |    *((long long *)($$PARM.this65 + 40)) = $$PARM.nrow_66;
    62 |    *((long long *)($$PARM.this65 + 48)) = $$PARM.ncol_67;
    64 |    *((long long *)($$PARM.this65 + 56)) = $$PARM.b_68;
    65 |    *((aggr92 *)($$PARM.this65 + 72)) = pvr;
    66 |    *((char *)($$PARM.this65 + 184)) = $$PARM.is_transp_6D;
    67 |    if (!($$PARM.lda_6A != 0ll)) goto lab_35;
    68 |    *((long long *)($$PARM.this65 + 64)) = $$PARM.lda_6A;
            goto lab_36;
          lab_35:
    70 |    $$PARM.this33 = $$PARM.this65;
   195 |    $$IRET25 = ((*((long long *)($$PARM.this33 + 40)) / *((long long *)($$PARM.this33 + 56))) / (long long) ((int *)($$PARM.this33 + 4))[100 / 4] + (long long) ((*((long long *)($$PARM.this33 + 40)) / *((long long *)($$PARM.this33 + 56))) % (long long) ((int *)($$PARM.this33 + 4))[100 / 4] > (long long) ((((int *)($$PARM.this33 + 8))[100 / 4] + (((int *)($$PARM.this33 + 4))[100 / 4] - ((int *)$$PARM.this33)[72 / 4])) % ((int *)($$PARM.this33 + 4))[100 / 4]))) * *((long long *)($$PARM.this33 + 56));
    70 |    $$RET8 = $$IRET25;
            *((long long *)($$PARM.this65 + 64)) = $$RET8;
          lab_36:
    71 |    if (!($$PARM.data_6C == NULL)) goto lab_38;
            $$PARM.this28 = $$PARM.this65;
   202 |    $$IRET1A = ((*((long long *)($$PARM.this28 + 48)) / *((long long *)($$PARM.this28 + 56))) / (long long) ((int *)($$PARM.this28 + 4))[80 / 4] + (long long) ((*((long long *)($$PARM.this28 + 48)) / *((long long *)($$PARM.this28 + 56))) % (long long) ((int *)($$PARM.this28 + 4))[80 / 4] > (long long) ((((int *)($$PARM.this28 + 8))[80 / 4] + (((int *)($$PARM.this28 + 4))[80 / 4] - ((int *)($$PARM.this28 + 4))[72 / 4])) % ((int *)($$PARM.this28 + 4))[80 / 4]))) * *((long long *)($$PARM.this28 + 56));
    71 |    $$RET9 = (unsigned long long) $$IRET1A;
            $$RETA = malloc(8ull * ((unsigned long long) *((long long *)($$PARM.this65 + 64)) * $$RET9));
    72 |    *((char * *)($$PARM.this65 + 168)) = $$RETA;
    73 |    *((char * *)($$PARM.this65 + 176)) = $$RETA;
    75 |    goto lab_40;
          lab_38:
    76 |    *((char * *)($$PARM.this65 + 168)) = $$PARM.data_6C;
    77 |    *((char * *)($$PARM.this65 + 176)) = $$PARM.root_data_6B;
    79 |  lab_40:
    80 |    *((char * *)($$PARM.this65 + 192)) = NULL;
    81 |    cdescinit(int*, int, int, int, int, int, int, int, int, int*)($$PARM.this65,(int) *((long long *)($$PARM.this65 + 40)),(int) *((long long *)($$PARM.this65 + 48)),(int) *((long long *)($$PARM.this65 + 56)),(int) *((long long *)($$PARM.this65 + 56)),((int *)$$PARM.this65)[72 / 4],((int *)($$PARM.this65 + 4))[72 / 4],((int *)($$PARM.this65 + 88))[72 / 4],(int) *((long long *)($$PARM.this65 + 64)),&info)
    86 |    $$IRET3F = $$PARM.this65;
   384 |    $$SFX9 = dfslc.data@a8;
            $$PARM.this3D = this;
   195 |    $$IRET2F = ((*((long long *)($$PARM.this3D + 40)) / *((long long *)($$PARM.this3D + 56))) / (long long) ((int *)($$PARM.this3D + 4))[100 / 4] + (long long) ((*((long long *)($$PARM.this3D + 40)) / *((long long *)($$PARM.this3D + 56))) % (long long) ((int *)($$PARM.this3D + 4))[100 / 4] > (long long) ((((int *)($$PARM.this3D + 8))[100 / 4] + (((int *)($$PARM.this3D + 4))[100 / 4] - ((int *)$$PARM.this3D)[72 / 4])) % ((int *)($$PARM.this3D + 4))[100 / 4]))) * *((long long *)($$PARM.this3D + 56));
   384 |    $$SFXA = $$IRET2F;
            $$PARM.this3E = &dfslc;
   195 |    $$IRET30 = ((*((long long *)($$PARM.this3E + 40)) / *((long long *)($$PARM.this3E + 56))) / (long long) ((int *)($$PARM.this3E + 4))[100 / 4] + (long long) ((*((long long *)($$PARM.this3E + 40)) / *((long long *)($$PARM.this3E + 56))) % (long long) ((int *)($$PARM.this3E + 4))[100 / 4] > (long long) ((((int *)($$PARM.this3E + 8))[100 / 4] + (((int *)($$PARM.this3E + 4))[100 / 4] - ((int *)$$PARM.this3E)[72 / 4])) % ((int *)($$PARM.this3E + 4))[100 / 4]))) * *((long long *)($$PARM.this3E + 56));
   384 |    $$RET1F = $$IRET30;
            dfslc.data@a8 = ((char *)$$SFX9  + ($$SFXA * 8ll - $$RET1F * 8ll));
   385 |    $$PARM.this2C = this;
   202 |    $$IRET1E = ((*((long long *)($$PARM.this2C + 48)) / *((long long *)($$PARM.this2C + 56))) / (long long) ((int *)($$PARM.this2C + 4))[80 / 4] + (long long) ((*((long long *)($$PARM.this2C + 48)) / *((long long *)($$PARM.this2C + 56))) % (long long) ((int *)($$PARM.this2C + 4))[80 / 4] > (long long) ((((int *)($$PARM.this2C + 8))[80 / 4] + (((int *)($$PARM.this2C + 4))[80 / 4] - ((int *)($$PARM.this2C + 4))[72 / 4])) % ((int *)($$PARM.this2C + 4))[80 / 4]))) * *((long long *)($$PARM.this2C + 56));
   385 |    $$SFXC = $$IRET1E;
            $$PARM.this27 = &dfslc;
   202 |    $$IRET19 = ((*((long long *)($$PARM.this27 + 48)) / *((long long *)($$PARM.this27 + 56))) / (long long) ((int *)($$PARM.this27 + 4))[80 / 4] + (long long) ((*((long long *)($$PARM.this27 + 48)) / *((long long *)($$PARM.this27 + 56))) % (long long) ((int *)($$PARM.this27 + 4))[80 / 4] > (long long) ((((int *)($$PARM.this27 + 8))[80 / 4] + (((int *)($$PARM.this27 + 4))[80 / 4] - ((int *)($$PARM.this27 + 4))[72 / 4])) % ((int *)($$PARM.this27 + 4))[80 / 4]))) * *((long long *)($$PARM.this27 + 56));
   385 |    $$RET20 = $$IRET19;
            dfslc.data@a8 = ((char *)$$SFX9  + (($$SFXC * 8ll - $$RET20 * 8ll) * *((long long *)(this + 64)) + ($$SFXA * 8ll - $$RET1F * 8ll)));
   386 |    $$PARM.this5C = &dslc;
            $$PARM.nrow_5D = numrows;
            $$PARM.ncol_5E = numcols;
            $$PARM.b_5F = *((long long *)(this + 56));
            $$PARM.lda_61 = *((long long *)(this + 64));
            $$PARM.root_data_62 = dfslc.root_data@b0;
            $$PARM.data_63 = ((char *)$$SFX9  + (($$SFXC * 8ll - $$RET20 * 8ll) * *((long long *)(this + 64)) + ($$SFXA * 8ll - $$RET1F * 8ll)));
            $$PARM.is_transp_64 = *((char *)(this + 184));
    61 |    *((long long *)($$PARM.this5C + 40)) = $$PARM.nrow_5D;
    62 |    *((long long *)($$PARM.this5C + 48)) = $$PARM.ncol_5E;
    64 |    *((long long *)($$PARM.this5C + 56)) = $$PARM.b_5F;
    65 |    *((aggr92 *)($$PARM.this5C + 72)) = pvr;
    66 |    *((char *)($$PARM.this5C + 184)) = $$PARM.is_transp_64;
    67 |    if (!($$PARM.lda_61 != 0ll)) goto lab_28;
    68 |    *((long long *)($$PARM.this5C + 64)) = $$PARM.lda_61;
            goto lab_29;
          lab_28:
    70 |    $$PARM.this33 = $$PARM.this5C;
   195 |    $$IRET25 = ((*((long long *)($$PARM.this33 + 40)) / *((long long *)($$PARM.this33 + 56))) / (long long) ((int *)($$PARM.this33 + 4))[100 / 4] + (long long) ((*((long long *)($$PARM.this33 + 40)) / *((long long *)($$PARM.this33 + 56))) % (long long) ((int *)($$PARM.this33 + 4))[100 / 4] > (long long) ((((int *)($$PARM.this33 + 8))[100 / 4] + (((int *)($$PARM.this33 + 4))[100 / 4] - ((int *)$$PARM.this33)[72 / 4])) % ((int *)($$PARM.this33 + 4))[100 / 4]))) * *((long long *)($$PARM.this33 + 56));
    70 |    $$RET8 = $$IRET25;
            *((long long *)($$PARM.this5C + 64)) = $$RET8;
          lab_29:
    71 |    if (!($$PARM.data_63 == NULL)) goto lab_31;
            $$PARM.this28 = $$PARM.this5C;
   202 |    $$IRET1A = ((*((long long *)($$PARM.this28 + 48)) / *((long long *)($$PARM.this28 + 56))) / (long long) ((int *)($$PARM.this28 + 4))[80 / 4] + (long long) ((*((long long *)($$PARM.this28 + 48)) / *((long long *)($$PARM.this28 + 56))) % (long long) ((int *)($$PARM.this28 + 4))[80 / 4] > (long long) ((((int *)($$PARM.this28 + 8))[80 / 4] + (((int *)($$PARM.this28 + 4))[80 / 4] - ((int *)($$PARM.this28 + 4))[72 / 4])) % ((int *)($$PARM.this28 + 4))[80 / 4]))) * *((long long *)($$PARM.this28 + 56));
    71 |    $$RET9 = (unsigned long long) $$IRET1A;
            $$RETA = malloc(8ull * ((unsigned long long) *((long long *)($$PARM.this5C + 64)) * $$RET9));
    72 |    *((char * *)($$PARM.this5C + 168)) = $$RETA;
    73 |    *((char * *)($$PARM.this5C + 176)) = $$RETA;
    75 |    goto lab_33;
          lab_31:
    76 |    *((char * *)($$PARM.this5C + 168)) = $$PARM.data_63;
    77 |    *((char * *)($$PARM.this5C + 176)) = $$PARM.root_data_62;
    79 |  lab_33:
    80 |    *((char * *)($$PARM.this5C + 192)) = NULL;
    81 |    cdescinit(int*, int, int, int, int, int, int, int, int, int*)($$PARM.this5C,(int) *((long long *)($$PARM.this5C + 40)),(int) *((long long *)($$PARM.this5C + 48)),(int) *((long long *)($$PARM.this5C + 56)),(int) *((long long *)($$PARM.this5C + 56)),((int *)$$PARM.this5C)[72 / 4],((int *)($$PARM.this5C + 4))[72 / 4],((int *)($$PARM.this5C + 88))[72 / 4],(int) *((long long *)($$PARM.this5C + 64)),&info)
    86 |    $$IRET3E = $$PARM.this5C;
   387 |    $$PARM.name_17 = *((char * *)(this + 192));
   124 |    if (!($$PARM.name_17 != NULL)) goto lab_22;
            $$RET10 = __builtin_strlen($$PARM.name_17);
            $$RET11 = malloc($$RET10 + 1ull);
   125 |    &dslc->(DMatrix).name@c0.rns79.$$99 = $$RET11;
   126 |    __builtin_strcpy($$RET11,$$PARM.name_17);
   127 |  lab_22:
   389 |    CTF_Timer::stop()(&tmr)
   390 |    __57 = dslc;
            __es.__c4@3 = 0u;
            CTF_Timer::~CTF_Timer()(&tmr);
            rstr = __57;
            return rstr;
   391 |  } /* function */ 


   396 |  void DMatrix::set_to_zero()(char * this)
          {
            __es.__l@0 = 0;
            __es.__t@8 = &__fsm_tab;
            __es.__this@10 = this;
            __es.__i@18 = 0;
   398 |    __builtin_strcpy(&pname,"set_to_zero ");
   399 |    if (!(*((char * *)(this + 192)) != NULL)) goto lab_1;
   400 |    __builtin_strcat(&pname,*((char * *)(this + 192)));
          lab_1:
   401 |    CTF_Timer::CTF_Timer(char const*)(&tmr,&pname);
            __es.__c4@3 = 1u;
   402 |    CTF_Timer::start()(&tmr)
   407 |    if (!(0ll < ((*((long long *)(this + 48)) / *((long long *)(this + 56))) / (long long) ((int *)(this + 4))[80 / 4] + (long long) ((*((long long *)(this + 48)) / *((long long *)(this + 56))) % (long long) ((int *)(this + 4))[80 / 4] > (long long) ((((int *)(this + 8))[80 / 4] + (((int *)(this + 4))[80 / 4] - ((int *)(this + 4))[72 / 4])) % ((int *)(this + 4))[80 / 4]))) * *((long long *)(this + 56)))) goto lab_5;
            if (!(0ll != 8ll * (((*((long long *)(this + 40)) / *((long long *)(this + 56))) / (long long) ((int *)(this + 4))[100 / 4] + (long long) ((*((long long *)(this + 40)) / *((long long *)(this + 56))) % (long long) ((int *)(this + 4))[100 / 4] > (long long) ((((int *)(this + 8))[100 / 4] + (((int *)(this + 4))[100 / 4] - ((int *)this)[72 / 4])) % ((int *)(this + 4))[100 / 4]))) * *((long long *)(this + 56))))) goto lab_28;
            if (!1) goto lab_27;
            $$CIV2 = 0ll;
            do {   /* id=1 guarded */ /* ~3 */ 
              /* region = 19 */
              /* bump-normalized */
   700 |      if (!1) goto lab_8;
   737 |      $$CIV1 = 0ll;
   700 |      do {   /* id=2 guarded */ /* ~6 */ 
                /* region = 18 */
                /* bump-normalized */
   702 |        ((double *)(*((char * *)(this + 168))))[*((long long *)(this + 64)) * $$CIV2 + $$CIV1] =  0.0000000000000000E+000;
   701 |        $$CIV1 = $$CIV1 + 1ll;
              } while ((unsigned long long) $$CIV1 < (unsigned long long) ((8ll * (((*((long long *)(this + 40)) / *((long long *)(this + 56))) / (long long) ((int *)(this + 4))[100 / 4] + (long long) ((*((long long *)(this + 40)) / *((long long *)(this + 56))) % (long long) ((int *)(this + 4))[100 / 4] > (long long) ((((int *)(this + 8))[100 / 4] + (((int *)(this + 4))[100 / 4] - ((int *)this)[72 / 4])) % ((int *)(this + 4))[100 / 4]))) * *((long long *)(this + 56)))) / 8ll));    /* ~6 */
            lab_8:
   407 |      $$CIV2 = $$CIV2 + 1ll;
            } while ((unsigned long long) $$CIV2 < (unsigned long long) (((*((long long *)(this + 48)) / *((long long *)(this + 56))) / (long long) ((int *)(this + 4))[80 / 4] + (long long) ((*((long long *)(this + 48)) / *((long long *)(this + 56))) % (long long) ((int *)(this + 4))[80 / 4] > (long long) ((((int *)(this + 8))[80 / 4] + (((int *)(this + 4))[80 / 4] - ((int *)(this + 4))[72 / 4])) % ((int *)(this + 4))[80 / 4]))) * *((long long *)(this + 56))));    /* ~3 */
          lab_27:
          lab_28:
          lab_5:
   410 |    CTF_Timer::stop()(&tmr)
   411 |    __es.__c4@3 = 0u;
            CTF_Timer::~CTF_Timer()(&tmr);
            return;
          } /* function */ 



Source        Source        Loop Id       Action / Information                                      
File          Line                                                                                  
----------    ----------    ----------    ----------------------------------------------------------
         0           407             1    Loop was not SIMD vectorized because the loop is not 
                                          the innermost loop.
        68           702                  Loop was not SIMD vectorized because it contains 
                                          memory references  with  non-vectorizable strides.
        68           702                  Loop was not SIMD vectorized because the floating 
                                          point operation is not  vectorizable under -qstrict.

   419 |  void DMatrix::daxpy(DMatrix, double)(char * this, aggr200 A, double alpha)
   420 |  {
            __es.__l@0 = 0;
            __es.__t@8 = &__fsm_tab;
            __es.__this@10 = this;
            __es.__i@18 = 0;
            guard___func__17 = 1;
   422 |    __builtin_strcpy(&pname,"daxpy ");
   423 |    if (!(*((char * *)(this + 192)) != NULL)) goto lab_2;
   424 |    __builtin_strcat(&pname,*((char * *)(this + 192)));
          lab_2:
   425 |    CTF_Timer::CTF_Timer(char const*)(&tmr,&pname);
            __es.__c4@3 = 1u;
   426 |    CTF_Timer::start()(&tmr)
   428 |    if (((*((long long *)(this + 40)) / *((long long *)(this + 56))) / (long long) ((int *)(this + 4))[100 / 4] + (long long) ((*((long long *)(this + 40)) / *((long long *)(this + 56))) % (long long) ((int *)(this + 4))[100 / 4] > (long long) ((((int *)(this + 8))[100 / 4] + (((int *)(this + 4))[100 / 4] - ((int *)this)[72 / 4])) % ((int *)(this + 4))[100 / 4]))) * *((long long *)(this + 56)) == ((&A->(DMatrix).nrow@28.rns87.$$116 / &A->(DMatrix).b@38.rns83.$$116) / (long long) ((int *)((char *)&A + 4))[100 / 4] + (long long) ((&A->(DMatrix).nrow@28.rns87.$$116 / &A->(DMatrix).b@38.rns83.$$116) % (long long) ((int *)((char *)&A + 4))[100 / 4] > (long long) ((((int *)((char *)&A + 8))[100 / 4] + (((int *)((char *)&A + 4))[100 / 4] - ((int *)&A)[72 / 4])) % ((int *)((char *)&A + 4))[100 / 4]))) * &A->(DMatrix).b@38.rns83.$$116) goto lab_7;
   126 |  lab_7:
   428 |    if (((*((long long *)(this + 40)) / *((long long *)(this + 56))) / (long long) ((int *)(this + 4))[100 / 4] + (long long) ((*((long long *)(this + 40)) / *((long long *)(this + 56))) % (long long) ((int *)(this + 4))[100 / 4] > (long long) ((((int *)(this + 8))[100 / 4] + (((int *)(this + 4))[100 / 4] - ((int *)this)[72 / 4])) % ((int *)(this + 4))[100 / 4]))) * *((long long *)(this + 56)) == ((&A->(DMatrix).nrow@28.rns87.$$118 / &A->(DMatrix).b@38.rns83.$$118) / (long long) ((int *)((char *)&A + 4))[100 / 4] + (long long) ((&A->(DMatrix).nrow@28.rns87.$$118 / &A->(DMatrix).b@38.rns83.$$118) % (long long) ((int *)((char *)&A + 4))[100 / 4] > (long long) ((((int *)((char *)&A + 8))[100 / 4] + (((int *)((char *)&A + 4))[100 / 4] - ((int *)&A)[72 / 4])) % ((int *)((char *)&A + 4))[100 / 4]))) * &A->(DMatrix).b@38.rns83.$$118) goto lab_11;
            __assert_fail("A.get_mynrow() == get_mynrow()","dmatrix.cxx",428u,&__func__)
            return;
          lab_11:
   429 |    if (((*((long long *)(this + 48)) / *((long long *)(this + 56))) / (long long) ((int *)(this + 4))[80 / 4] + (long long) ((*((long long *)(this + 48)) / *((long long *)(this + 56))) % (long long) ((int *)(this + 4))[80 / 4] > (long long) ((((int *)(this + 8))[80 / 4] + (((int *)(this + 4))[80 / 4] - ((int *)(this + 4))[72 / 4])) % ((int *)(this + 4))[80 / 4]))) * *((long long *)(this + 56)) == ((&A->(DMatrix).ncol@30.rns92.$$120 / &A->(DMatrix).b@38.rns88.$$120) / (long long) ((int *)((char *)&A + 4))[80 / 4] + (long long) ((&A->(DMatrix).ncol@30.rns92.$$120 / &A->(DMatrix).b@38.rns88.$$120) % (long long) ((int *)((char *)&A + 4))[80 / 4] > (long long) ((((int *)((char *)&A + 8))[80 / 4] + (((int *)((char *)&A + 4))[80 / 4] - ((int *)((char *)&A + 4))[72 / 4])) % ((int *)((char *)&A + 4))[80 / 4]))) * &A->(DMatrix).b@38.rns88.$$120) goto lab_15;
   126 |  lab_15:
   429 |    if (((*((long long *)(this + 48)) / *((long long *)(this + 56))) / (long long) ((int *)(this + 4))[80 / 4] + (long long) ((*((long long *)(this + 48)) / *((long long *)(this + 56))) % (long long) ((int *)(this + 4))[80 / 4] > (long long) ((((int *)(this + 8))[80 / 4] + (((int *)(this + 4))[80 / 4] - ((int *)(this + 4))[72 / 4])) % ((int *)(this + 4))[80 / 4]))) * *((long long *)(this + 56)) == ((&A->(DMatrix).ncol@30.rns92.$$122 / &A->(DMatrix).b@38.rns88.$$122) / (long long) ((int *)((char *)&A + 4))[80 / 4] + (long long) ((&A->(DMatrix).ncol@30.rns92.$$122 / &A->(DMatrix).b@38.rns88.$$122) % (long long) ((int *)((char *)&A + 4))[80 / 4] > (long long) ((((int *)((char *)&A + 8))[80 / 4] + (((int *)((char *)&A + 4))[80 / 4] - ((int *)((char *)&A + 4))[72 / 4])) % ((int *)((char *)&A + 4))[80 / 4]))) * &A->(DMatrix).b@38.rns88.$$122) goto lab_19;
            __assert_fail("A.get_myncol() == get_myncol()","dmatrix.cxx",429u,&__func__)
            return;
          lab_19:
   430 |    mnrow = ((*((long long *)(this + 40)) / *((long long *)(this + 56))) / (long long) ((int *)(this + 4))[100 / 4] + (long long) ((*((long long *)(this + 40)) / *((long long *)(this + 56))) % (long long) ((int *)(this + 4))[100 / 4] > (long long) ((((int *)(this + 8))[100 / 4] + (((int *)(this + 4))[100 / 4] - ((int *)this)[72 / 4])) % ((int *)(this + 4))[100 / 4]))) * *((long long *)(this + 56));
   431 |    mncol = ((*((long long *)(this + 48)) / *((long long *)(this + 56))) / (long long) ((int *)(this + 4))[80 / 4] + (long long) ((*((long long *)(this + 48)) / *((long long *)(this + 56))) % (long long) ((int *)(this + 4))[80 / 4] > (long long) ((((int *)(this + 8))[80 / 4] + (((int *)(this + 4))[80 / 4] - ((int *)(this + 4))[72 / 4])) % ((int *)(this + 4))[80 / 4]))) * *((long long *)(this + 56));
   432 |    lda_A = (int) A.lda@40;
   433 |    str_A = 1;
   434 |    ptr_A = &A->(DMatrix).data@a8.rns81.$$126;
   435 |    if (!(A.is_transp@b8 != 0u)) goto lab_20;
   436 |    lda_A = 1;
   437 |    str_A = (int) A.lda@40;
   438 |    ptr_A = malloc((unsigned long long) (8ll * (mnrow * mncol)));
   439 |    CTF_Timer::CTF_Timer(char const*)(&__t,"MPI_Sendrecv");
            __es.__c4@3 = 2u;
            CTF_Timer::start()(&__t)
            PMPI_Sendrecv(&A->(DMatrix).data@a8.rns81.$$126,(int) (mncol * mnrow),1275070475,((int *)(this + 8))[100 / 4] * ((int *)(this + 4))[80 / 4] + ((int *)(this + 8))[80 / 4],342,ptr_A,(int) (mncol * mnrow),1275070475,((int *)(this + 8))[100 / 4] * ((int *)(this + 4))[80 / 4] + ((int *)(this + 8))[80 / 4],342,((int *)this)[140 / 4],(char *) 1);
            CTF_Timer::stop()(&__t)
            __es.__c4@3 = 1u;
            CTF_Timer::~CTF_Timer()(&__t);
   443 |  lab_20:
   444 |    lda_B = (int) *((long long *)(this + 64));
   445 |    str_B = 1;
   446 |    ptr_B = *((char * *)(this + 168));
   447 |    if (!(*((char *)(this + 184)) != 0u)) goto lab_25;
   448 |    lda_B = 1;
   449 |    str_B = (int) *((long long *)(this + 64));
   450 |    ptr_B = malloc((unsigned long long) (8ll * (mnrow * mncol)));
   451 |    CTF_Timer::CTF_Timer(char const*)(&__t,"MPI_Sendrecv");
            __es.__c4@3 = 3u;
            CTF_Timer::start()(&__t)
            PMPI_Sendrecv(*((char * *)(this + 168)),(int) (mncol * mnrow),1275070475,((int *)(this + 4))[80 / 4] * ((int *)(this + 8))[100 / 4] + ((int *)(this + 8))[80 / 4],342,ptr_B,(int) (mncol * mnrow),1275070475,((int *)(this + 4))[80 / 4] * ((int *)(this + 8))[100 / 4] + ((int *)(this + 8))[80 / 4],342,((int *)this)[140 / 4],(char *) 1);
            CTF_Timer::stop()(&__t)
            __es.__c4@3 = 1u;
            CTF_Timer::~CTF_Timer()(&__t);
   454 |  lab_25:
   456 |    if (!(0ll < mncol)) goto lab_32;
            $$CIV3 = 0ll;
            do {   /* id=1 guarded */ /* ~30 */ 
              /* region = 27 */
              /* bump-normalized */
   457 |      cdaxpy(int, double, double const*, int, double*, int)((int) mnrow,alpha,((char *)ptr_A  + 8ll * ($$CIV3 * (long long) lda_A)),str_A,((char *)ptr_B  + 8ll * ($$CIV3 * (long long) lda_B)),str_B)
   456 |      $$CIV3 = $$CIV3 + 1ll;
            } while ((unsigned long long) $$CIV3 < (unsigned long long) mncol);    /* ~30 */
          lab_32:
   459 |    if (!(A.is_transp@b8 != 0u)) goto lab_33;
   460 |    free(ptr_A)
          lab_33:
   461 |    if (!(*((char *)(this + 184)) != 0u)) goto lab_35;
   462 |    free(ptr_B)
          lab_35:
   463 |    CTF_Timer::stop()(&tmr)
   464 |    __es.__c4@3 = 0u;
            CTF_Timer::~CTF_Timer()(&tmr);
            return;
          } /* function */ 



Source        Source        Loop Id       Action / Information                                      
File          Line                                                                                  
----------    ----------    ----------    ----------------------------------------------------------
         0           456             1    Loop was not SIMD vectorized because it contains 
                                          function calls.

   470 |  aggr200 DMatrix::get_contig()(char * this)
          {
   471 |    if (!(*((long long *)(this + 64)) == ((*((long long *)(this + 40)) / *((long long *)(this + 56))) / (long long) ((int *)(this + 4))[100 / 4] + (long long) ((*((long long *)(this + 40)) / *((long long *)(this + 56))) % (long long) ((int *)(this + 4))[100 / 4] > (long long) ((((int *)(this + 8))[100 / 4] + (((int *)(this + 4))[100 / 4] - ((int *)this)[72 / 4])) % ((int *)(this + 4))[100 / 4]))) * *((long long *)(this + 56)))) goto lab_1;
   490 |    $$PARM.lda_7C = ((*((long long *)(this + 40)) / *((long long *)(this + 56))) / (long long) ((int *)(this + 4))[100 / 4] + (long long) ((*((long long *)(this + 40)) / *((long long *)(this + 56))) % (long long) ((int *)(this + 4))[100 / 4] > (long long) ((((int *)(this + 8))[100 / 4] + (((int *)(this + 4))[100 / 4] - ((int *)this)[72 / 4])) % ((int *)(this + 4))[100 / 4]))) * *((long long *)(this + 56));
    61 |    &ctg->(DMatrix).nrow@28.rns48.$$160$$156 = *((long long *)(this + 40));
    62 |    &ctg->(DMatrix).ncol@30.rns49.$$160$$156 = *((long long *)(this + 48));
    64 |    &ctg->(DMatrix).b@38.rns50.$$160$$156 = *((long long *)(this + 56));
    65 |    &ctg->(DMatrix).pv@48.rns51.$$160$$156 = ((aggr92 *)((char *)this  + 72))->(pview).rns45.$$160$$156;
    66 |    &ctg->(DMatrix).is_transp@b8.rns52.$$160$$156 = *((char *)(this + 184));
    67 |    if (!($$PARM.lda_7C != 0ll)) goto lab_18;
    68 |    &ctg->(DMatrix).lda@40.rns53.$$160$$156 = $$PARM.lda_7C;
            goto lab_19;
          lab_18:
    70 |    &ctg->(DMatrix).lda@40.rns53.$$160$$156 = ((&ctg->(DMatrix).nrow@28.rns87.$$14$$160$$156 / &ctg->(DMatrix).b@38.rns83.$$14$$160$$156) / (long long) ((int *)((char *)&ctg + 4))[100 / 4] + (long long) ((&ctg->(DMatrix).nrow@28.rns87.$$14$$160$$156 / &ctg->(DMatrix).b@38.rns83.$$14$$160$$156) % (long long) ((int *)((char *)&ctg + 4))[100 / 4] > (long long) ((((int *)((char *)&ctg + 8))[100 / 4] + (((int *)((char *)&ctg + 4))[100 / 4] - ((int *)&ctg)[72 / 4])) % ((int *)((char *)&ctg + 4))[100 / 4]))) * &ctg->(DMatrix).b@38.rns83.$$14$$160$$156;
          lab_19:
    71 |    $$RETA = malloc((unsigned long long) (8ll * (&ctg->(DMatrix).lda@40.rns53.$$160$$156 * (&ctg->(DMatrix).b@38.rns88.$$16$$160$$156 * ((&ctg->(DMatrix).ncol@30.rns92.$$16$$160$$156 / &ctg->(DMatrix).b@38.rns88.$$16$$160$$156) / (long long) ((int *)((char *)&ctg + 4))[80 / 4] + (long long) ((&ctg->(DMatrix).ncol@30.rns92.$$16$$160$$156 / &ctg->(DMatrix).b@38.rns88.$$16$$160$$156) % (long long) ((int *)((char *)&ctg + 4))[80 / 4] > (long long) ((((int *)((char *)&ctg + 8))[80 / 4] + (((int *)((char *)&ctg + 4))[80 / 4] - ((int *)((char *)&ctg + 4))[72 / 4])) % ((int *)((char *)&ctg + 4))[80 / 4])))))));
    72 |    &ctg->(DMatrix).data@a8.rns54.$$160$$156 = $$RETA;
    73 |    &ctg->(DMatrix).root_data@b0.rns55.$$160$$156 = $$RETA;
    80 |    &ctg->(DMatrix).name@c0.rns56.$$160$$156 = NULL;
    81 |    cdescinit(int*, int, int, int, int, int, int, int, int, int*)(&ctg,(int) &ctg->(DMatrix).nrow@28.rns48.$$160$$156,(int) &ctg->(DMatrix).ncol@30.rns49.$$160$$156,(int) &ctg->(DMatrix).b@38.rns50.$$160$$156,(int) &ctg->(DMatrix).b@38.rns50.$$160$$156,((int *)&ctg)[72 / 4],((int *)((char *)&ctg + 4))[72 / 4],((int *)((char *)&ctg + 88))[72 / 4],(int) &ctg->(DMatrix).lda@40.rns53.$$160$$156,&info)
   491 |    $$PARM.name_1B = *((char * *)(this + 192));
   124 |    if (!(*((char * *)(this + 192)) != NULL)) goto lab_25;
            $$RET10 = __builtin_strlen(*((char * *)(this + 192)));
            $$RET11 = malloc($$RET10 + 1ull);
   125 |    &ctg->(DMatrix).name@c0.rns79.$$161$$156 = $$RET11;
   126 |    __builtin_strcpy($$RET11,$$PARM.name_1B);
   127 |  lab_25:
   492 |    $$IRET44 = ctg;
   473 |    ctg = &$$IRET44->(DMatrix).rns204.;
   474 |    DMatrix::set_to_zero()(&ctg)
   475 |    DMatrix::daxpy(DMatrix, double)(&ctg,*((aggr200 *)this), 1.0000000000000000E+000)
   476 |    rstr = ctg;
            return rstr;
   477 |  lab_1:
   478 |    $$PARM.lda_4F = ((*((long long *)(this + 40)) / *((long long *)(this + 56))) / (long long) ((int *)(this + 4))[100 / 4] + (long long) ((*((long long *)(this + 40)) / *((long long *)(this + 56))) % (long long) ((int *)(this + 4))[100 / 4] > (long long) ((((int *)(this + 8))[100 / 4] + (((int *)(this + 4))[100 / 4] - ((int *)this)[72 / 4])) % ((int *)(this + 4))[100 / 4]))) * *((long long *)(this + 56));
    61 |    &ctg->(DMatrix).nrow@28.rns48.$$150 = *((long long *)(this + 40));
    62 |    &ctg->(DMatrix).ncol@30.rns49.$$150 = *((long long *)(this + 48));
    64 |    &ctg->(DMatrix).b@38.rns50.$$150 = *((long long *)(this + 56));
    65 |    &ctg->(DMatrix).pv@48.rns51.$$150 = ((aggr92 *)((char *)this  + 72))->(pview).rns45.$$150;
    66 |    &ctg->(DMatrix).is_transp@b8.rns52.$$150 = *((char *)(this + 184));
    67 |    if (!($$PARM.lda_4F != 0ll)) goto lab_10;
    68 |    &ctg->(DMatrix).lda@40.rns53.$$150 = $$PARM.lda_4F;
            goto lab_11;
          lab_10:
    70 |    &ctg->(DMatrix).lda@40.rns53.$$150 = ((&ctg->(DMatrix).nrow@28.rns87.$$14$$150 / &ctg->(DMatrix).b@38.rns83.$$14$$150) / (long long) ((int *)((char *)&ctg + 4))[100 / 4] + (long long) ((&ctg->(DMatrix).nrow@28.rns87.$$14$$150 / &ctg->(DMatrix).b@38.rns83.$$14$$150) % (long long) ((int *)((char *)&ctg + 4))[100 / 4] > (long long) ((((int *)((char *)&ctg + 8))[100 / 4] + (((int *)((char *)&ctg + 4))[100 / 4] - ((int *)&ctg)[72 / 4])) % ((int *)((char *)&ctg + 4))[100 / 4]))) * &ctg->(DMatrix).b@38.rns83.$$14$$150;
          lab_11:
    71 |    $$RETA = malloc((unsigned long long) (8ll * (&ctg->(DMatrix).lda@40.rns53.$$150 * (&ctg->(DMatrix).b@38.rns88.$$16$$150 * ((&ctg->(DMatrix).ncol@30.rns92.$$16$$150 / &ctg->(DMatrix).b@38.rns88.$$16$$150) / (long long) ((int *)((char *)&ctg + 4))[80 / 4] + (long long) ((&ctg->(DMatrix).ncol@30.rns92.$$16$$150 / &ctg->(DMatrix).b@38.rns88.$$16$$150) % (long long) ((int *)((char *)&ctg + 4))[80 / 4] > (long long) ((((int *)((char *)&ctg + 8))[80 / 4] + (((int *)((char *)&ctg + 4))[80 / 4] - ((int *)((char *)&ctg + 4))[72 / 4])) % ((int *)((char *)&ctg + 4))[80 / 4])))))));
    72 |    &ctg->(DMatrix).data@a8.rns54.$$150 = $$RETA;
    73 |    &ctg->(DMatrix).root_data@b0.rns55.$$150 = $$RETA;
    80 |    &ctg->(DMatrix).name@c0.rns56.$$150 = NULL;
    81 |    cdescinit(int*, int, int, int, int, int, int, int, int, int*)(&ctg,(int) &ctg->(DMatrix).nrow@28.rns48.$$150,(int) &ctg->(DMatrix).ncol@30.rns49.$$150,(int) &ctg->(DMatrix).b@38.rns50.$$150,(int) &ctg->(DMatrix).b@38.rns50.$$150,((int *)&ctg)[72 / 4],((int *)((char *)&ctg + 4))[72 / 4],((int *)((char *)&ctg + 88))[72 / 4],(int) &ctg->(DMatrix).lda@40.rns53.$$150,&info)
   480 |    $$PARM.nrowAA = (int) (((*((long long *)(this + 40)) / *((long long *)(this + 56))) / (long long) ((int *)(this + 4))[100 / 4] + (long long) ((*((long long *)(this + 40)) / *((long long *)(this + 56))) % (long long) ((int *)(this + 4))[100 / 4] > (long long) ((((int *)(this + 8))[100 / 4] + (((int *)(this + 4))[100 / 4] - ((int *)this)[72 / 4])) % ((int *)(this + 4))[100 / 4]))) * *((long long *)(this + 56)));
            $$PARM.ncolAB = (int) (((*((long long *)(this + 48)) / *((long long *)(this + 56))) / (long long) ((int *)(this + 4))[80 / 4] + (long long) ((*((long long *)(this + 48)) / *((long long *)(this + 56))) % (long long) ((int *)(this + 4))[80 / 4] > (long long) ((((int *)(this + 8))[80 / 4] + (((int *)(this + 4))[80 / 4] - ((int *)(this + 4))[72 / 4])) % ((int *)(this + 4))[80 / 4]))) * *((long long *)(this + 56)));
            $$PARM.lda_AAC = (int) *((long long *)(this + 64));
            $$PARM.lda_BAD = (int) (((*((long long *)(this + 40)) / *((long long *)(this + 56))) / (long long) ((int *)(this + 4))[100 / 4] + (long long) ((*((long long *)(this + 40)) / *((long long *)(this + 56))) % (long long) ((int *)(this + 4))[100 / 4] > (long long) ((((int *)(this + 8))[100 / 4] + (((int *)(this + 4))[100 / 4] - ((int *)this)[72 / 4])) % ((int *)(this + 4))[100 / 4]))) * *((long long *)(this + 56)));
            $$PARM.AAE = *((char * *)(this + 168));
            $$PARM.BAF = &ctg->(DMatrix).data@a8.rns81.$$154;
   463 |    if (!($$PARM.nrowAA == (int) *((long long *)(this + 64)))) goto lab_28;
            if (!($$PARM.lda_BAD == $$PARM.nrowAA)) goto lab_28;
   464 |    __builtin_memcpy(&ctg->(DMatrix).data@a8.rns81.$$154,*((char * *)(this + 168)),(unsigned long long) ($$PARM.ncolAB * $$PARM.nrowAA) * 8ull);
   465 |    goto lab_29;
          lab_28:
   467 |    if (!(0 < $$PARM.ncolAB)) goto lab_30;
            $$CIV16 = 0ll;
            do {   /* id=1 guarded */ /* ~31 */ 
              /* region = 22 */
              /* bump-normalized */
   468 |      __builtin_memcpy(((char *)$$PARM.BAF  + ((long long) $$PARM.lda_BAD * $$CIV16) * 8ll),((char *)$$PARM.AAE  + ((long long) $$PARM.lda_AAC * $$CIV16) * 8ll),(unsigned long long) $$PARM.nrowAA * 8ull);
   467 |      $$CIV16 = $$CIV16 + 1ll;
            } while ((unsigned long long) $$CIV16 < (unsigned long long) ((long long) $$PARM.ncolAB));    /* ~31 */
          lab_30:
   470 |  lab_29:
   481 |    rstr = ctg;
            return rstr;
   483 |  } /* function */ 



Source        Source        Loop Id       Action / Information                                      
File          Line                                                                                  
----------    ----------    ----------    ----------------------------------------------------------
       114           467             1    Loop was not SIMD vectorized because it contains 
                                          function calls.

   489 |  aggr200 DMatrix::clone()(DMatrix *this)
          {
   490 |    $$SFX19 = *((long long *)((char *)this + 40));
            $$SFX1A = *((long long *)((char *)this + 48));
            $$SFX1B = *((long long *)((char *)this + 56));
            $$PARM.this44 = this;
   195 |    $$IRET36 = ((*((long long *)($$PARM.this44 + 40)) / *((long long *)($$PARM.this44 + 56))) / (long long) ((int *)($$PARM.this44 + 4))[100 / 4] + (long long) ((*((long long *)($$PARM.this44 + 40)) / *((long long *)($$PARM.this44 + 56))) % (long long) ((int *)($$PARM.this44 + 4))[100 / 4] > (long long) ((((int *)($$PARM.this44 + 8))[100 / 4] + (((int *)($$PARM.this44 + 4))[100 / 4] - ((int *)$$PARM.this44)[72 / 4])) % ((int *)($$PARM.this44 + 4))[100 / 4]))) * *((long long *)($$PARM.this44 + 56));
   490 |    $$RET29 = $$IRET36;
            $$PARM.this77 = &ctg;
            $$PARM.nrow_78 = $$SFX19;
            $$PARM.ncol_79 = $$SFX1A;
            $$PARM.b_7A = $$SFX1B;
            $$PARM.pv_7B = (this + 72);
            $$PARM.lda_7C = $$RET29;
            $$PARM.root_data_7D = NULL;
            $$PARM.data_7E = NULL;
            $$PARM.is_transp_7F = *((char *)((char *)this + 184));
    61 |    *((long long *)($$PARM.this77 + 40)) = $$PARM.nrow_78;
    62 |    *((long long *)($$PARM.this77 + 48)) = $$PARM.ncol_79;
    64 |    *((long long *)($$PARM.this77 + 56)) = $$PARM.b_7A;
    65 |    *((aggr92 *)($$PARM.this77 + 72)) = *$$PARM.pv_7B;
    66 |    *((char *)($$PARM.this77 + 184)) = $$PARM.is_transp_7F;
    67 |    if (!($$PARM.lda_7C != 0ll)) goto lab_4;
    68 |    *((long long *)($$PARM.this77 + 64)) = $$PARM.lda_7C;
            goto lab_5;
          lab_4:
    70 |    $$PARM.this33 = $$PARM.this77;
   195 |    $$IRET25 = ((*((long long *)($$PARM.this33 + 40)) / *((long long *)($$PARM.this33 + 56))) / (long long) ((int *)($$PARM.this33 + 4))[100 / 4] + (long long) ((*((long long *)($$PARM.this33 + 40)) / *((long long *)($$PARM.this33 + 56))) % (long long) ((int *)($$PARM.this33 + 4))[100 / 4] > (long long) ((((int *)($$PARM.this33 + 8))[100 / 4] + (((int *)($$PARM.this33 + 4))[100 / 4] - ((int *)$$PARM.this33)[72 / 4])) % ((int *)($$PARM.this33 + 4))[100 / 4]))) * *((long long *)($$PARM.this33 + 56));
    70 |    $$RET8 = $$IRET25;
            *((long long *)($$PARM.this77 + 64)) = $$RET8;
          lab_5:
    71 |    if (!($$PARM.data_7E == NULL)) goto lab_7;
            $$PARM.this28 = $$PARM.this77;
   202 |    $$IRET1A = ((*((long long *)($$PARM.this28 + 48)) / *((long long *)($$PARM.this28 + 56))) / (long long) ((int *)($$PARM.this28 + 4))[80 / 4] + (long long) ((*((long long *)($$PARM.this28 + 48)) / *((long long *)($$PARM.this28 + 56))) % (long long) ((int *)($$PARM.this28 + 4))[80 / 4] > (long long) ((((int *)($$PARM.this28 + 8))[80 / 4] + (((int *)($$PARM.this28 + 4))[80 / 4] - ((int *)($$PARM.this28 + 4))[72 / 4])) % ((int *)($$PARM.this28 + 4))[80 / 4]))) * *((long long *)($$PARM.this28 + 56));
    71 |    $$RET9 = (unsigned long long) $$IRET1A;
            $$RETA = malloc(8ull * ((unsigned long long) *((long long *)($$PARM.this77 + 64)) * $$RET9));
    72 |    *((char * *)($$PARM.this77 + 168)) = $$RETA;
    73 |    *((char * *)($$PARM.this77 + 176)) = $$RETA;
    75 |    goto lab_9;
          lab_7:
    76 |    *((char * *)($$PARM.this77 + 168)) = $$PARM.data_7E;
    77 |    *((char * *)($$PARM.this77 + 176)) = $$PARM.root_data_7D;
    79 |  lab_9:
    80 |    *((char * *)($$PARM.this77 + 192)) = NULL;
    81 |    cdescinit(int*, int, int, int, int, int, int, int, int, int*)($$PARM.this77,(int) *((long long *)($$PARM.this77 + 40)),(int) *((long long *)($$PARM.this77 + 48)),(int) *((long long *)($$PARM.this77 + 56)),(int) *((long long *)($$PARM.this77 + 56)),((int *)$$PARM.this77)[72 / 4],((int *)($$PARM.this77 + 4))[72 / 4],((int *)($$PARM.this77 + 88))[72 / 4],(int) *((long long *)($$PARM.this77 + 64)),&info)
    86 |    $$IRET41 = $$PARM.this77;
   491 |    $$PARM.name_1B = *((char * *)((char *)this + 192));
   124 |    if (!($$PARM.name_1B != NULL)) goto lab_1;
            $$RET10 = __builtin_strlen($$PARM.name_1B);
            $$RET11 = malloc($$RET10 + 1ull);
   125 |    &ctg->(DMatrix).name@c0.rns79.$$161 = $$RET11;
   126 |    __builtin_strcpy($$RET11,$$PARM.name_1B);
   127 |  lab_1:
   492 |    rstr = ctg;
            return rstr;
   493 |  } /* function */ 


   499 |  aggr200 DMatrix::scatter_rows(pview_3d const*)(char * this, char * pv3d)
          {
            __es.__l@0 = 0;
            __es.__t@8 = &__fsm_tab;
            __es.__this@10 = this;
            __es.__i@18 = 0;
   500 |    mncol = ((*((long long *)(this + 48)) / *((long long *)(this + 56))) / (long long) ((int *)(this + 4))[80 / 4] + (long long) ((*((long long *)(this + 48)) / *((long long *)(this + 56))) % (long long) ((int *)(this + 4))[80 / 4] > (long long) ((((int *)(this + 8))[80 / 4] + (((int *)(this + 4))[80 / 4] - ((int *)(this + 4))[72 / 4])) % ((int *)(this + 4))[80 / 4]))) * *((long long *)(this + 56));
   502 |    CTF_Timer::CTF_Timer(char const*)(&__t,"MPI_Barrier");
            __es.__c4@3 = 1u;
            CTF_Timer::start()(&__t)
            PMPI_Barrier(((int *)pv3d)[204 / 4]);
            CTF_Timer::stop()(&__t)
            __es.__c4@3 = 0u;
            CTF_Timer::~CTF_Timer()(&__t);
    61 |    &drect->(DMatrix).nrow@28.rns48.$$168 = *((long long *)(this + 40));
    62 |    &drect->(DMatrix).ncol@30.rns49.$$168 = *((long long *)(this + 48));
    64 |    &drect->(DMatrix).b@38.rns50.$$168 = *((long long *)(this + 56));
    65 |    &drect->(DMatrix).pv@48.rns51.$$168 = *((aggr92 *)pv3d);
    66 |    &drect->(DMatrix).is_transp@b8.rns52.$$168 = 0u;
    70 |    &drect->(DMatrix).lda@40.rns53.$$168 = ((&drect->(DMatrix).nrow@28.rns87.$$14$$168 / &drect->(DMatrix).b@38.rns83.$$14$$168) / (long long) ((int *)((char *)&drect + 4))[100 / 4] + (long long) ((&drect->(DMatrix).nrow@28.rns87.$$14$$168 / &drect->(DMatrix).b@38.rns83.$$14$$168) % (long long) ((int *)((char *)&drect + 4))[100 / 4] > (long long) ((((int *)((char *)&drect + 8))[100 / 4] + (((int *)((char *)&drect + 4))[100 / 4] - ((int *)&drect)[72 / 4])) % ((int *)((char *)&drect + 4))[100 / 4]))) * &drect->(DMatrix).b@38.rns83.$$14$$168;
    71 |    $$RETA = malloc((unsigned long long) (8ll * (&drect->(DMatrix).lda@40.rns53.$$168 * (&drect->(DMatrix).b@38.rns88.$$16$$168 * ((&drect->(DMatrix).ncol@30.rns92.$$16$$168 / &drect->(DMatrix).b@38.rns88.$$16$$168) / (long long) ((int *)((char *)&drect + 4))[80 / 4] + (long long) ((&drect->(DMatrix).ncol@30.rns92.$$16$$168 / &drect->(DMatrix).b@38.rns88.$$16$$168) % (long long) ((int *)((char *)&drect + 4))[80 / 4] > (long long) ((((int *)((char *)&drect + 8))[80 / 4] + (((int *)((char *)&drect + 4))[80 / 4] - ((int *)((char *)&drect + 4))[72 / 4])) % ((int *)((char *)&drect + 4))[80 / 4])))))));
    72 |    &drect->(DMatrix).data@a8.rns54.$$168 = $$RETA;
    73 |    &drect->(DMatrix).root_data@b0.rns55.$$168 = $$RETA;
    80 |    &drect->(DMatrix).name@c0.rns56.$$168 = NULL;
    81 |    cdescinit(int*, int, int, int, int, int, int, int, int, int*)(&drect,(int) &drect->(DMatrix).nrow@28.rns48.$$168,(int) &drect->(DMatrix).ncol@30.rns49.$$168,(int) &drect->(DMatrix).b@38.rns50.$$168,(int) &drect->(DMatrix).b@38.rns50.$$168,((int *)&drect)[72 / 4],((int *)((char *)&drect + 4))[72 / 4],((int *)((char *)&drect + 88))[72 / 4],(int) &drect->(DMatrix).lda@40.rns53.$$168,&info)
   504 |    DMatrix::set_to_zero()(&drect)
   506 |    CTF_Timer::CTF_Timer(char const*)(&__t,"MPI_Barrier");
            __es.__c4@3 = 2u;
            CTF_Timer::start()(&__t)
            PMPI_Barrier(((int *)pv3d)[204 / 4]);
            CTF_Timer::stop()(&__t)
            __es.__c4@3 = 0u;
            CTF_Timer::~CTF_Timer()(&__t);
   507 |    CTF_Timer::CTF_Timer(char const*)(&__t,"MPI_Barrier");
            __es.__c4@3 = 3u;
            CTF_Timer::start()(&__t)
            PMPI_Barrier(((int *)pv3d)[68 / 4]);
            CTF_Timer::stop()(&__t)
            __es.__c4@3 = 0u;
            CTF_Timer::~CTF_Timer()(&__t);
   509 |    printf("allgather clyr rank %d my rank %d/n",((int *)(pv3d + 8))[184 / 4],((int *)(pv3d + 8))[204 / 4]);
   510 |    $$rmnrow.nat.0 = ((&drect->(DMatrix).nrow@28.rns87.$$182 / &drect->(DMatrix).b@38.rns83.$$182) / (long long) ((int *)((char *)&drect + 4))[100 / 4] + (long long) ((&drect->(DMatrix).nrow@28.rns87.$$182 / &drect->(DMatrix).b@38.rns83.$$182) % (long long) ((int *)((char *)&drect + 4))[100 / 4] > (long long) ((((int *)((char *)&drect + 8))[100 / 4] + (((int *)((char *)&drect + 4))[100 / 4] - ((int *)&drect)[72 / 4])) % ((int *)((char *)&drect + 4))[100 / 4]))) * &drect->(DMatrix).b@38.rns83.$$182;
   511 |    nlrows = (SNEW  (unsigned long long) ((int *)(pv3d + 4))[184 / 4] * 8ull);
   512 |    CTF_Timer::CTF_Timer(char const*)(&__t,"MPI_Allgather");
            __es.__c4@3 = 4u;
            CTF_Timer::start()(&__t)
            rmnrow = $$rmnrow.nat.0;
            PMPI_Allgather(&rmnrow,1,1275070522,nlrows,1,1275070522,((int *)pv3d)[184 / 4]);
            CTF_Timer::stop()(&__t)
            __es.__c4@3 = 0u;
            CTF_Timer::~CTF_Timer()(&__t);
   513 |    printf("done allgather clyr rank %d/n",((int *)(pv3d + 8))[184 / 4]);
   514 |    pfx = 0;
   515 |    if (!(0 < ((int *)(pv3d + 8))[184 / 4])) goto lab_15;
            $$CIV4 = 0ll;
            do {   /* id=1 guarded */ /* ~13 */ 
              /* region = 15 */
              /* bump-normalized */
              /* independent */
   516 |      pfx = (int) ((long long) pfx + nlrows[$$CIV4]);
   515 |      $$CIV4 = $$CIV4 + 1ll;
            } while ((unsigned long long) $$CIV4 < (unsigned long long) ((long long) ((int *)(pv3d + 8))[184 / 4]));    /* ~13 */
          lab_15:
   518 |    $$PARM.nrowB0 = (int) rmnrow;
            $$PARM.lda_AB2 = (int) *((long long *)(this + 64));
            $$PARM.lda_BB3 = (int) rmnrow;
            $$PARM.AB4 = ((char *)*((char * *)(this + 168))  + (long long) pfx * 8ll);
            $$PARM.BB5 = drect.data@a8;
   463 |    if (!((int) rmnrow == (int) *((long long *)(this + 64)))) goto lab_26;
   464 |    __builtin_memcpy(drect.data@a8,((char *)*((char * *)(this + 168))  + (long long) pfx * 8ll),(unsigned long long) ((int) mncol * (int) rmnrow) * 8ull);
   465 |    goto lab_27;
          lab_26:
   467 |    if (!(0 < (int) mncol)) goto lab_28;
            $$CIV16 = 0ll;
            do {   /* id=2 guarded */ /* ~29 */ 
              /* region = 16 */
              /* bump-normalized */
   468 |      __builtin_memcpy(((char *)$$PARM.BB5  + ((long long) $$PARM.lda_BB3 * $$CIV16) * 8ll),((char *)$$PARM.AB4  + ((long long) $$PARM.lda_AB2 * $$CIV16) * 8ll),(unsigned long long) $$PARM.nrowB0 * 8ull);
   467 |      $$CIV16 = $$CIV16 + 1ll;
            } while ((unsigned long long) $$CIV16 < (unsigned long long) ((long long) ((int) mncol)));    /* ~29 */
          lab_28:
   470 |  lab_27:
   519 |    rstr = drect;
            return rstr;
   520 |  } /* function */ 



Source        Source        Loop Id       Action / Information                                      
File          Line                                                                                  
----------    ----------    ----------    ----------------------------------------------------------
         0           515             1    Loop was not SIMD vectorized because it contains 
                                          non-vectorizable reductions.
         0           516                  Loop was not SIMD vectorized because it contains 
                                          operation in (long long) pfx + 
                                          nlrows->(long[@82]).rns229.[$$CIV4] which is not  
                                          suitable for SIMD vectorization.
         0           516                  Loop was not SIMD vectorized because it contains 
                                          unsupported vector data types.
       114           467             2    Loop was not SIMD vectorized because it contains 
                                          function calls.

   527 |  aggr200 DMatrix::foldcols(long)(char * this, long long factor)
          {
            __es.__l@0 = 0;
            __es.__t@8 = &__fsm_tab;
            __es.__this@10 = this;
            __es.__i@18 = 0;
   529 |    __builtin_strcpy(&pname,"foldcols ");
   530 |    if (!(*((char * *)(this + 192)) != NULL)) goto lab_1;
   531 |    __builtin_strcat(&pname,*((char * *)(this + 192)));
          lab_1:
   532 |    CTF_Timer::CTF_Timer(char const*)(&tmr,&pname);
            __es.__c4@3 = 1u;
   533 |    CTF_Timer::start()(&tmr)
   536 |    mnrow = ((*((long long *)(this + 40)) / *((long long *)(this + 56))) / (long long) ((int *)(this + 4))[100 / 4] + (long long) ((*((long long *)(this + 40)) / *((long long *)(this + 56))) % (long long) ((int *)(this + 4))[100 / 4] > (long long) ((((int *)(this + 8))[100 / 4] + (((int *)(this + 4))[100 / 4] - ((int *)this)[72 / 4])) % ((int *)(this + 4))[100 / 4]))) * *((long long *)(this + 56));
   537 |    mncol = ((*((long long *)(this + 48)) / *((long long *)(this + 56))) / (long long) ((int *)(this + 4))[80 / 4] + (long long) ((*((long long *)(this + 48)) / *((long long *)(this + 56))) % (long long) ((int *)(this + 4))[80 / 4] > (long long) ((((int *)(this + 8))[80 / 4] + (((int *)(this + 4))[80 / 4] - ((int *)(this + 4))[72 / 4])) % ((int *)(this + 4))[80 / 4]))) * *((long long *)(this + 56));
   541 |    ctg = DMatrix::get_contig()(this)->(DMatrix).rns246.;
   542 |    if (!(0ll < mnrow / (*((long long *)(this + 56)) * factor))) goto lab_5;
            j = 0ll;
            if (!(0ll < factor)) goto lab_36;
            if (!(0 < (int) mncol)) goto lab_26;
            if (!1) goto lab_25;
            do {   /* id=1 guarded */ /* ~3 */ 
              /* region = 60 */
   543 |      if (!1) goto lab_8;
              $$CIV5 = 0ll;
              do {   /* id=2 guarded */ /* ~6 */ 
                /* region = 59 */
                /* bump-normalized */
   544 |        $$PARM.nrow9E = (int) *((long long *)(this + 56));
                $$PARM.lda_AA0 = (int) *((long long *)(this + 64));
                $$PARM.AA2 = ((char *)*((char * *)(this + 168))  + (*((long long *)(this + 56)) * $$CIV5 + *((long long *)(this + 56)) * (j * factor)) * 8ll);
                $$PARM.BA3 = ((char *)ctg.data@a8  + ($$CIV5 * ((mnrow / factor) * mncol) + j * *((long long *)(this + 56))) * 8ll);
   463 |        if (!((int) *((long long *)(this + 56)) == (int) *((long long *)(this + 64)))) goto lab_20;
                if (!((int) *((long long *)(this + 56)) == (int) (mnrow / factor))) goto lab_20;
   464 |        __builtin_memcpy(((char *)ctg.data@a8  + ($$CIV5 * ((mnrow / factor) * mncol) + j * *((long long *)(this + 56))) * 8ll),((char *)*((char * *)(this + 168))  + (*((long long *)(this + 56)) * $$CIV5 + *((long long *)(this + 56)) * (j * factor)) * 8ll),(unsigned long long) ((int) mncol * (int) *((long long *)(this + 56))) * 8ull);
   465 |        goto lab_21;
              lab_20:
   467 |        if (!1) goto lab_22;
                $$CIV16 = 0ll;
                do {   /* id=3 guarded */ /* ~23 */ 
                  /* region = 58 */
                  /* bump-normalized */
   468 |          __builtin_memcpy(((char *)$$PARM.BA3  + 8ll * ($$CIV16 * (long long) ((int) (mnrow / factor)))),((char *)$$PARM.AA2  + 8ll * ($$CIV16 * (long long) $$PARM.lda_AA0)),(unsigned long long) $$PARM.nrow9E * 8ull);
   467 |          $$CIV16 = $$CIV16 + 1ll;
                } while ((unsigned long long) $$CIV16 < (unsigned long long) ((long long) ((int) mncol)));    /* ~23 */
              lab_22:
   470 |      lab_21:
   543 |        $$CIV5 = $$CIV5 + 1ll;
              } while ((unsigned long long) $$CIV5 < (unsigned long long) factor);    /* ~6 */
            lab_8:
   542 |      j = j + 1ll;
            } while (j < mnrow / (factor * *((long long *)(this + 56))));    /* ~3 */
          lab_25:
            goto lab_37;
          lab_26:
            if (!1) goto lab_35;
            do {   /* id=4 guarded */ /* ~28 */ 
              /* region = 62 */
   543 |      if (!1) goto lab_34;
              $$CIV5 = 0ll;
              do {   /* id=5 guarded */ /* ~29 */ 
                /* region = 61 */
                /* bump-normalized */
   463 |        if (!((int) *((long long *)(this + 56)) == (int) *((long long *)(this + 64)))) goto lab_30;
                if (!((int) *((long long *)(this + 56)) == (int) (mnrow / factor))) goto lab_30;
   464 |        __builtin_memcpy(((char *)ctg.data@a8  + ($$CIV5 * ((mnrow / factor) * mncol) + j * *((long long *)(this + 56))) * 8ll),((char *)*((char * *)(this + 168))  + (*((long long *)(this + 56)) * $$CIV5 + *((long long *)(this + 56)) * (j * factor)) * 8ll),(unsigned long long) ((int) mncol * (int) *((long long *)(this + 56))) * 8ull);
   465 |        goto lab_33;
              lab_30:
   470 |      lab_33:
   543 |        $$CIV5 = $$CIV5 + 1ll;
              } while ((unsigned long long) $$CIV5 < (unsigned long long) factor);    /* ~29 */
            lab_34:
   542 |      j = j + 1ll;
            } while (j < mnrow / (factor * *((long long *)(this + 56))));    /* ~28 */
          lab_35:
            goto lab_37;
          lab_36:
            if (!(0 < (int) mncol)) goto lab_46;
            if (!1) goto lab_45;
            do {   /* id=7 guarded */ /* ~38 */ 
              /* region = 63 */
              j = j + 1ll;
            } while (j < mnrow / (factor * *((long long *)(this + 56))));    /* ~38 */
          lab_45:
            goto lab_55;
          lab_46:
            if (!1) goto lab_54;
            do {   /* id=10 guarded */ /* ~47 */ 
              /* region = 64 */
              j = j + 1ll;
            } while (j < mnrow / (factor * *((long long *)(this + 56))));    /* ~47 */
          lab_54:
          lab_55:
          lab_37:
          lab_5:
   548 |    CTF_Timer::stop()(&tmr)
    61 |    &ret->(DMatrix).nrow@28.rns48.$$197 = ctg.nrow@28 / factor;
    62 |    &ret->(DMatrix).ncol@30.rns49.$$197 = ctg.ncol@30 * factor;
    64 |    &ret->(DMatrix).b@38.rns50.$$197 = *((long long *)(this + 56));
    65 |    &ret->(DMatrix).pv@48.rns51.$$197 = ((aggr92 *)((char *)this  + 72))->(pview).rns45.$$197;
    66 |    &ret->(DMatrix).is_transp@b8.rns52.$$197 = ctg.is_transp@b8;
    67 |    if (!(0ll != ctg.lda@40 / factor)) goto lab_13;
    68 |    &ret->(DMatrix).lda@40.rns53.$$197 = ctg.lda@40 / factor;
            goto lab_14;
          lab_13:
    70 |    &ret->(DMatrix).lda@40.rns53.$$197 = (((ctg.nrow@28 / factor) / &ret->(DMatrix).b@38.rns83.$$14$$197) / (long long) ((int *)((char *)&ret + 4))[100 / 4] + (long long) (((ctg.nrow@28 / factor) / &ret->(DMatrix).b@38.rns83.$$14$$197) % (long long) ((int *)((char *)&ret + 4))[100 / 4] > (long long) ((((int *)((char *)&ret + 8))[100 / 4] + (((int *)((char *)&ret + 4))[100 / 4] - ((int *)&ret)[72 / 4])) % ((int *)((char *)&ret + 4))[100 / 4]))) * &ret->(DMatrix).b@38.rns83.$$14$$197;
          lab_14:
    71 |    if (!(ctg.data@a8 == NULL)) goto lab_16;
            $$RETA = malloc((unsigned long long) (8ll * ((((ctg.ncol@30 * factor) / &ret->(DMatrix).b@38.rns88.$$16$$197) / (long long) ((int *)((char *)&ret + 4))[80 / 4] + (long long) (((ctg.ncol@30 * factor) / &ret->(DMatrix).b@38.rns88.$$16$$197) % (long long) ((int *)((char *)&ret + 4))[80 / 4] > (long long) ((((int *)((char *)&ret + 8))[80 / 4] + (((int *)((char *)&ret + 4))[80 / 4] - ((int *)((char *)&ret + 4))[72 / 4])) % ((int *)((char *)&ret + 4))[80 / 4]))) * (&ret->(DMatrix).lda@40.rns53.$$197 * &ret->(DMatrix).b@38.rns88.$$16$$197))));
    72 |    &ret->(DMatrix).data@a8.rns54.$$197 = $$RETA;
    73 |    &ret->(DMatrix).root_data@b0.rns55.$$197 = $$RETA;
    75 |    goto lab_18;
          lab_16:
    76 |    &ret->(DMatrix).data@a8.rns54.$$197 = ctg.data@a8;
    77 |    &ret->(DMatrix).root_data@b0.rns55.$$197 = ctg.root_data@b0;
    79 |  lab_18:
    80 |    &ret->(DMatrix).name@c0.rns56.$$197 = NULL;
    81 |    cdescinit(int*, int, int, int, int, int, int, int, int, int*)(&ret,(int) &ret->(DMatrix).nrow@28.rns48.$$197,(int) &ret->(DMatrix).ncol@30.rns49.$$197,(int) &ret->(DMatrix).b@38.rns50.$$197,(int) &ret->(DMatrix).b@38.rns50.$$197,((int *)&ret)[72 / 4],((int *)((char *)&ret + 4))[72 / 4],((int *)((char *)&ret + 88))[72 / 4],(int) &ret->(DMatrix).lda@40.rns53.$$197,&info)
   550 |    $$PARM.name_15 = *((char * *)(this + 192));
   124 |    if (!(*((char * *)(this + 192)) != NULL)) goto lab_9;
            $$RET10 = __builtin_strlen(*((char * *)(this + 192)));
            $$RET11 = malloc($$RET10 + 1ull);
   125 |    &ret->(DMatrix).name@c0.rns79.$$198 = $$RET11;
   126 |    __builtin_strcpy($$RET11,$$PARM.name_15);
   127 |  lab_9:
   551 |    __88 = ret;
            __es.__c4@3 = 0u;
            CTF_Timer::~CTF_Timer()(&tmr);
            rstr = __88;
            return rstr;
   552 |  } /* function */ 



Source        Source        Loop Id       Action / Information                                      
File          Line                                                                                  
----------    ----------    ----------    ----------------------------------------------------------
         0           542             1    Loop cannot be normalized and no loop optimizations 
                                          applied.
         0           542             1    Loop cannot be normalized and no loop optimizations 
                                          applied.
         0           542             1    Loop cannot be normalized and no loop optimizations 
                                          applied.
         0           542             1    Loop was not SIMD vectorized because it contains 
                                          function calls.
         0           543             2    Loop was not SIMD vectorized because it contains 
                                          function calls.
       114           467             3    Loop was not SIMD vectorized because it contains 
                                          function calls.
         0           542             4    Loop was not SIMD vectorized because it contains 
                                          function calls.
         0           543             5    Loop was not SIMD vectorized because it contains 
                                          function calls.
         0           542             7    Loop was not SIMD vectorized because it contains 
                                          function calls.
         0           542            10    Loop was not SIMD vectorized because it contains 
                                          function calls.

   560 |  aggr200 DMatrix::foldrows(long)(char * this, long long factor)
          {
            __es.__l@0 = 0;
            __es.__t@8 = &__fsm_tab;
            __es.__this@10 = this;
            __es.__i@18 = 0;
            guard___func__12 = 1;
   562 |    __builtin_strcpy(&pname,"foldrows ");
   563 |    if (!(*((char * *)(this + 192)) != NULL)) goto lab_2;
   564 |    __builtin_strcat(&pname,*((char * *)(this + 192)));
          lab_2:
   565 |    CTF_Timer::CTF_Timer(char const*)(&tmr,&pname);
            __es.__c4@3 = 1u;
   566 |    CTF_Timer::start()(&tmr)
   568 |    mncol = ((*((long long *)(this + 48)) / *((long long *)(this + 56))) / (long long) ((int *)(this + 4))[80 / 4] + (long long) ((*((long long *)(this + 48)) / *((long long *)(this + 56))) % (long long) ((int *)(this + 4))[80 / 4] > (long long) ((((int *)(this + 8))[80 / 4] + (((int *)(this + 4))[80 / 4] - ((int *)(this + 4))[72 / 4])) % ((int *)(this + 4))[80 / 4]))) * *((long long *)(this + 56));
   569 |    mnrow = ((*((long long *)(this + 40)) / *((long long *)(this + 56))) / (long long) ((int *)(this + 4))[100 / 4] + (long long) ((*((long long *)(this + 40)) / *((long long *)(this + 56))) % (long long) ((int *)(this + 4))[100 / 4] > (long long) ((((int *)(this + 8))[100 / 4] + (((int *)(this + 4))[100 / 4] - ((int *)this)[72 / 4])) % ((int *)(this + 4))[100 / 4]))) * *((long long *)(this + 56));
   570 |    if (0ll == mncol % factor) goto lab_11;
            __assert_fail("mncol % factor == 0","dmatrix.cxx",570u,&__func__)
            return;
          lab_11:
   572 |    ctg = DMatrix::get_contig()(this)->(DMatrix).rns259.;
   574 |    if (!(0ll < mnrow / *((long long *)(this + 56)))) goto lab_14;
            j = 0ll;
            if (!(0ll < factor)) goto lab_46;
            if (!(0 < (int) (mncol / factor))) goto lab_36;
            if (!1) goto lab_35;
            do {   /* id=1 guarded */ /* ~12 */ 
              /* region = 62 */
   575 |      if (!1) goto lab_17;
              $$CIV6 = 0ll;
              do {   /* id=2 guarded */ /* ~15 */ 
                /* region = 61 */
                /* bump-normalized */
   576 |        $$PARM.nrowA4 = (int) *((long long *)(this + 56));
                $$PARM.lda_AA6 = (int) *((long long *)(this + 64));
                $$PARM.AA8 = ((char *)*((char * *)(this + 168))  + ((*((long long *)(this + 64)) * $$CIV6) * (mncol / factor) + j * *((long long *)(this + 56))) * 8ll);
                $$PARM.BA9 = ((char *)ctg.data@a8  + (*((long long *)(this + 56)) * $$CIV6 + *((long long *)(this + 56)) * (j * factor)) * 8ll);
   463 |        if (!((int) *((long long *)(this + 56)) == (int) *((long long *)(this + 64)))) goto lab_30;
                if (!((int) *((long long *)(this + 56)) == (int) (mnrow * factor))) goto lab_30;
   464 |        __builtin_memcpy(((char *)ctg.data@a8  + (*((long long *)(this + 56)) * $$CIV6 + *((long long *)(this + 56)) * (j * factor)) * 8ll),((char *)*((char * *)(this + 168))  + ((*((long long *)(this + 64)) * $$CIV6) * (mncol / factor) + j * *((long long *)(this + 56))) * 8ll),(unsigned long long) ((int) (mncol / factor) * (int) *((long long *)(this + 56))) * 8ull);
   465 |        goto lab_31;
              lab_30:
   467 |        if (!1) goto lab_32;
                $$CIV16 = 0ll;
                do {   /* id=3 guarded */ /* ~33 */ 
                  /* region = 60 */
                  /* bump-normalized */
   468 |          __builtin_memcpy(((char *)$$PARM.BA9  + 8ll * ($$CIV16 * (long long) ((int) (mnrow * factor)))),((char *)$$PARM.AA8  + 8ll * ($$CIV16 * (long long) $$PARM.lda_AA6)),(unsigned long long) $$PARM.nrowA4 * 8ull);
   467 |          $$CIV16 = $$CIV16 + 1ll;
                } while ((unsigned long long) $$CIV16 < (unsigned long long) ((long long) ((int) (mncol / factor))));    /* ~33 */
              lab_32:
   470 |      lab_31:
   575 |        $$CIV6 = $$CIV6 + 1ll;
              } while ((unsigned long long) $$CIV6 < (unsigned long long) factor);    /* ~15 */
            lab_17:
   574 |      j = j + 1ll;
            } while (j < mnrow / *((long long *)(this + 56)));    /* ~12 */
          lab_35:
            goto lab_47;
          lab_36:
            if (!1) goto lab_45;
            do {   /* id=4 guarded */ /* ~38 */ 
              /* region = 64 */
   575 |      if (!1) goto lab_44;
              $$CIV6 = 0ll;
              do {   /* id=5 guarded */ /* ~39 */ 
                /* region = 63 */
                /* bump-normalized */
   463 |        if (!((int) *((long long *)(this + 56)) == (int) *((long long *)(this + 64)))) goto lab_40;
                if (!((int) *((long long *)(this + 56)) == (int) (mnrow * factor))) goto lab_40;
   464 |        __builtin_memcpy(((char *)ctg.data@a8  + (*((long long *)(this + 56)) * $$CIV6 + *((long long *)(this + 56)) * (j * factor)) * 8ll),((char *)*((char * *)(this + 168))  + ((*((long long *)(this + 64)) * $$CIV6) * (mncol / factor) + j * *((long long *)(this + 56))) * 8ll),(unsigned long long) ((int) (mncol / factor) * (int) *((long long *)(this + 56))) * 8ull);
   465 |        goto lab_43;
              lab_40:
   470 |      lab_43:
   575 |        $$CIV6 = $$CIV6 + 1ll;
              } while ((unsigned long long) $$CIV6 < (unsigned long long) factor);    /* ~39 */
            lab_44:
   574 |      j = j + 1ll;
            } while (j < mnrow / *((long long *)(this + 56)));    /* ~38 */
          lab_45:
            goto lab_47;
          lab_46:
            if (!(0 < (int) (mncol / factor))) goto lab_56;
            if (!1) goto lab_55;
            do {   /* id=7 guarded */ /* ~48 */ 
              /* region = 65 */
              j = j + 1ll;
            } while (j < mnrow / *((long long *)(this + 56)));    /* ~48 */
          lab_55:
            goto lab_65;
          lab_56:
            if (!1) goto lab_64;
            do {   /* id=10 guarded */ /* ~57 */ 
              /* region = 66 */
              j = j + 1ll;
            } while (j < mnrow / *((long long *)(this + 56)));    /* ~57 */
          lab_64:
          lab_65:
          lab_47:
          lab_14:
   580 |    CTF_Timer::stop()(&tmr)
    61 |    &ret->(DMatrix).nrow@28.rns48.$$209 = ctg.nrow@28 * factor;
    62 |    &ret->(DMatrix).ncol@30.rns49.$$209 = ctg.ncol@30 / factor;
    64 |    &ret->(DMatrix).b@38.rns50.$$209 = *((long long *)(this + 56));
    65 |    &ret->(DMatrix).pv@48.rns51.$$209 = ((aggr92 *)((char *)this  + 72))->(pview).rns45.$$209;
    66 |    &ret->(DMatrix).is_transp@b8.rns52.$$209 = ctg.is_transp@b8;
    67 |    if (!(0ll != ctg.lda@40 * factor)) goto lab_23;
    68 |    &ret->(DMatrix).lda@40.rns53.$$209 = ctg.lda@40 * factor;
            goto lab_24;
          lab_23:
    70 |    &ret->(DMatrix).lda@40.rns53.$$209 = (((ctg.nrow@28 * factor) / &ret->(DMatrix).b@38.rns83.$$14$$209) / (long long) ((int *)((char *)&ret + 4))[100 / 4] + (long long) (((ctg.nrow@28 * factor) / &ret->(DMatrix).b@38.rns83.$$14$$209) % (long long) ((int *)((char *)&ret + 4))[100 / 4] > (long long) ((((int *)((char *)&ret + 8))[100 / 4] + (((int *)((char *)&ret + 4))[100 / 4] - ((int *)&ret)[72 / 4])) % ((int *)((char *)&ret + 4))[100 / 4]))) * &ret->(DMatrix).b@38.rns83.$$14$$209;
          lab_24:
    71 |    if (!(ctg.data@a8 == NULL)) goto lab_26;
            $$RETA = malloc((unsigned long long) (8ll * ((((ctg.ncol@30 / factor) / &ret->(DMatrix).b@38.rns88.$$16$$209) / (long long) ((int *)((char *)&ret + 4))[80 / 4] + (long long) (((ctg.ncol@30 / factor) / &ret->(DMatrix).b@38.rns88.$$16$$209) % (long long) ((int *)((char *)&ret + 4))[80 / 4] > (long long) ((((int *)((char *)&ret + 8))[80 / 4] + (((int *)((char *)&ret + 4))[80 / 4] - ((int *)((char *)&ret + 4))[72 / 4])) % ((int *)((char *)&ret + 4))[80 / 4]))) * (&ret->(DMatrix).lda@40.rns53.$$209 * &ret->(DMatrix).b@38.rns88.$$16$$209))));
    72 |    &ret->(DMatrix).data@a8.rns54.$$209 = $$RETA;
    73 |    &ret->(DMatrix).root_data@b0.rns55.$$209 = $$RETA;
    75 |    goto lab_28;
          lab_26:
    76 |    &ret->(DMatrix).data@a8.rns54.$$209 = ctg.data@a8;
    77 |    &ret->(DMatrix).root_data@b0.rns55.$$209 = ctg.root_data@b0;
    79 |  lab_28:
    80 |    &ret->(DMatrix).name@c0.rns56.$$209 = NULL;
    81 |    cdescinit(int*, int, int, int, int, int, int, int, int, int*)(&ret,(int) &ret->(DMatrix).nrow@28.rns48.$$209,(int) &ret->(DMatrix).ncol@30.rns49.$$209,(int) &ret->(DMatrix).b@38.rns50.$$209,(int) &ret->(DMatrix).b@38.rns50.$$209,((int *)&ret)[72 / 4],((int *)((char *)&ret + 4))[72 / 4],((int *)((char *)&ret + 88))[72 / 4],(int) &ret->(DMatrix).lda@40.rns53.$$209,&info)
   582 |    $$PARM.name_1D = *((char * *)(this + 192));
   124 |    if (!(*((char * *)(this + 192)) != NULL)) goto lab_19;
            $$RET10 = __builtin_strlen(*((char * *)(this + 192)));
            $$RET11 = malloc($$RET10 + 1ull);
   125 |    &ret->(DMatrix).name@c0.rns79.$$210 = $$RET11;
   126 |    __builtin_strcpy($$RET11,$$PARM.name_1D);
   127 |  lab_19:
   583 |    __93 = ret;
            __es.__c4@3 = 0u;
            CTF_Timer::~CTF_Timer()(&tmr);
            rstr = __93;
            return rstr;
   584 |  } /* function */ 



Source        Source        Loop Id       Action / Information                                      
File          Line                                                                                  
----------    ----------    ----------    ----------------------------------------------------------
         0           574             1    Loop cannot be normalized and no loop optimizations 
                                          applied.
         0           574             1    Loop cannot be normalized and no loop optimizations 
                                          applied.
         0           574             1    Loop cannot be normalized and no loop optimizations 
                                          applied.
         0           574             1    Loop was not SIMD vectorized because it contains 
                                          function calls.
         0           575             2    Loop was not SIMD vectorized because it contains 
                                          function calls.
       114           467             3    Loop was not SIMD vectorized because it contains 
                                          function calls.
         0           574             4    Loop was not SIMD vectorized because it contains 
                                          function calls.
         0           575             5    Loop was not SIMD vectorized because it contains 
                                          function calls.
         0           574             7    Loop was not SIMD vectorized because it contains 
                                          function calls.
         0           574            10    Loop was not SIMD vectorized because it contains 
                                          function calls.

   589 |  void DMatrix::zero_upper_tri()(char * this)
          {
   595 |    if (!((long long) ((((int *)(this + 4))[80 / 4] + (((int *)(this + 8))[80 / 4] - ((int *)(this + 4))[72 / 4])) % ((int *)(this + 4))[80 / 4]) * *((long long *)(this + 56)) < *((long long *)(this + 48)))) goto lab_3;
            if (!((long long) ((((int *)(this + 4))[100 / 4] + (((int *)(this + 8))[100 / 4] - ((int *)this)[72 / 4])) % ((int *)(this + 4))[100 / 4]) * *((long long *)(this + 56)) < *((long long *)(this + 40)))) goto lab_40;
            if (!1) goto lab_39;
            $$CIVC = 0ll;
            do {   /* id=1 guarded */ /* ~1 */ 
              /* region = 41 */
              /* bump-normalized */
   597 |      if (!1) goto lab_6;
              $$CIVB = 0ll;
              do {   /* id=2 guarded */ /* ~4 */ 
                /* region = 40 */
                /* bump-normalized */
                row.rnn16 = (long long) ((((int *)(this + 8))[100 / 4] + (((int *)(this + 4))[100 / 4] - ((int *)this)[72 / 4])) % ((int *)(this + 4))[100 / 4]) * *((long long *)(this + 56)) + $$CIVB * ((long long) ((int *)(this + 4))[100 / 4] * *((long long *)(this + 56)));
   600 |        if (!(row.rnn16 == $$CIVC * ((long long) ((int *)(this + 4))[80 / 4] * *((long long *)(this + 56))) + (long long) ((((int *)(this + 8))[80 / 4] + (((int *)(this + 4))[80 / 4] - ((int *)(this + 4))[72 / 4])) % ((int *)(this + 4))[80 / 4]) * *((long long *)(this + 56)))) goto lab_7;
   601 |        if (!(0ll < *((long long *)(this + 56)))) goto lab_11;
                $$CIV8 = 0ll;
                do {   /* id=5 guarded */ /* ~9 */ 
                  /* region = 37 */
                  /* bump-normalized */
   700 |          if (!(0ll != 8ll * ($$CIV8 * *((long long *)(this + 64))) + (-8ll - *((long long *)(this + 64)) * 8ll) * $$CIV8)) goto lab_14;
   737 |          $$CIV7 = 0ll;
   700 |          do {   /* id=6 guarded */ /* ~12 */ 
                    /* region = 36 */
                    /* bump-normalized */
   702 |            ((double *)(*((char * *)(this + 168))))[$$CIV7 + (*((long long *)(this + 64)) * $$CIV8 + (*((long long *)(this + 56)) * $$CIVB + $$CIVC * (*((long long *)(this + 64)) * *((long long *)(this + 56)))))] =  0.0000000000000000E+000;
   701 |            $$CIV7 = $$CIV7 + 1ll;
                  } while ((unsigned long long) $$CIV7 < (unsigned long long) (((*((long long *)(this + 64)) * 8ll + 8ll) * $$CIV8 - 8ll * ($$CIV8 * *((long long *)(this + 64)))) / 8ll));    /* ~12 */
                lab_14:
   601 |          $$CIV8 = $$CIV8 + 1ll;
                } while ((unsigned long long) $$CIV8 < (unsigned long long) *((long long *)(this + 56)));    /* ~9 */
              lab_11:
   604 |      lab_7:
   606 |        if (!(row.rnn16 < $$CIVC * ((long long) ((int *)(this + 4))[80 / 4] * *((long long *)(this + 56))) + (long long) ((((int *)(this + 8))[80 / 4] + (((int *)(this + 4))[80 / 4] - ((int *)(this + 4))[72 / 4])) % ((int *)(this + 4))[80 / 4]) * *((long long *)(this + 56)))) goto lab_15;
   608 |        if (!(0ll < *((long long *)(this + 56)))) goto lab_19;
                $$CIVA = 0ll;
                do {   /* id=3 guarded */ /* ~17 */ 
                  /* region = 39 */
                  /* bump-normalized */
   700 |          if (!(*((long long *)(this + 56)) * 8ll != 0ll)) goto lab_22;
   737 |          $$CIV9 = 0ll;
   700 |          do {   /* id=4 guarded */ /* ~20 */ 
                    /* region = 38 */
                    /* bump-normalized */
   702 |            ((double *)(*((char * *)(this + 168))))[$$CIV9 + (*((long long *)(this + 64)) * $$CIVA + (*((long long *)(this + 56)) * $$CIVB + $$CIVC * (*((long long *)(this + 64)) * *((long long *)(this + 56)))))] =  0.0000000000000000E+000;
   701 |            $$CIV9 = $$CIV9 + 1ll;
                  } while ((unsigned long long) $$CIV9 < (unsigned long long) ((*((long long *)(this + 56)) * 8ll) / 8ll));    /* ~20 */
                lab_22:
   608 |          $$CIVA = $$CIVA + 1ll;
                } while ((unsigned long long) $$CIVA < (unsigned long long) *((long long *)(this + 56)));    /* ~17 */
              lab_19:
   611 |      lab_15:
   597 |        $$CIVB = $$CIVB + 1ll;
              } while ((unsigned long long) $$CIVB < (unsigned long long) (((*((long long *)(this + 40)) - (long long) ((((int *)(this + 8))[100 / 4] + (((int *)(this + 4))[100 / 4] - ((int *)this)[72 / 4])) % ((int *)(this + 4))[100 / 4]) * *((long long *)(this + 56))) - 1ll) / ((long long) ((int *)(this + 4))[100 / 4] * *((long long *)(this + 56))) + 1ll));    /* ~4 */
            lab_6:
   595 |      $$CIVC = $$CIVC + 1ll;
            } while ((unsigned long long) $$CIVC < (unsigned long long) (((*((long long *)(this + 48)) - (long long) ((((int *)(this + 8))[80 / 4] + (((int *)(this + 4))[80 / 4] - ((int *)(this + 4))[72 / 4])) % ((int *)(this + 4))[80 / 4]) * *((long long *)(this + 56))) - 1ll) / ((long long) ((int *)(this + 4))[80 / 4] * *((long long *)(this + 56))) + 1ll));    /* ~1 */
          lab_39:
          lab_40:
          lab_3:
   614 |    return;
          } /* function */ 



Source        Source        Loop Id       Action / Information                                      
File          Line                                                                                  
----------    ----------    ----------    ----------------------------------------------------------
         0           595             1    Loop was not SIMD vectorized because the loop is not 
                                          the innermost loop.
         0           597             2    Loop was not SIMD vectorized because the loop is not 
                                          the innermost loop.
         0           601             5    Loop was not SIMD vectorized because the loop is not 
                                          the innermost loop.
        68           702                  Loop was not SIMD vectorized because it contains 
                                          memory references  with  non-vectorizable strides.
        68           702                  Loop was not SIMD vectorized because the floating 
                                          point operation is not  vectorizable under -qstrict.
         0           608             3    Loop was not SIMD vectorized because the loop is not 
                                          the innermost loop.
        68           702                  Loop was not SIMD vectorized because it contains 
                                          memory references  with  non-vectorizable strides.
        68           702                  Loop was not SIMD vectorized because the floating 
                                          point operation is not  vectorizable under -qstrict.

   619 |  void DMatrix::zero_lower_tri()(char * this)
          {
   624 |    if (!((long long) ((((int *)(this + 4))[80 / 4] + (((int *)(this + 8))[80 / 4] - ((int *)(this + 4))[72 / 4])) % ((int *)(this + 4))[80 / 4]) * *((long long *)(this + 56)) < *((long long *)(this + 48)))) goto lab_3;
            if (!((long long) ((((int *)(this + 4))[100 / 4] + (((int *)(this + 8))[100 / 4] - ((int *)this)[72 / 4])) % ((int *)(this + 4))[100 / 4]) * *((long long *)(this + 56)) < *((long long *)(this + 40)))) goto lab_40;
            if (!1) goto lab_39;
            $$CIV12 = 0ll;
            do {   /* id=1 guarded */ /* ~1 */ 
              /* region = 41 */
              /* bump-normalized */
   626 |      if (!1) goto lab_6;
              $$CIV11 = 0ll;
              do {   /* id=2 guarded */ /* ~4 */ 
                /* region = 40 */
                /* bump-normalized */
                row.rnn26 = (long long) ((((int *)(this + 8))[100 / 4] + (((int *)(this + 4))[100 / 4] - ((int *)this)[72 / 4])) % ((int *)(this + 4))[100 / 4]) * *((long long *)(this + 56)) + $$CIV11 * ((long long) ((int *)(this + 4))[100 / 4] * *((long long *)(this + 56)));
   629 |        if (!(row.rnn26 == $$CIV12 * ((long long) ((int *)(this + 4))[80 / 4] * *((long long *)(this + 56))) + (long long) ((((int *)(this + 8))[80 / 4] + (((int *)(this + 4))[80 / 4] - ((int *)(this + 4))[72 / 4])) % ((int *)(this + 4))[80 / 4]) * *((long long *)(this + 56)))) goto lab_7;
   630 |        if (!(0ll < *((long long *)(this + 56)))) goto lab_11;
                $$CIVE = 0ll;
                do {   /* id=5 guarded */ /* ~9 */ 
                  /* region = 37 */
                  /* bump-normalized */
   700 |          if (!(8ll != (*((long long *)(this + 56)) + *((long long *)(this + 64)) * $$CIVE) * 8ll + (-8ll - *((long long *)(this + 64)) * 8ll) * $$CIVE)) goto lab_14;
   737 |          $$CIVD = 0ll;
   700 |          do {   /* id=6 guarded */ /* ~12 */ 
                    /* region = 36 */
                    /* bump-normalized */
   702 |            *((double *)((char *)(*((char * *)(this + 168))) + 8ll + ((*((long long *)(this + 64)) * 8ll + 8ll) * $$CIVE + ($$CIVD + ($$CIV11 * *((long long *)(this + 56)) + *((long long *)(this + 64)) * ($$CIV12 * *((long long *)(this + 56))))) * 8ll))) =  0.0000000000000000E+000;
   701 |            $$CIVD = $$CIVD + 1ll;
                  } while ((unsigned long long) $$CIVD < (unsigned long long) ((((*((long long *)(this + 56)) + $$CIVE * *((long long *)(this + 64))) * 8ll + $$CIVE * (-8ll - *((long long *)(this + 64)) * 8ll)) - 8ll) / 8ll));    /* ~12 */
                lab_14:
   630 |          $$CIVE = $$CIVE + 1ll;
                } while ((unsigned long long) $$CIVE < (unsigned long long) *((long long *)(this + 56)));    /* ~9 */
              lab_11:
   633 |      lab_7:
   635 |        if (!(row.rnn26 > $$CIV12 * ((long long) ((int *)(this + 4))[80 / 4] * *((long long *)(this + 56))) + (long long) ((((int *)(this + 8))[80 / 4] + (((int *)(this + 4))[80 / 4] - ((int *)(this + 4))[72 / 4])) % ((int *)(this + 4))[80 / 4]) * *((long long *)(this + 56)))) goto lab_15;
   636 |        if (!(0ll < *((long long *)(this + 56)))) goto lab_19;
                $$CIV10 = 0ll;
                do {   /* id=3 guarded */ /* ~17 */ 
                  /* region = 39 */
                  /* bump-normalized */
   700 |          if (!(*((long long *)(this + 56)) * 8ll != 0ll)) goto lab_22;
   737 |          $$CIVF = 0ll;
   700 |          do {   /* id=4 guarded */ /* ~20 */ 
                    /* region = 38 */
                    /* bump-normalized */
   702 |            ((double *)(*((char * *)(this + 168))))[$$CIVF + (*((long long *)(this + 64)) * $$CIV10 + (*((long long *)(this + 56)) * $$CIV11 + $$CIV12 * (*((long long *)(this + 64)) * *((long long *)(this + 56)))))] =  0.0000000000000000E+000;
   701 |            $$CIVF = $$CIVF + 1ll;
                  } while ((unsigned long long) $$CIVF < (unsigned long long) ((*((long long *)(this + 56)) * 8ll) / 8ll));    /* ~20 */
                lab_22:
   636 |          $$CIV10 = $$CIV10 + 1ll;
                } while ((unsigned long long) $$CIV10 < (unsigned long long) *((long long *)(this + 56)));    /* ~17 */
              lab_19:
   639 |      lab_15:
   626 |        $$CIV11 = $$CIV11 + 1ll;
              } while ((unsigned long long) $$CIV11 < (unsigned long long) (((*((long long *)(this + 40)) - (long long) ((((int *)(this + 8))[100 / 4] + (((int *)(this + 4))[100 / 4] - ((int *)this)[72 / 4])) % ((int *)(this + 4))[100 / 4]) * *((long long *)(this + 56))) - 1ll) / ((long long) ((int *)(this + 4))[100 / 4] * *((long long *)(this + 56))) + 1ll));    /* ~4 */
            lab_6:
   624 |      $$CIV12 = $$CIV12 + 1ll;
            } while ((unsigned long long) $$CIV12 < (unsigned long long) (((*((long long *)(this + 48)) - (long long) ((((int *)(this + 8))[80 / 4] + (((int *)(this + 4))[80 / 4] - ((int *)(this + 4))[72 / 4])) % ((int *)(this + 4))[80 / 4]) * *((long long *)(this + 56))) - 1ll) / ((long long) ((int *)(this + 4))[80 / 4] * *((long long *)(this + 56))) + 1ll));    /* ~1 */
          lab_39:
          lab_40:
          lab_3:
   642 |    return;
          } /* function */ 



Source        Source        Loop Id       Action / Information                                      
File          Line                                                                                  
----------    ----------    ----------    ----------------------------------------------------------
         0           624             1    Loop was not SIMD vectorized because the loop is not 
                                          the innermost loop.
         0           626             2    Loop was not SIMD vectorized because the loop is not 
                                          the innermost loop.
         0           630             5    Loop was not SIMD vectorized because the loop is not 
                                          the innermost loop.
        68           702                  Loop was not SIMD vectorized because it contains 
                                          memory references  with  non-vectorizable strides.
        68           702                  Loop was not SIMD vectorized because the floating 
                                          point operation is not  vectorizable under -qstrict.
         0           636             3    Loop was not SIMD vectorized because the loop is not 
                                          the innermost loop.
        68           702                  Loop was not SIMD vectorized because it contains 
                                          memory references  with  non-vectorizable strides.
        68           702                  Loop was not SIMD vectorized because the floating 
                                          point operation is not  vectorizable under -qstrict.

   649 |  void DMatrix::diag_scale_add(double, double)(char * this, double scale, double add)
          {
   654 |    if (!((long long) ((((int *)(this + 4))[80 / 4] + (((int *)(this + 8))[80 / 4] - ((int *)(this + 4))[72 / 4])) % ((int *)(this + 4))[80 / 4]) * *((long long *)(this + 56)) < *((long long *)(this + 48)))) goto lab_3;
            if (!((long long) ((((int *)(this + 4))[100 / 4] + (((int *)(this + 8))[100 / 4] - ((int *)this)[72 / 4])) % ((int *)(this + 4))[100 / 4]) * *((long long *)(this + 56)) < *((long long *)(this + 40)))) goto lab_29;
            if (!1) goto lab_28;
            if (!((unsigned long long) ((*((long long *)(this + 40)) + ((long long) ((((int *)(this + 8))[100 / 4] + (((int *)(this + 4))[100 / 4] - ((int *)this)[72 / 4])) % ((int *)(this + 4))[100 / 4]) * - *((long long *)(this + 56)) - 1ll)) / ((long long) ((int *)(this + 4))[100 / 4] * *((long long *)(this + 56))) + 1ll) % 128ull > 0ull)) goto lab_58;
            if (!1) goto lab_59;
            if (!((unsigned long long) ((*((long long *)(this + 40)) + ((long long) ((((int *)(this + 8))[100 / 4] + (((int *)(this + 4))[100 / 4] - ((int *)this)[72 / 4])) % ((int *)(this + 4))[100 / 4]) * - *((long long *)(this + 56)) - 1ll)) / ((long long) ((int *)(this + 4))[100 / 4] * *((long long *)(this + 56))) + 1ll) >= 128ull)) goto lab_85;
            if (!1) goto lab_84;
            $$CIV15 = 0ll;
            do {   /* id=1 guarded */ /* ~1 */ 
              /* region = 120 */
              /* bump-normalized */
   656 |      $$GIX0 = (long long) 0;
              if (!1) goto lab_40;
            lab_40:
              if (!1) goto lab_44;
              if (!1) goto lab_42;
              $$CIV18 = (long long) 0;
              do {   /* id=5 guarded */ /* ~43 */ 
                /* region = 119 */
                /* bump-normalized */
                $$GIX0 = 0ll;
                if (!1) goto lab_34;
                $$GIX0 = (long long) 0;
                $$CIV17 = (long long) 0;
                do {   /* id=2 guarded */ /* ~35 */ 
                  /* region = 118 */
                  /* bump-normalized */
   658 |          if (!(0ll == - ($$CIV18 * 128ll + $$CIV17) * ((long long) ((int *)(this + 4))[100 / 4] * *((long long *)(this + 56))) + ($$CIV15 * ((long long) ((int *)(this + 4))[80 / 4] * *((long long *)(this + 56))) + ((long long) ((((int *)(this + 8))[80 / 4] + (((int *)(this + 4))[80 / 4] - ((int *)(this + 4))[72 / 4])) % ((int *)(this + 4))[80 / 4]) * *((long long *)(this + 56)) - (long long) ((((int *)(this + 8))[100 / 4] + (((int *)(this + 4))[100 / 4] - ((int *)this)[72 / 4])) % ((int *)(this + 4))[100 / 4]) * *((long long *)(this + 56)))))) goto lab_36;
                  ((long long *)&$$StripVector0)[$$GIX0] = $$CIV18 * 128ll + $$CIV17;
                  $$GIX0 = $$GIX0 + (long long) 1;
                lab_36:
   656 |          $$CIV17 = $$CIV17 + 1ll;
                } while ((unsigned long long) $$CIV17 < 128ull);    /* ~35 */
              lab_34:
                if (!((long long) 0 < $$GIX0)) goto lab_37;
                $$SCIX0 = (long long) 0;
                do {   /* id=4 guarded */ /* ~38 */ 
                  /* region = 114 */
                  /* bump-normalized */
   659 |          if (!(0ll < *((long long *)(this + 56)))) goto lab_11;
                  $$CIV13 = 0ll;
                  do {   /* id=3 guarded */ /* ~9 */ 
                    /* region = 113 */
                    /* bump-normalized */
                    /* independent */
   660 |            ((double *)(((char *)*((char * *)(this + 168))  + (8ll * (($$CIV15 * *((long long *)(this + 56))) * *((long long *)(this + 64))) + 8ll * (((long long *)&$$StripVector0)[$$SCIX0] * *((long long *)(this + 56)))))))[(*((long long *)(this + 64)) + 1ll) * $$CIV13] = _fmadd@47(((double *)(((char *)*((char * *)(this + 168))  + (8ll * (($$CIV15 * *((long long *)(this + 56))) * *((long long *)(this + 64))) + 8ll * (((long long *)&$$StripVector0)[$$SCIX0] * *((long long *)(this + 56)))))))[(*((long long *)(this + 64)) + 1ll) * $$CIV13],scale,add);
   659 |            $$CIV13 = $$CIV13 + 1ll;
                  } while ((unsigned long long) $$CIV13 < (unsigned long long) *((long long *)(this + 56)));    /* ~9 */
                lab_11:
   656 |          $$SCIX0 = $$SCIX0 + 1ll;
                } while ($$SCIX0 < $$GIX0);    /* ~38 */
              lab_37:
   664 |        $$CIV18 = $$CIV18 + 1ll;
              } while ((unsigned long long) $$CIV18 < (unsigned long long) ((((*((long long *)(this + 40)) - (long long) ((((int *)(this + 8))[100 / 4] + (((int *)(this + 4))[100 / 4] - ((int *)this)[72 / 4])) % ((int *)(this + 4))[100 / 4]) * *((long long *)(this + 56))) - 1ll) / ((long long) ((int *)(this + 4))[100 / 4] * *((long long *)(this + 56))) + (long long) (((unsigned long long) (((*((long long *)(this + 40)) - (long long) ((((int *)(this + 8))[100 / 4] + (((int *)(this + 4))[100 / 4] - ((int *)this)[72 / 4])) % ((int *)(this + 4))[100 / 4]) * *((long long *)(this + 56))) - 1ll) / ((long long) ((int *)(this + 4))[100 / 4] * *((long long *)(this + 56))) + 1ll) % 128ull) * 18446744073709551615ull)) / 128ll + 1ll));    /* ~43 */
            lab_42:
   656 |      if (!1) goto lab_47;
              $$GIX0 = (long long) 0;
              $$CIV19 = (long long) 0;
              do {   /* id=6 guarded */ /* ~45 */ 
                /* region = 117 */
                /* bump-normalized */
                $$CIV14 = 1ll + ($$CIV19 + (((*((long long *)(this + 40)) - (long long) ((((int *)(this + 8))[100 / 4] + (((int *)(this + 4))[100 / 4] - ((int *)this)[72 / 4])) % ((int *)(this + 4))[100 / 4]) * *((long long *)(this + 56))) - 1ll) / ((long long) ((int *)(this + 4))[100 / 4] * *((long long *)(this + 56))) + (long long) (((unsigned long long) (((*((long long *)(this + 40)) - (long long) ((((int *)(this + 8))[100 / 4] + (((int *)(this + 4))[100 / 4] - ((int *)this)[72 / 4])) % ((int *)(this + 4))[100 / 4]) * *((long long *)(this + 56))) - 1ll) / ((long long) ((int *)(this + 4))[100 / 4] * *((long long *)(this + 56))) + 1ll) % 128ull) * 18446744073709551615ull)));
   658 |        if (!(((long long) ((((int *)(this + 8))[80 / 4] + (((int *)(this + 4))[80 / 4] - ((int *)(this + 4))[72 / 4])) % ((int *)(this + 4))[80 / 4]) * *((long long *)(this + 56)) + $$CIV15 * ((long long) ((int *)(this + 4))[80 / 4] * *((long long *)(this + 56)))) - (long long) ((((int *)(this + 8))[100 / 4] + (((int *)(this + 4))[100 / 4] - ((int *)this)[72 / 4])) % ((int *)(this + 4))[100 / 4]) * *((long long *)(this + 56)) == $$CIV14 * ((long long) ((int *)(this + 4))[100 / 4] * *((long long *)(this + 56))))) goto lab_46;
                ((long long *)&$$StripVector0)[$$GIX0] = $$CIV14;
                $$GIX0 = $$GIX0 + (long long) 1;
              lab_46:
   656 |        $$CIV19 = $$CIV19 + 1ll;
              } while ((unsigned long long) $$CIV19 < (unsigned long long) (((*((long long *)(this + 40)) - (long long) ((((int *)(this + 8))[100 / 4] + (((int *)(this + 4))[100 / 4] - ((int *)this)[72 / 4])) % ((int *)(this + 4))[100 / 4]) * *((long long *)(this + 56))) - 1ll) / ((long long) ((int *)(this + 4))[100 / 4] * *((long long *)(this + 56))) + 1ll) % 128ull);    /* ~45 */
            lab_47:
              if (!((long long) 0 < $$GIX0)) goto lab_51;
              $$CIV1A = (long long) 0;
              do {   /* id=7 guarded */ /* ~48 */ 
                /* region = 116 */
                /* bump-normalized */
   659 |        if (!(0ll < *((long long *)(this + 56)))) goto lab_50;
                $$CIV13 = 0ll;
                do {   /* id=8 guarded */ /* ~49 */ 
                  /* region = 115 */
                  /* bump-normalized */
                  /* independent */
   660 |          ((double *)(((char *)*((char * *)(this + 168))  + (8ll * ($$CIV15 * (*((long long *)(this + 64)) * *((long long *)(this + 56)))) + 8ll * (((long long *)&$$StripVector0)[$$CIV1A] * *((long long *)(this + 56)))))))[(*((long long *)(this + 64)) + 1ll) * $$CIV13] = _fmadd@47(((double *)(((char *)*((char * *)(this + 168))  + (8ll * ($$CIV15 * (*((long long *)(this + 64)) * *((long long *)(this + 56)))) + 8ll * (((long long *)&$$StripVector0)[$$CIV1A] * *((long long *)(this + 56)))))))[(*((long long *)(this + 64)) + 1ll) * $$CIV13],scale,add);
   659 |          $$CIV13 = $$CIV13 + 1ll;
                } while ((unsigned long long) $$CIV13 < (unsigned long long) *((long long *)(this + 56)));    /* ~49 */
              lab_50:
   656 |        $$CIV1A = $$CIV1A + 1ll;
              } while ((unsigned long long) $$CIV1A < (unsigned long long) $$GIX0);    /* ~48 */
            lab_51:
            lab_44:
   654 |      $$CIV15 = $$CIV15 + 1ll;
            } while ((unsigned long long) $$CIV15 < (unsigned long long) (((*((long long *)(this + 48)) - (long long) ((((int *)(this + 8))[80 / 4] + (((int *)(this + 4))[80 / 4] - ((int *)(this + 4))[72 / 4])) % ((int *)(this + 4))[80 / 4]) * *((long long *)(this + 56))) - 1ll) / ((long long) ((int *)(this + 4))[80 / 4] * *((long long *)(this + 56))) + 1ll));    /* ~1 */
          lab_84:
            goto lab_59;
          lab_85:
            if (!1) goto lab_106;
            $$CIV15 = 0ll;
            do {   /* id=16 guarded */ /* ~87 */ 
              /* region = 124 */
              /* bump-normalized */
   656 |      $$GIX0 = (long long) 0;
              if (!1) goto lab_88;
            lab_88:
              if (!1) goto lab_105;
              if (!1) goto lab_100;
              $$GIX0 = (long long) 0;
              $$CIV19 = (long long) 0;
              do {   /* id=19 guarded */ /* ~98 */ 
                /* region = 123 */
                /* bump-normalized */
                $$CIV14 = 1ll + ($$CIV19 + (((*((long long *)(this + 40)) - (long long) ((((int *)(this + 8))[100 / 4] + (((int *)(this + 4))[100 / 4] - ((int *)this)[72 / 4])) % ((int *)(this + 4))[100 / 4]) * *((long long *)(this + 56))) - 1ll) / ((long long) ((int *)(this + 4))[100 / 4] * *((long long *)(this + 56))) + (long long) (((unsigned long long) (((*((long long *)(this + 40)) - (long long) ((((int *)(this + 8))[100 / 4] + (((int *)(this + 4))[100 / 4] - ((int *)this)[72 / 4])) % ((int *)(this + 4))[100 / 4]) * *((long long *)(this + 56))) - 1ll) / ((long long) ((int *)(this + 4))[100 / 4] * *((long long *)(this + 56))) + 1ll) % 128ull) * 18446744073709551615ull)));
   658 |        if (!(((long long) ((((int *)(this + 8))[80 / 4] + (((int *)(this + 4))[80 / 4] - ((int *)(this + 4))[72 / 4])) % ((int *)(this + 4))[80 / 4]) * *((long long *)(this + 56)) + $$CIV15 * ((long long) ((int *)(this + 4))[80 / 4] * *((long long *)(this + 56)))) - (long long) ((((int *)(this + 8))[100 / 4] + (((int *)(this + 4))[100 / 4] - ((int *)this)[72 / 4])) % ((int *)(this + 4))[100 / 4]) * *((long long *)(this + 56)) == $$CIV14 * ((long long) ((int *)(this + 4))[100 / 4] * *((long long *)(this + 56))))) goto lab_99;
                ((long long *)&$$StripVector0)[$$GIX0] = $$CIV14;
                $$GIX0 = $$GIX0 + (long long) 1;
              lab_99:
   656 |        $$CIV19 = $$CIV19 + 1ll;
              } while ((unsigned long long) $$CIV19 < (unsigned long long) (((*((long long *)(this + 40)) - (long long) ((((int *)(this + 8))[100 / 4] + (((int *)(this + 4))[100 / 4] - ((int *)this)[72 / 4])) % ((int *)(this + 4))[100 / 4]) * *((long long *)(this + 56))) - 1ll) / ((long long) ((int *)(this + 4))[100 / 4] * *((long long *)(this + 56))) + 1ll) % 128ull);    /* ~98 */
            lab_100:
              if (!((long long) 0 < $$GIX0)) goto lab_104;
              $$CIV1A = (long long) 0;
              do {   /* id=20 guarded */ /* ~101 */ 
                /* region = 122 */
                /* bump-normalized */
   659 |        if (!(0ll < *((long long *)(this + 56)))) goto lab_103;
                $$CIV13 = 0ll;
                do {   /* id=21 guarded */ /* ~102 */ 
                  /* region = 121 */
                  /* bump-normalized */
                  /* independent */
   660 |          ((double *)(((char *)*((char * *)(this + 168))  + (8ll * ($$CIV15 * (*((long long *)(this + 64)) * *((long long *)(this + 56)))) + 8ll * (((long long *)&$$StripVector0)[$$CIV1A] * *((long long *)(this + 56)))))))[(*((long long *)(this + 64)) + 1ll) * $$CIV13] = _fmadd@47(((double *)(((char *)*((char * *)(this + 168))  + (8ll * ($$CIV15 * (*((long long *)(this + 64)) * *((long long *)(this + 56)))) + 8ll * (((long long *)&$$StripVector0)[$$CIV1A] * *((long long *)(this + 56)))))))[(*((long long *)(this + 64)) + 1ll) * $$CIV13],scale,add);
   659 |          $$CIV13 = $$CIV13 + 1ll;
                } while ((unsigned long long) $$CIV13 < (unsigned long long) *((long long *)(this + 56)));    /* ~102 */
              lab_103:
   656 |        $$CIV1A = $$CIV1A + 1ll;
              } while ((unsigned long long) $$CIV1A < (unsigned long long) $$GIX0);    /* ~101 */
            lab_104:
            lab_105:
   654 |      $$CIV15 = $$CIV15 + 1ll;
            } while ((unsigned long long) $$CIV15 < (unsigned long long) (((*((long long *)(this + 48)) - (long long) ((((int *)(this + 8))[80 / 4] + (((int *)(this + 4))[80 / 4] - ((int *)(this + 4))[72 / 4])) % ((int *)(this + 4))[80 / 4]) * *((long long *)(this + 56))) - 1ll) / ((long long) ((int *)(this + 4))[80 / 4] * *((long long *)(this + 56))) + 1ll));    /* ~87 */
          lab_106:
            goto lab_59;
          lab_58:
            if (!1) goto lab_80;
            if (!((unsigned long long) ((*((long long *)(this + 40)) + ((long long) ((((int *)(this + 8))[100 / 4] + (((int *)(this + 4))[100 / 4] - ((int *)this)[72 / 4])) % ((int *)(this + 4))[100 / 4]) * - *((long long *)(this + 56)) - 1ll)) / ((long long) ((int *)(this + 4))[100 / 4] * *((long long *)(this + 56))) + 1ll) >= 128ull)) goto lab_108;
            if (!1) goto lab_107;
            $$CIV15 = 0ll;
            do {   /* id=9 guarded */ /* ~60 */ 
              /* region = 129 */
              /* bump-normalized */
   656 |      if (!1) goto lab_61;
            lab_61:
              if (!1) goto lab_79;
              if (!1) goto lab_70;
              $$CIV18 = (long long) 0;
              do {   /* id=10 guarded */ /* ~62 */ 
                /* region = 128 */
                /* bump-normalized */
                $$GIX0 = 0ll;
                if (!1) goto lab_65;
                $$GIX0 = (long long) 0;
                $$CIV17 = (long long) 0;
                do {   /* id=11 guarded */ /* ~63 */ 
                  /* region = 127 */
                  /* bump-normalized */
   658 |          if (!(0ll == - ($$CIV18 * 128ll + $$CIV17) * ((long long) ((int *)(this + 4))[100 / 4] * *((long long *)(this + 56))) + ($$CIV15 * ((long long) ((int *)(this + 4))[80 / 4] * *((long long *)(this + 56))) + ((long long) ((((int *)(this + 8))[80 / 4] + (((int *)(this + 4))[80 / 4] - ((int *)(this + 4))[72 / 4])) % ((int *)(this + 4))[80 / 4]) * *((long long *)(this + 56)) - (long long) ((((int *)(this + 8))[100 / 4] + (((int *)(this + 4))[100 / 4] - ((int *)this)[72 / 4])) % ((int *)(this + 4))[100 / 4]) * *((long long *)(this + 56)))))) goto lab_64;
                  ((long long *)&$$StripVector0)[$$GIX0] = $$CIV18 * 128ll + $$CIV17;
                  $$GIX0 = $$GIX0 + (long long) 1;
                lab_64:
   656 |          $$CIV17 = $$CIV17 + 1ll;
                } while ((unsigned long long) $$CIV17 < 128ull);    /* ~63 */
              lab_65:
                if (!((long long) 0 < $$GIX0)) goto lab_69;
                $$SCIX0 = (long long) 0;
                do {   /* id=12 guarded */ /* ~66 */ 
                  /* region = 126 */
                  /* bump-normalized */
   659 |          if (!(0ll < *((long long *)(this + 56)))) goto lab_68;
                  $$CIV13 = 0ll;
                  do {   /* id=13 guarded */ /* ~67 */ 
                    /* region = 125 */
                    /* bump-normalized */
                    /* independent */
   660 |            ((double *)(((char *)*((char * *)(this + 168))  + (8ll * (($$CIV15 * *((long long *)(this + 56))) * *((long long *)(this + 64))) + 8ll * (((long long *)&$$StripVector0)[$$SCIX0] * *((long long *)(this + 56)))))))[(*((long long *)(this + 64)) + 1ll) * $$CIV13] = _fmadd@47(((double *)(((char *)*((char * *)(this + 168))  + (8ll * (($$CIV15 * *((long long *)(this + 56))) * *((long long *)(this + 64))) + 8ll * (((long long *)&$$StripVector0)[$$SCIX0] * *((long long *)(this + 56)))))))[(*((long long *)(this + 64)) + 1ll) * $$CIV13],scale,add);
   659 |            $$CIV13 = $$CIV13 + 1ll;
                  } while ((unsigned long long) $$CIV13 < (unsigned long long) *((long long *)(this + 56)));    /* ~67 */
                lab_68:
   656 |          $$SCIX0 = $$SCIX0 + 1ll;
                } while ($$SCIX0 < $$GIX0);    /* ~66 */
              lab_69:
   664 |        $$CIV18 = $$CIV18 + 1ll;
              } while ((unsigned long long) $$CIV18 < (unsigned long long) ((((*((long long *)(this + 40)) - (long long) ((((int *)(this + 8))[100 / 4] + (((int *)(this + 4))[100 / 4] - ((int *)this)[72 / 4])) % ((int *)(this + 4))[100 / 4]) * *((long long *)(this + 56))) - 1ll) / ((long long) ((int *)(this + 4))[100 / 4] * *((long long *)(this + 56))) + (long long) (((unsigned long long) (((*((long long *)(this + 40)) - (long long) ((((int *)(this + 8))[100 / 4] + (((int *)(this + 4))[100 / 4] - ((int *)this)[72 / 4])) % ((int *)(this + 4))[100 / 4]) * *((long long *)(this + 56))) - 1ll) / ((long long) ((int *)(this + 4))[100 / 4] * *((long long *)(this + 56))) + 1ll) % 128ull) * 18446744073709551615ull)) / 128ll + 1ll));    /* ~62 */
            lab_70:
   656 |    lab_79:
   654 |      $$CIV15 = $$CIV15 + 1ll;
            } while ((unsigned long long) $$CIV15 < (unsigned long long) (((*((long long *)(this + 48)) - (long long) ((((int *)(this + 8))[80 / 4] + (((int *)(this + 4))[80 / 4] - ((int *)(this + 4))[72 / 4])) % ((int *)(this + 4))[80 / 4]) * *((long long *)(this + 56))) - 1ll) / ((long long) ((int *)(this + 4))[80 / 4] * *((long long *)(this + 56))) + 1ll));    /* ~60 */
          lab_107:
            goto lab_109;
          lab_108:
            if (!1) goto lab_122;
            $$CIV15 = 0ll;
            do {   /* id=22 guarded */ /* ~110 */ 
              /* region = 130 */
              /* bump-normalized */
              /* independent */
   656 |      if (!1) goto lab_111;
            lab_111:
              if (!1) goto lab_121;
            lab_121:
   654 |      $$CIV15 = $$CIV15 + 1ll;
            } while ((unsigned long long) $$CIV15 < (unsigned long long) (((*((long long *)(this + 48)) - (long long) ((((int *)(this + 8))[80 / 4] + (((int *)(this + 4))[80 / 4] - ((int *)(this + 4))[72 / 4])) % ((int *)(this + 4))[80 / 4]) * *((long long *)(this + 56))) - 1ll) / ((long long) ((int *)(this + 4))[80 / 4] * *((long long *)(this + 56))) + 1ll));    /* ~110 */
          lab_122:
          lab_109:
          lab_80:
          lab_59:
          lab_28:
          lab_29:
          lab_3:
   665 |    return;
          } /* function */ 



Source        Source        Loop Id       Action / Information                                      
File          Line                                                                                  
----------    ----------    ----------    ----------------------------------------------------------
         0           654             1    Loop was not SIMD vectorized because the loop is not 
                                          the innermost loop.
         0           656             5    Loop was not SIMD vectorized because the loop is not 
                                          the innermost loop.
         0           656             2    Gather/Scatter applied to loop nest.
         0           656             2    Loop was not SIMD vectorized because it contains 
                                          unsupported loop structure.
         0           656             2    Loop was not SIMD vectorized because it contains 
                                          control flow.
         0           656             4    Loop was not SIMD vectorized because the loop is not 
                                          the innermost loop.
         0           660                  Loop was not SIMD vectorized because it contains 
                                          memory references ((char *)((char 
                                          *)this->(DMatrix).data@a8.rns304.  + (8ll * (($$CIV15 
                                          * this->(DMatrix).b@38.rns295.) * 
                                          this->(DMatrix).lda@40.rns303.) + 8ll * 
                                          ($$StripMember0[$$SCIX0] * 
                                          this->(DMatrix).b@38.rns295.))) + 
                                          (8ll)*((this->(DMatrix).lda@40.rns303. + 1ll) * 
                                          $$CIV13)) with  non-vectorizable strides.
         0           660                  Loop was not SIMD vectorized because the floating 
                                          point operation is not  vectorizable under -qstrict.
         0           660                  Loop was not SIMD vectorized because it contains 
                                          non-stride-one store  references ((char *)((char 
                                          *)this->(DMatrix).data@a8.rns304.  + (8ll * (($$CIV15 
                                          * this->(DMatrix).b@38.rns295.) * 
                                          this->(DMatrix).lda@40.rns303.) + 8ll * 
                                          ($$StripMember0[$$SCIX0] * 
                                          this->(DMatrix).b@38.rns295.))) + 
                                          (8ll)*((this->(DMatrix).lda@40.rns303. + 1ll) * 
                                          $$CIV13)).
         0           656             6    Gather/Scatter applied to loop nest.
         0           656             6    Loop was not SIMD vectorized because it contains 
                                          unsupported loop structure.
         0           656             6    Loop was not SIMD vectorized because it contains 
                                          control flow.
         0           656             7    Loop was not SIMD vectorized because the loop is not 
                                          the innermost loop.
         0           660                  Loop was not SIMD vectorized because it contains 
                                          memory references ((char *)((char 
                                          *)this->(DMatrix).data@a8.rns304.  + (8ll * ($$CIV15 
                                          * (this->(DMatrix).lda@40.rns303. * 
                                          this->(DMatrix).b@38.rns295.)) + 8ll * 
                                          ($$StripMember0[$$CIV1A] * 
                                          this->(DMatrix).b@38.rns295.))) + 
                                          (8ll)*((this->(DMatrix).lda@40.rns303. + 1ll) * 
                                          $$CIV13)) with  non-vectorizable strides.
         0           660                  Loop was not SIMD vectorized because the floating 
                                          point operation is not  vectorizable under -qstrict.
         0           660                  Loop was not SIMD vectorized because it contains 
                                          non-stride-one store  references ((char *)((char 
                                          *)this->(DMatrix).data@a8.rns304.  + (8ll * ($$CIV15 
                                          * (this->(DMatrix).lda@40.rns303. * 
                                          this->(DMatrix).b@38.rns295.)) + 8ll * 
                                          ($$StripMember0[$$CIV1A] * 
                                          this->(DMatrix).b@38.rns295.))) + 
                                          (8ll)*((this->(DMatrix).lda@40.rns303. + 1ll) * 
                                          $$CIV13)).
         0           654            16    Loop was not SIMD vectorized because the loop is not 
                                          the innermost loop.
         0           656            19    Loop was not SIMD vectorized because it contains 
                                          unsupported loop structure.
         0           656            19    Loop was not SIMD vectorized because it contains 
                                          control flow.
         0           656            20    Loop was not SIMD vectorized because the loop is not 
                                          the innermost loop.
         0           660                  Loop was not SIMD vectorized because it contains 
                                          memory references ((char *)((char 
                                          *)this->(DMatrix).data@a8.rns304.  + (8ll * ($$CIV15 
                                          * (this->(DMatrix).lda@40.rns303. * 
                                          this->(DMatrix).b@38.rns295.)) + 8ll * 
                                          ($$StripMember0[$$CIV1A] * 
                                          this->(DMatrix).b@38.rns295.))) + 
                                          (8ll)*((this->(DMatrix).lda@40.rns303. + 1ll) * 
                                          $$CIV13)) with  non-vectorizable strides.
         0           660                  Loop was not SIMD vectorized because the floating 
                                          point operation is not  vectorizable under -qstrict.
         0           660                  Loop was not SIMD vectorized because it contains 
                                          non-stride-one store  references ((char *)((char 
                                          *)this->(DMatrix).data@a8.rns304.  + (8ll * ($$CIV15 
                                          * (this->(DMatrix).lda@40.rns303. * 
                                          this->(DMatrix).b@38.rns295.)) + 8ll * 
                                          ($$StripMember0[$$CIV1A] * 
                                          this->(DMatrix).b@38.rns295.))) + 
                                          (8ll)*((this->(DMatrix).lda@40.rns303. + 1ll) * 
                                          $$CIV13)).
         0           654             9    Loop was not SIMD vectorized because the loop is not 
                                          the innermost loop.
         0           656            10    Loop was not SIMD vectorized because the loop is not 
                                          the innermost loop.
         0           656            11    Loop was not SIMD vectorized because it contains 
                                          unsupported loop structure.
         0           656            11    Loop was not SIMD vectorized because it contains 
                                          control flow.
         0           656            12    Loop was not SIMD vectorized because the loop is not 
                                          the innermost loop.
         0           660                  Loop was not SIMD vectorized because it contains 
                                          memory references ((char *)((char 
                                          *)this->(DMatrix).data@a8.rns304.  + (8ll * (($$CIV15 
                                          * this->(DMatrix).b@38.rns295.) * 
                                          this->(DMatrix).lda@40.rns303.) + 8ll * 
                                          ($$StripMember0[$$SCIX0] * 
                                          this->(DMatrix).b@38.rns295.))) + 
                                          (8ll)*((this->(DMatrix).lda@40.rns303. + 1ll) * 
                                          $$CIV13)) with  non-vectorizable strides.
         0           660                  Loop was not SIMD vectorized because the floating 
                                          point operation is not  vectorizable under -qstrict.
         0           660                  Loop was not SIMD vectorized because it contains 
                                          non-stride-one store  references ((char *)((char 
                                          *)this->(DMatrix).data@a8.rns304.  + (8ll * (($$CIV15 
                                          * this->(DMatrix).b@38.rns295.) * 
                                          this->(DMatrix).lda@40.rns303.) + 8ll * 
                                          ($$StripMember0[$$SCIX0] * 
                                          this->(DMatrix).b@38.rns295.))) + 
                                          (8ll)*((this->(DMatrix).lda@40.rns303. + 1ll) * 
                                          $$CIV13)).
         0           654            22    Loop was not SIMD vectorized because it contains 
                                          unsupported loop structure.
         0           654            22    Loop was not SIMD vectorized because it contains 
                                          control flow.

   670 |  char DMatrix::get_tp()(DMatrix *this)
          {
   671 |    rstr = (*((char *)((char *)this + 184)) != 0u ? 84u : 78u);
            return rstr;
   673 |  } /* function */ 


   680 |  char * DQRMatrix::DQRMatrix(DMatrix)(char * this, aggr200 A)
          {
            $$PARM.thisB9 = this;
    22 |    *((char * *)((char *)$$PARM.thisB9 + 168)) = NULL;
    23 |    *((char * *)((char *)$$PARM.thisB9 + 176)) = NULL;
    24 |    *((char * *)((char *)$$PARM.thisB9 + 192)) = NULL;
    25 |    $$IRET49 = $$PARM.thisB9;
   680 |    $$PARM.thisB8 = (this + 200);
    22 |    *((char * *)((char *)$$PARM.thisB8 + 168)) = NULL;
    23 |    *((char * *)((char *)$$PARM.thisB8 + 176)) = NULL;
    24 |    *((char * *)((char *)$$PARM.thisB8 + 192)) = NULL;
    25 |    $$IRET48 = $$PARM.thisB8;
   680 |    $$RET2A = DMatrix::get_contig()(&A)->(DMatrix).rns309.;
   688 |    *((aggr200 *)(this + 200)) = $$RET2A;
   689 |    pv_cpy = *((aggr92 *)(this + 72 + 200));
   721 |    QR_2D_pipe(double*, long, long, long, long, pview*, double*, long, double*, double*)(((char * *)(this + 168))[200 / 8],((long long *)(this + 64))[200 / 8],((long long *)(this + 40))[200 / 8],((long long *)(this + 48))[200 / 8],((long long *)(this + 56))[200 / 8],&pv_cpy,NULL,0ll,NULL,NULL)
   724 |    __156 = DMatrix::slice(long, long, long, long)((this + 200),0ll,((long long *)(this + 48))[200 / 8],0ll,((long long *)(this + 48))[200 / 8])->(DMatrix).rns312.;
            $$RET2B = DMatrix::get_contig()(&__156)->(DMatrix).rns314.;
            *((aggr200 *)this) = $$RET2B;
   725 |    DMatrix::zero_lower_tri()(this)
   726 |    DMatrix::zero_upper_tri()((this + 200))
   727 |    DMatrix::diag_scale_add(double, double)((this + 200), 0.0000000000000000E+000, 1.0000000000000000E+000)
   728 |    $$PARM.this9D = (this + 200);
   729 |    $$PARM.this9C = this;
   731 |    rstr = this;
            return rstr;
          } /* function */ 


   680 |  char * DQRMatrix::DQRMatrix(DMatrix)(char * this, aggr200 A)
          {
            $$PARM.thisB7 = this;
    22 |    *((char * *)((char *)$$PARM.thisB7 + 168)) = NULL;
    23 |    *((char * *)((char *)$$PARM.thisB7 + 176)) = NULL;
    24 |    *((char * *)((char *)$$PARM.thisB7 + 192)) = NULL;
    25 |    $$IRET47 = $$PARM.thisB7;
   680 |    $$PARM.thisB6 = (this + 200);
    22 |    *((char * *)((char *)$$PARM.thisB6 + 168)) = NULL;
    23 |    *((char * *)((char *)$$PARM.thisB6 + 176)) = NULL;
    24 |    *((char * *)((char *)$$PARM.thisB6 + 192)) = NULL;
    25 |    $$IRET46 = $$PARM.thisB6;
   680 |    $$RET2C = DMatrix::get_contig()(&A)->(DMatrix).rns325.;
   688 |    *((aggr200 *)(this + 200)) = $$RET2C;
   689 |    pv_cpy = *((aggr92 *)(this + 72 + 200));
   721 |    QR_2D_pipe(double*, long, long, long, long, pview*, double*, long, double*, double*)(((char * *)(this + 168))[200 / 8],((long long *)(this + 64))[200 / 8],((long long *)(this + 40))[200 / 8],((long long *)(this + 48))[200 / 8],((long long *)(this + 56))[200 / 8],&pv_cpy,NULL,0ll,NULL,NULL)
   724 |    __161 = DMatrix::slice(long, long, long, long)((this + 200),0ll,((long long *)(this + 48))[200 / 8],0ll,((long long *)(this + 48))[200 / 8])->(DMatrix).rns328.;
            $$RET2D = DMatrix::get_contig()(&__161)->(DMatrix).rns330.;
            *((aggr200 *)this) = $$RET2D;
   725 |    DMatrix::zero_lower_tri()(this)
   726 |    DMatrix::zero_upper_tri()((this + 200))
   727 |    DMatrix::diag_scale_add(double, double)((this + 200), 0.0000000000000000E+000, 1.0000000000000000E+000)
   728 |    $$PARM.this9B = (this + 200);
   729 |    $$PARM.this9A = this;
   731 |    rstr = this;
            return rstr;
          } /* function */ 


   733 |  char * DQRMatrix::~DQRMatrix()(char * this)
          {
   734 |    $$PARM.this96 = (this + 200);
    34 |    free(*((char * *)((char *)$$PARM.this96 + 176)))
    35 |    if (!(*((char * *)((char *)$$PARM.this96 + 192)) != NULL)) goto lab_3;
            free(*((char * *)((char *)$$PARM.this96 + 192)))
          lab_3:
   735 |    $$PARM.this95 = this;
    34 |    free(*((char * *)((char *)$$PARM.this95 + 176)))
    35 |    if (!(*((char * *)((char *)$$PARM.this95 + 192)) != NULL)) goto lab_1;
            free(*((char * *)((char *)$$PARM.this95 + 192)))
          lab_1:
   736 |    rstr = this;
            return rstr;
          } /* function */ 


   733 |  char * DQRMatrix::~DQRMatrix()(char * this)
          {
   734 |    $$PARM.this97 = (this + 200);
    34 |    free(*((char * *)((char *)$$PARM.this97 + 176)))
    35 |    if (!(*((char * *)((char *)$$PARM.this97 + 192)) != NULL)) goto lab_3;
            free(*((char * *)((char *)$$PARM.this97 + 192)))
          lab_3:
   735 |    $$PARM.this94 = this;
    34 |    free(*((char * *)((char *)$$PARM.this94 + 176)))
    35 |    if (!(*((char * *)((char *)$$PARM.this94 + 192)) != NULL)) goto lab_1;
            free(*((char * *)((char *)$$PARM.this94 + 192)))
          lab_1:
   736 |    rstr = this;
            return rstr;
          } /* function */ 


   742 |  aggr200 DQRMatrix::compute_invT()(DQRMatrix *this)
          {
   743 |    $$PARM.this93 = this;
   490 |    $$SFX19 = *((long long *)((char *)$$PARM.this93 + 40));
            $$SFX1A = *((long long *)((char *)$$PARM.this93 + 48));
            $$SFX1B = *((long long *)((char *)$$PARM.this93 + 56));
            $$PARM.this44 = $$PARM.this93;
   195 |    $$IRET36 = ((*((long long *)($$PARM.this44 + 40)) / *((long long *)($$PARM.this44 + 56))) / (long long) ((int *)($$PARM.this44 + 4))[100 / 4] + (long long) ((*((long long *)($$PARM.this44 + 40)) / *((long long *)($$PARM.this44 + 56))) % (long long) ((int *)($$PARM.this44 + 4))[100 / 4] > (long long) ((((int *)($$PARM.this44 + 8))[100 / 4] + (((int *)($$PARM.this44 + 4))[100 / 4] - ((int *)$$PARM.this44)[72 / 4])) % ((int *)($$PARM.this44 + 4))[100 / 4]))) * *((long long *)($$PARM.this44 + 56));
   490 |    $$RET29 = $$IRET36;
            $$PARM.this77 = &ctg;
            $$PARM.nrow_78 = $$SFX19;
            $$PARM.ncol_79 = $$SFX1A;
            $$PARM.b_7A = $$SFX1B;
            $$PARM.pv_7B = ($$PARM.this93 + 72);
            $$PARM.lda_7C = $$RET29;
            $$PARM.root_data_7D = NULL;
            $$PARM.data_7E = NULL;
            $$PARM.is_transp_7F = *((char *)((char *)$$PARM.this93 + 184));
    61 |    *((long long *)($$PARM.this77 + 40)) = $$PARM.nrow_78;
    62 |    *((long long *)($$PARM.this77 + 48)) = $$PARM.ncol_79;
    64 |    *((long long *)($$PARM.this77 + 56)) = $$PARM.b_7A;
    65 |    *((aggr92 *)($$PARM.this77 + 72)) = *$$PARM.pv_7B;
    66 |    *((char *)($$PARM.this77 + 184)) = $$PARM.is_transp_7F;
    67 |    if (!($$PARM.lda_7C != 0ll)) goto lab_4;
    68 |    *((long long *)($$PARM.this77 + 64)) = $$PARM.lda_7C;
            goto lab_5;
          lab_4:
    70 |    $$PARM.this33 = $$PARM.this77;
   195 |    $$IRET25 = ((*((long long *)($$PARM.this33 + 40)) / *((long long *)($$PARM.this33 + 56))) / (long long) ((int *)($$PARM.this33 + 4))[100 / 4] + (long long) ((*((long long *)($$PARM.this33 + 40)) / *((long long *)($$PARM.this33 + 56))) % (long long) ((int *)($$PARM.this33 + 4))[100 / 4] > (long long) ((((int *)($$PARM.this33 + 8))[100 / 4] + (((int *)($$PARM.this33 + 4))[100 / 4] - ((int *)$$PARM.this33)[72 / 4])) % ((int *)($$PARM.this33 + 4))[100 / 4]))) * *((long long *)($$PARM.this33 + 56));
    70 |    $$RET8 = $$IRET25;
            *((long long *)($$PARM.this77 + 64)) = $$RET8;
          lab_5:
    71 |    if (!($$PARM.data_7E == NULL)) goto lab_7;
            $$PARM.this28 = $$PARM.this77;
   202 |    $$IRET1A = ((*((long long *)($$PARM.this28 + 48)) / *((long long *)($$PARM.this28 + 56))) / (long long) ((int *)($$PARM.this28 + 4))[80 / 4] + (long long) ((*((long long *)($$PARM.this28 + 48)) / *((long long *)($$PARM.this28 + 56))) % (long long) ((int *)($$PARM.this28 + 4))[80 / 4] > (long long) ((((int *)($$PARM.this28 + 8))[80 / 4] + (((int *)($$PARM.this28 + 4))[80 / 4] - ((int *)($$PARM.this28 + 4))[72 / 4])) % ((int *)($$PARM.this28 + 4))[80 / 4]))) * *((long long *)($$PARM.this28 + 56));
    71 |    $$RET9 = (unsigned long long) $$IRET1A;
            $$RETA = malloc(8ull * ((unsigned long long) *((long long *)($$PARM.this77 + 64)) * $$RET9));
    72 |    *((char * *)($$PARM.this77 + 168)) = $$RETA;
    73 |    *((char * *)($$PARM.this77 + 176)) = $$RETA;
    75 |    goto lab_9;
          lab_7:
    76 |    *((char * *)($$PARM.this77 + 168)) = $$PARM.data_7E;
    77 |    *((char * *)($$PARM.this77 + 176)) = $$PARM.root_data_7D;
    79 |  lab_9:
    80 |    *((char * *)($$PARM.this77 + 192)) = NULL;
    81 |    cdescinit(int*, int, int, int, int, int, int, int, int, int*)($$PARM.this77,(int) *((long long *)($$PARM.this77 + 40)),(int) *((long long *)($$PARM.this77 + 48)),(int) *((long long *)($$PARM.this77 + 56)),(int) *((long long *)($$PARM.this77 + 56)),((int *)$$PARM.this77)[72 / 4],((int *)($$PARM.this77 + 4))[72 / 4],((int *)($$PARM.this77 + 88))[72 / 4],(int) *((long long *)($$PARM.this77 + 64)),&info)
    86 |    $$IRET41 = $$PARM.this77;
   491 |    $$PARM.name_1B = *((char * *)((char *)$$PARM.this93 + 192));
   124 |    if (!($$PARM.name_1B != NULL)) goto lab_11;
            $$RET10 = __builtin_strlen($$PARM.name_1B);
            $$RET11 = malloc($$RET10 + 1ull);
   125 |    &ctg->(DMatrix).name@c0.rns79.$$161$$241 = $$RET11;
   126 |    __builtin_strcpy($$RET11,$$PARM.name_1B);
   127 |  lab_11:
   492 |    $$IRET45 = ctg;
   743 |    T = &$$IRET45->(DMatrix).rns344.;
   744 |    $$PARM.name_19 = "T";
   124 |    if (!($$PARM.name_19 != NULL)) goto lab_1;
            $$RET10 = __builtin_strlen($$PARM.name_19);
            $$RET11 = malloc($$RET10 + 1ull);
   125 |    &T->(DMatrix).name@c0.rns79.$$242 = $$RET11;
   126 |    __builtin_strcpy($$RET11,$$PARM.name_19);
   127 |  lab_1:
   745 |    cpdsyrk(DMatrix, double, DMatrix, double)(*((aggr200 *)((char *)this + 200)), 1.0000000000000000E+000,T, 0.0000000000000000E+000)
   746 |    DMatrix::zero_upper_tri()(&T)
   747 |    DMatrix::diag_scale_add(double, double)(&T, 5.0000000000000000E-001, 0.0000000000000000E+000)
   748 |    rstr = T;
            return rstr;
   749 |  } /* function */ 


   754 |  void cpdgemm(DMatrix, DMatrix, double, DMatrix, double)(aggr200 A, aggr200 B, double alpha, aggr200 C, double beta)
   758 |  {
            __es.__l@0 = 0;
            __es.__t@8 = &__fsm_tab;
            __es.__this@10 = NULL;
            __es.__i@18 = 0;
            guard___func__9 = 1;
   760 |    __builtin_strcpy(&pname,"cpdgemm ");
   761 |    if (!(C.name@c0 != NULL)) goto lab_2;
   762 |    __builtin_strcat(&pname,C.name@c0);
            goto lab_4;
          lab_2:
   764 |    __builtin_strcat(&pname,"?");
          lab_4:
   765 |    __builtin_strcat(&pname," <- ");
   766 |    if (!(A.name@c0 != NULL)) goto lab_5;
   767 |    __builtin_strcat(&pname,A.name@c0);
            goto lab_7;
          lab_5:
   769 |    __builtin_strcat(&pname,"?");
          lab_7:
   770 |    __builtin_strcat(&pname," * ");
   771 |    if (!(B.name@c0 != NULL)) goto lab_8;
   772 |    __builtin_strcat(&pname,B.name@c0);
            goto lab_10;
          lab_8:
   774 |    __builtin_strcat(&pname,"?");
          lab_10:
   775 |    CTF_Timer::CTF_Timer(char const*)(&tmr,&pname);
            __es.__c4@3 = 1u;
   776 |    CTF_Timer::start()(&tmr)
   778 |    if (0 == (int) C.is_transp@b8) goto lab_18;
            __assert_fail("C.is_transp == false","dmatrix.cxx",778u,&__func__)
            return;
          lab_18:
   780 |    k.rnn38 = (A.is_transp@b8 != 0u ? A.nrow@28 : A.ncol@30);
   671 |    $$IRETE = (A.is_transp@b8 != 0u ? 84u : 78u);
   783 |    $$SFX1C = $$IRETE;
   671 |    $$IRETF = (&B->(DMatrix).is_transp@b8.rns305.$$255 != 0u ? 84u : 78u);
   783 |    $$SFX1D = $$IRETF;
            $$SFX1E = (int) C.nrow@28;
            $$SFX1F = (int) C.ncol@30;
   135 |    $$IRET8 = &A->(DMatrix).data@a8.rns81.$$256;
   783 |    $$RET2E = $$IRET8;
   135 |    $$IRETD = &B->(DMatrix).data@a8.rns81.$$257;
   783 |    $$RET2F = $$IRETD;
   135 |    $$IRETC = &C->(DMatrix).data@a8.rns81.$$258;
   783 |    $$RET30 = $$IRETC;
            cpdgemm(char, char, int, int, int, double, double*, int, int, int*, double*, int, int, int*, double, double*, int, int, int*)($$SFX1C,$$SFX1D,$$SFX1E,$$SFX1F,(int) k.rnn38,alpha,$$RET2E,1,1,&A.desc@0,$$RET2F,1,1,&B.desc@0,beta,$$RET30,1,1,&C.desc@0)
   785 |    CTF_Timer::stop()(&tmr)
   786 |    __es.__c4@3 = 0u;
            CTF_Timer::~CTF_Timer()(&tmr);
            return;
          } /* function */ 


   791 |  void cpdsyrk(DMatrix, double, DMatrix, double)(aggr200 A, double alpha, aggr200 C, double beta)
   794 |  {
            __es.__l@0 = 0;
            __es.__t@8 = &__fsm_tab;
            __es.__this@10 = NULL;
            __es.__i@18 = 0;
            guard___func__8 = 1;
   796 |    __builtin_strcpy(&pname,"cpdsyrk ");
   797 |    if (!(C.name@c0 != NULL)) goto lab_2;
   798 |    __builtin_strcat(&pname,C.name@c0);
            goto lab_4;
          lab_2:
   800 |    __builtin_strcat(&pname,"?");
          lab_4:
   801 |    __builtin_strcat(&pname,"<-");
   802 |    if (!(A.name@c0 != NULL)) goto lab_5;
   803 |    __builtin_strcat(&pname,A.name@c0);
            goto lab_7;
          lab_5:
   805 |    __builtin_strcat(&pname,"?");
          lab_7:
   806 |    __builtin_strcat(&pname,"^2");
   807 |    CTF_Timer::CTF_Timer(char const*)(&tmr,&pname);
            __es.__c4@3 = 1u;
   808 |    CTF_Timer::start()(&tmr)
   810 |    if (0 == (int) C.is_transp@b8) goto lab_15;
            __assert_fail("C.is_transp == false","dmatrix.cxx",810u,&__func__)
            return;
          lab_15:
   814 |    if (!(A.is_transp@b8 != 0u)) goto lab_26;
            __assert_fail("!A.is_transp","dmatrix.cxx",814u,&__func__)
            return;
          lab_26:
   812 |    K = (int) (A.is_transp@b8 != 0u ? A.ncol@30 : A.nrow@28);
   815 |    $$SFX20 = (int) C.nrow@28;
   135 |    $$IRET3 = &A->(DMatrix).data@a8.rns81.$$273;
   815 |    $$RET31 = $$IRET3;
   135 |    $$IRET7 = &C->(DMatrix).data@a8.rns81.$$274;
   815 |    $$RET32 = $$IRET7;
            cpdsyrk(char, char, int, int, double, double const*, int, int, int*, double, double*, int, int, int*)(76u,84u,$$SFX20,K,alpha,$$RET31,1,1,&A.desc@0,beta,$$RET32,1,1,&C.desc@0)
   817 |    CTF_Timer::stop()(&tmr)
   818 |    __es.__c4@3 = 0u;
            CTF_Timer::~CTF_Timer()(&tmr);
            return;
          } /* function */ 


   823 |  void cpdtrsm(DMatrix, double, DMatrix)(aggr200 A, double alpha, aggr200 B)
   825 |  {
            __es.__l@0 = 0;
            __es.__t@8 = &__fsm_tab;
            __es.__this@10 = NULL;
            __es.__i@18 = 0;
            guard___func__6 = 1;
   827 |    __builtin_strcpy(&pname,"cpdtrsm ");
   828 |    if (!(A.name@c0 != NULL)) goto lab_2;
   829 |    __builtin_strcat(&pname,A.name@c0);
          lab_2:
   830 |    __builtin_strcat(&pname," ");
   831 |    if (!(B.name@c0 != NULL)) goto lab_4;
   832 |    __builtin_strcat(&pname,B.name@c0);
          lab_4:
   833 |    CTF_Timer::CTF_Timer(char const*)(&tmr,&pname);
            __es.__c4@3 = 1u;
   834 |    CTF_Timer::start()(&tmr)
   836 |    if (0 == (int) A.is_transp@b8) goto lab_13;
            __assert_fail("A.is_transp == false","dmatrix.cxx",836u,&__func__)
            return;
          lab_13:
   837 |    if (0 == (int) B.is_transp@b8) goto lab_21;
            __assert_fail("B.is_transp == false","dmatrix.cxx",837u,&__func__)
            return;
          lab_21:
   838 |    $$SFX21 = (int) B.nrow@28;
            $$SFX22 = (int) B.ncol@30;
   135 |    $$IRET9 = &A->(DMatrix).data@a8.rns81.$$286;
   838 |    $$RET33 = $$IRET9;
   135 |    $$IRET2 = &B->(DMatrix).data@a8.rns81.$$287;
   838 |    $$RET34 = $$IRET2;
            cpdtrsm(char, char, char, char, int, int, double, double const*, int, int, int*, double*, int, int, int*)(82u,76u,78u,78u,$$SFX21,$$SFX22,alpha,$$RET33,1,1,&A.desc@0,$$RET34,1,1,&B.desc@0)
   840 |    CTF_Timer::stop()(&tmr)
   841 |    __es.__c4@3 = 0u;
            CTF_Timer::~CTF_Timer()(&tmr);
            return;
          } /* function */ 


   460 |  void void lda_cpy<double>(int, int, int, int, double const*, double*)(int nrow, int ncol, int lda_A, int lda_B, char * A, char * B)
   462 |  {
   463 |    if (!(lda_A == nrow)) goto lab_1;
            if (!(lda_B == nrow)) goto lab_1;
   464 |    __builtin_memcpy(B,A,(unsigned long long) (nrow * ncol) * 8ull);
   465 |    goto lab_4;
          lab_1:
   467 |    if (!(0 < ncol)) goto lab_7;
            $$CIV16 = 0ll;
            do {   /* id=1 guarded */ /* ~5 */ 
              /* region = 13 */
              /* bump-normalized */
   468 |      __builtin_memcpy(((char *)B  + ((long long) lda_B * $$CIV16) * 8ll),((char *)A  + ((long long) lda_A * $$CIV16) * 8ll),(unsigned long long) nrow * 8ull);
   467 |      $$CIV16 = $$CIV16 + 1ll;
            } while ((unsigned long long) $$CIV16 < (unsigned long long) ((long long) ncol));    /* ~5 */
          lab_7:
   470 |  lab_4:
   471 |    return;
          } /* function */ 



Source        Source        Loop Id       Action / Information                                      
File          Line                                                                                  
----------    ----------    ----------    ----------------------------------------------------------
       114           467             1    Loop was not SIMD vectorized because it contains 
                                          function calls.

          void __sinit65535()()
          {
    72 |    std::ios_base::Init::Init()(&__ioinit);
            __cxa_atexit(&__srterm__0(),NULL,&__dso_handle);
            return;
          } /* function */ 


          void __srterm__0()()
          {
    72 |    std::ios_base::Init::~Init()(&__ioinit);
            return;
          } /* function */ 


    21 |  char * DMatrix::DMatrix()(DMatrix *this)
          {
    22 |    *((char * *)((char *)this + 168)) = NULL;
    23 |    *((char * *)((char *)this + 176)) = NULL;
    24 |    *((char * *)((char *)this + 192)) = NULL;
    25 |    rstr = this;
            return rstr;
          } /* function */ 


    21 |  char * DMatrix::DMatrix()(DMatrix *this)
          {
    22 |    *((char * *)((char *)this + 168)) = NULL;
    23 |    *((char * *)((char *)this + 176)) = NULL;
    24 |    *((char * *)((char *)this + 192)) = NULL;
    25 |    rstr = this;
            return rstr;
          } /* function */ 


    51 |  char * DMatrix::DMatrix(long, long, long, pview const&, long, double*, double*, bool)(char * this, long long nrow_, long long ncol_, long long b_, pview *pv_, long long lda_, char * root_data_, char * data_, char is_transp_)
    58 |  {
    61 |    *((long long *)(this + 40)) = nrow_;
    62 |    *((long long *)(this + 48)) = ncol_;
    64 |    *((long long *)(this + 56)) = b_;
    65 |    *((aggr92 *)(this + 72)) = *pv_;
    66 |    *((char *)(this + 184)) = is_transp_;
    67 |    if (!(lda_ != 0ll)) goto lab_1;
    68 |    *((long long *)(this + 64)) = lda_;
            goto lab_3;
          lab_1:
    70 |    $$PARM.this40 = this;
   195 |    $$IRET32 = ((*((long long *)($$PARM.this40 + 40)) / *((long long *)($$PARM.this40 + 56))) / (long long) ((int *)($$PARM.this40 + 4))[100 / 4] + (long long) ((*((long long *)($$PARM.this40 + 40)) / *((long long *)($$PARM.this40 + 56))) % (long long) ((int *)($$PARM.this40 + 4))[100 / 4] > (long long) ((((int *)($$PARM.this40 + 8))[100 / 4] + (((int *)($$PARM.this40 + 4))[100 / 4] - ((int *)$$PARM.this40)[72 / 4])) % ((int *)($$PARM.this40 + 4))[100 / 4]))) * *((long long *)($$PARM.this40 + 56));
    70 |    $$RET0 = $$IRET32;
            *((long long *)(this + 64)) = $$RET0;
          lab_3:
    71 |    if (!(data_ == NULL)) goto lab_4;
            $$PARM.this2D = this;
   202 |    $$IRET1F = ((*((long long *)($$PARM.this2D + 48)) / *((long long *)($$PARM.this2D + 56))) / (long long) ((int *)($$PARM.this2D + 4))[80 / 4] + (long long) ((*((long long *)($$PARM.this2D + 48)) / *((long long *)($$PARM.this2D + 56))) % (long long) ((int *)($$PARM.this2D + 4))[80 / 4] > (long long) ((((int *)($$PARM.this2D + 8))[80 / 4] + (((int *)($$PARM.this2D + 4))[80 / 4] - ((int *)($$PARM.this2D + 4))[72 / 4])) % ((int *)($$PARM.this2D + 4))[80 / 4]))) * *((long long *)($$PARM.this2D + 56));
    71 |    $$RET1 = (unsigned long long) $$IRET1F;
            $$RET2 = malloc(8ull * ((unsigned long long) *((long long *)(this + 64)) * $$RET1));
    72 |    *((char * *)(this + 168)) = $$RET2;
    73 |    *((char * *)(this + 176)) = $$RET2;
    75 |    goto lab_6;
          lab_4:
    76 |    *((char * *)(this + 168)) = data_;
    77 |    *((char * *)(this + 176)) = root_data_;
    79 |  lab_6:
    80 |    *((char * *)(this + 192)) = NULL;
    81 |    cdescinit(int*, int, int, int, int, int, int, int, int, int*)(this,(int) *((long long *)(this + 40)),(int) *((long long *)(this + 48)),(int) *((long long *)(this + 56)),(int) *((long long *)(this + 56)),((int *)this)[72 / 4],((int *)(this + 4))[72 / 4],((int *)(this + 88))[72 / 4],(int) *((long long *)(this + 64)),&info)
    86 |    rstr = this;
            return rstr;
          } /* function */ 


    98 |  char * DMatrix::DMatrix(long, long, long, pview const&, char const*)(char * this, long long nrow_, long long ncol_, long long b_, pview *pv_, char * name_)
   102 |  {
   104 |    *((long long *)(this + 40)) = nrow_;
   105 |    *((long long *)(this + 48)) = ncol_;
   106 |    *((long long *)(this + 56)) = b_;
   107 |    *((aggr92 *)(this + 72)) = *pv_;
   108 |    *((char *)(this + 184)) = 0u;
            $$PARM.this41 = this;
   195 |    $$IRET33 = ((*((long long *)($$PARM.this41 + 40)) / *((long long *)($$PARM.this41 + 56))) / (long long) ((int *)($$PARM.this41 + 4))[100 / 4] + (long long) ((*((long long *)($$PARM.this41 + 40)) / *((long long *)($$PARM.this41 + 56))) % (long long) ((int *)($$PARM.this41 + 4))[100 / 4] > (long long) ((((int *)($$PARM.this41 + 8))[100 / 4] + (((int *)($$PARM.this41 + 4))[100 / 4] - ((int *)$$PARM.this41)[72 / 4])) % ((int *)($$PARM.this41 + 4))[100 / 4]))) * *((long long *)($$PARM.this41 + 56));
   108 |    $$RET3 = $$IRET33;
   109 |    *((long long *)(this + 64)) = $$RET3;
            $$PARM.this2F = this;
   202 |    $$IRET21 = ((*((long long *)($$PARM.this2F + 48)) / *((long long *)($$PARM.this2F + 56))) / (long long) ((int *)($$PARM.this2F + 4))[80 / 4] + (long long) ((*((long long *)($$PARM.this2F + 48)) / *((long long *)($$PARM.this2F + 56))) % (long long) ((int *)($$PARM.this2F + 4))[80 / 4] > (long long) ((((int *)($$PARM.this2F + 8))[80 / 4] + (((int *)($$PARM.this2F + 4))[80 / 4] - ((int *)($$PARM.this2F + 4))[72 / 4])) % ((int *)($$PARM.this2F + 4))[80 / 4]))) * *((long long *)($$PARM.this2F + 56));
   109 |    $$RET4 = (unsigned long long) $$IRET21;
            $$RET5 = malloc(8ull * ((unsigned long long) *((long long *)(this + 64)) * $$RET4));
   110 |    *((char * *)(this + 168)) = $$RET5;
   111 |    *((char * *)(this + 176)) = $$RET5;
            $$RET6 = __builtin_strlen(name_);
            $$RET7 = malloc($$RET6 + 1ull);
   112 |    *((char * *)(this + 192)) = $$RET7;
   113 |    __builtin_strcpy($$RET7,name_);
   114 |    cdescinit(int*, int, int, int, int, int, int, int, int, int*)(this,(int) *((long long *)(this + 40)),(int) *((long long *)(this + 48)),(int) *((long long *)(this + 56)),(int) *((long long *)(this + 56)),((int *)this)[72 / 4],((int *)(this + 4))[72 / 4],((int *)(this + 88))[72 / 4],(int) *((long long *)(this + 64)),&info)
   120 |    rstr = this;
            return rstr;
          } /* function */ 


    33 |  void DMatrix::destroy()(DMatrix *this)
          {
    34 |    free(*((char * *)((char *)this + 176)))
    35 |    if (!(*((char * *)((char *)this + 192)) != NULL)) goto lab_1;
            free(*((char * *)((char *)this + 192)))
          lab_1:
    36 |    return;
          } /* function */ 


    51 |  char * DMatrix::DMatrix(long, long, long, pview const&, long, double*, double*, bool)(char * this, long long nrow_, long long ncol_, long long b_, pview *pv_, long long lda_, char * root_data_, char * data_, char is_transp_)
    58 |  {
    61 |    *((long long *)(this + 40)) = nrow_;
    62 |    *((long long *)(this + 48)) = ncol_;
    64 |    *((long long *)(this + 56)) = b_;
    65 |    *((aggr92 *)(this + 72)) = *pv_;
    66 |    *((char *)(this + 184)) = is_transp_;
    67 |    if (!(lda_ != 0ll)) goto lab_1;
    68 |    *((long long *)(this + 64)) = lda_;
            goto lab_3;
          lab_1:
    70 |    $$PARM.this33 = this;
   195 |    $$IRET25 = ((*((long long *)($$PARM.this33 + 40)) / *((long long *)($$PARM.this33 + 56))) / (long long) ((int *)($$PARM.this33 + 4))[100 / 4] + (long long) ((*((long long *)($$PARM.this33 + 40)) / *((long long *)($$PARM.this33 + 56))) % (long long) ((int *)($$PARM.this33 + 4))[100 / 4] > (long long) ((((int *)($$PARM.this33 + 8))[100 / 4] + (((int *)($$PARM.this33 + 4))[100 / 4] - ((int *)$$PARM.this33)[72 / 4])) % ((int *)($$PARM.this33 + 4))[100 / 4]))) * *((long long *)($$PARM.this33 + 56));
    70 |    $$RET8 = $$IRET25;
            *((long long *)(this + 64)) = $$RET8;
          lab_3:
    71 |    if (!(data_ == NULL)) goto lab_4;
            $$PARM.this28 = this;
   202 |    $$IRET1A = ((*((long long *)($$PARM.this28 + 48)) / *((long long *)($$PARM.this28 + 56))) / (long long) ((int *)($$PARM.this28 + 4))[80 / 4] + (long long) ((*((long long *)($$PARM.this28 + 48)) / *((long long *)($$PARM.this28 + 56))) % (long long) ((int *)($$PARM.this28 + 4))[80 / 4] > (long long) ((((int *)($$PARM.this28 + 8))[80 / 4] + (((int *)($$PARM.this28 + 4))[80 / 4] - ((int *)($$PARM.this28 + 4))[72 / 4])) % ((int *)($$PARM.this28 + 4))[80 / 4]))) * *((long long *)($$PARM.this28 + 56));
    71 |    $$RET9 = (unsigned long long) $$IRET1A;
            $$RETA = malloc(8ull * ((unsigned long long) *((long long *)(this + 64)) * $$RET9));
    72 |    *((char * *)(this + 168)) = $$RETA;
    73 |    *((char * *)(this + 176)) = $$RETA;
    75 |    goto lab_6;
          lab_4:
    76 |    *((char * *)(this + 168)) = data_;
    77 |    *((char * *)(this + 176)) = root_data_;
    79 |  lab_6:
    80 |    *((char * *)(this + 192)) = NULL;
    81 |    cdescinit(int*, int, int, int, int, int, int, int, int, int*)(this,(int) *((long long *)(this + 40)),(int) *((long long *)(this + 48)),(int) *((long long *)(this + 56)),(int) *((long long *)(this + 56)),((int *)this)[72 / 4],((int *)(this + 4))[72 / 4],((int *)(this + 88))[72 / 4],(int) *((long long *)(this + 64)),&info)
    86 |    rstr = this;
            return rstr;
          } /* function */ 


    98 |  char * DMatrix::DMatrix(long, long, long, pview const&, char const*)(char * this, long long nrow_, long long ncol_, long long b_, pview *pv_, char * name_)
   102 |  {
   104 |    *((long long *)(this + 40)) = nrow_;
   105 |    *((long long *)(this + 48)) = ncol_;
   106 |    *((long long *)(this + 56)) = b_;
   107 |    *((aggr92 *)(this + 72)) = *pv_;
   108 |    *((char *)(this + 184)) = 0u;
            $$PARM.this42 = this;
   195 |    $$IRET34 = ((*((long long *)($$PARM.this42 + 40)) / *((long long *)($$PARM.this42 + 56))) / (long long) ((int *)($$PARM.this42 + 4))[100 / 4] + (long long) ((*((long long *)($$PARM.this42 + 40)) / *((long long *)($$PARM.this42 + 56))) % (long long) ((int *)($$PARM.this42 + 4))[100 / 4] > (long long) ((((int *)($$PARM.this42 + 8))[100 / 4] + (((int *)($$PARM.this42 + 4))[100 / 4] - ((int *)$$PARM.this42)[72 / 4])) % ((int *)($$PARM.this42 + 4))[100 / 4]))) * *((long long *)($$PARM.this42 + 56));
   108 |    $$RETB = $$IRET34;
   109 |    *((long long *)(this + 64)) = $$RETB;
            $$PARM.this2A = this;
   202 |    $$IRET1C = ((*((long long *)($$PARM.this2A + 48)) / *((long long *)($$PARM.this2A + 56))) / (long long) ((int *)($$PARM.this2A + 4))[80 / 4] + (long long) ((*((long long *)($$PARM.this2A + 48)) / *((long long *)($$PARM.this2A + 56))) % (long long) ((int *)($$PARM.this2A + 4))[80 / 4] > (long long) ((((int *)($$PARM.this2A + 8))[80 / 4] + (((int *)($$PARM.this2A + 4))[80 / 4] - ((int *)($$PARM.this2A + 4))[72 / 4])) % ((int *)($$PARM.this2A + 4))[80 / 4]))) * *((long long *)($$PARM.this2A + 56));
   109 |    $$RETC = (unsigned long long) $$IRET1C;
            $$RETD = malloc(8ull * ((unsigned long long) *((long long *)(this + 64)) * $$RETC));
   110 |    *((char * *)(this + 168)) = $$RETD;
   111 |    *((char * *)(this + 176)) = $$RETD;
            $$RETE = __builtin_strlen(name_);
            $$RETF = malloc($$RETE + 1ull);
   112 |    *((char * *)(this + 192)) = $$RETF;
   113 |    __builtin_strcpy($$RETF,name_);
   114 |    cdescinit(int*, int, int, int, int, int, int, int, int, int*)(this,(int) *((long long *)(this + 40)),(int) *((long long *)(this + 48)),(int) *((long long *)(this + 56)),(int) *((long long *)(this + 56)),((int *)this)[72 / 4],((int *)(this + 4))[72 / 4],((int *)(this + 88))[72 / 4],(int) *((long long *)(this + 64)),&info)
   120 |    rstr = this;
            return rstr;
          } /* function */ 


   123 |  void DMatrix::set_name(char const*)(DMatrix *this, char * name_)
          {
   124 |    if (!(name_ != NULL)) goto lab_1;
            $$RET10 = __builtin_strlen(name_);
            $$RET11 = malloc($$RET10 + 1ull);
   125 |    *((char * *)((char *)this + 192)) = $$RET11;
   126 |    __builtin_strcpy($$RET11,name_);
   127 |  lab_1:
   128 |    return;
          } /* function */ 


   134 |  char * DMatrix::operator double*() const(DMatrix *this)
          {
   135 |    rstr = *((char * *)((char *)this + 168));
            return rstr;
   136 |  } /* function */ 


   141 |  void DMatrix::print()(char * this)
          {
   189 |    return;
          } /* function */ 


   194 |  long long DMatrix::get_mynrow()(char * this)
          {
   195 |    rstr = ((*((long long *)(this + 40)) / *((long long *)(this + 56))) / (long long) ((int *)(this + 4))[100 / 4] + (long long) ((*((long long *)(this + 40)) / *((long long *)(this + 56))) % (long long) ((int *)(this + 4))[100 / 4] > (long long) ((((int *)(this + 8))[100 / 4] + (((int *)(this + 4))[100 / 4] - ((int *)this)[72 / 4])) % ((int *)(this + 4))[100 / 4]))) * *((long long *)(this + 56));
            return rstr;
   196 |  } /* function */ 


   201 |  long long DMatrix::get_myncol()(char * this)
          {
   202 |    rstr = ((*((long long *)(this + 48)) / *((long long *)(this + 56))) / (long long) ((int *)(this + 4))[80 / 4] + (long long) ((*((long long *)(this + 48)) / *((long long *)(this + 56))) % (long long) ((int *)(this + 4))[80 / 4] > (long long) ((((int *)(this + 8))[80 / 4] + (((int *)(this + 4))[80 / 4] - ((int *)(this + 4))[72 / 4])) % ((int *)(this + 4))[80 / 4]))) * *((long long *)(this + 56));
            return rstr;
   203 |  } /* function */ 


   208 |  long long DMatrix::get_mysize()(char * this)
          {
   209 |    $$PARM.this34 = this;
   195 |    $$IRET26 = ((*((long long *)($$PARM.this34 + 40)) / *((long long *)($$PARM.this34 + 56))) / (long long) ((int *)($$PARM.this34 + 4))[100 / 4] + (long long) ((*((long long *)($$PARM.this34 + 40)) / *((long long *)($$PARM.this34 + 56))) % (long long) ((int *)($$PARM.this34 + 4))[100 / 4] > (long long) ((((int *)($$PARM.this34 + 8))[100 / 4] + (((int *)($$PARM.this34 + 4))[100 / 4] - ((int *)$$PARM.this34)[72 / 4])) % ((int *)($$PARM.this34 + 4))[100 / 4]))) * *((long long *)($$PARM.this34 + 56));
   209 |    $$SFX0 = $$IRET26;
            $$PARM.this1F = this;
   202 |    $$IRET11 = ((*((long long *)($$PARM.this1F + 48)) / *((long long *)($$PARM.this1F + 56))) / (long long) ((int *)($$PARM.this1F + 4))[80 / 4] + (long long) ((*((long long *)($$PARM.this1F + 48)) / *((long long *)($$PARM.this1F + 56))) % (long long) ((int *)($$PARM.this1F + 4))[80 / 4] > (long long) ((((int *)($$PARM.this1F + 8))[80 / 4] + (((int *)($$PARM.this1F + 4))[80 / 4] - ((int *)($$PARM.this1F + 4))[72 / 4])) % ((int *)($$PARM.this1F + 4))[80 / 4]))) * *((long long *)($$PARM.this1F + 56));
   209 |    $$RET12 = $$IRET11;
            rstr = $$RET12 * $$SFX0;
            return rstr;
   210 |  } /* function */ 


   219 |  void DMatrix::move_ptr(long, long)(DMatrix *this, long long mrow, long long mcol)
   220 |  {
   221 |    slc = DMatrix::slice(long, long, long, long)(this,mrow,*((long long *)((char *)this + 40)) - mrow,mcol,*((long long *)((char *)this + 48)) - mcol)->(DMatrix).rns95.;
   222 |    *this = slc;
   223 |    return;
          } /* function */ 


   232 |  void DMatrix::move_ptr(long, long, long, long)(DMatrix *this, long long firstrow, long long numrows, long long firstcol, long long numcols)
   235 |  {
   236 |    slc = DMatrix::slice(long, long, long, long)(this,firstrow,numrows,firstcol,numcols)->(DMatrix).rns99.;
   237 |    *this = slc;
   238 |    return;
          } /* function */ 


   243 |  aggr200 DMatrix::transp()(DMatrix *this)
          {
   244 |    $$PARM.this80 = &mat;
            $$PARM.nrow_81 = *((long long *)((char *)this + 40));
            $$PARM.ncol_82 = *((long long *)((char *)this + 48));
            $$PARM.b_83 = *((long long *)((char *)this + 56));
            $$PARM.pv_84 = (this + 72);
            $$PARM.lda_85 = *((long long *)((char *)this + 64));
            $$PARM.root_data_86 = *((char * *)((char *)this + 176));
            $$PARM.data_87 = *((char * *)((char *)this + 168));
            $$PARM.is_transp_88 = (char) (0u == *((char *)((char *)this + 184)));
    61 |    *((long long *)($$PARM.this80 + 40)) = $$PARM.nrow_81;
    62 |    *((long long *)($$PARM.this80 + 48)) = $$PARM.ncol_82;
    64 |    *((long long *)($$PARM.this80 + 56)) = $$PARM.b_83;
    65 |    *((aggr92 *)($$PARM.this80 + 72)) = *$$PARM.pv_84;
    66 |    *((char *)($$PARM.this80 + 184)) = $$PARM.is_transp_88;
    67 |    if (!($$PARM.lda_85 != 0ll)) goto lab_3;
    68 |    *((long long *)($$PARM.this80 + 64)) = $$PARM.lda_85;
            goto lab_4;
          lab_3:
    70 |    $$PARM.this33 = $$PARM.this80;
   195 |    $$IRET25 = ((*((long long *)($$PARM.this33 + 40)) / *((long long *)($$PARM.this33 + 56))) / (long long) ((int *)($$PARM.this33 + 4))[100 / 4] + (long long) ((*((long long *)($$PARM.this33 + 40)) / *((long long *)($$PARM.this33 + 56))) % (long long) ((int *)($$PARM.this33 + 4))[100 / 4] > (long long) ((((int *)($$PARM.this33 + 8))[100 / 4] + (((int *)($$PARM.this33 + 4))[100 / 4] - ((int *)$$PARM.this33)[72 / 4])) % ((int *)($$PARM.this33 + 4))[100 / 4]))) * *((long long *)($$PARM.this33 + 56));
    70 |    $$RET8 = $$IRET25;
            *((long long *)($$PARM.this80 + 64)) = $$RET8;
          lab_4:
    71 |    if (!($$PARM.data_87 == NULL)) goto lab_6;
            $$PARM.this28 = $$PARM.this80;
   202 |    $$IRET1A = ((*((long long *)($$PARM.this28 + 48)) / *((long long *)($$PARM.this28 + 56))) / (long long) ((int *)($$PARM.this28 + 4))[80 / 4] + (long long) ((*((long long *)($$PARM.this28 + 48)) / *((long long *)($$PARM.this28 + 56))) % (long long) ((int *)($$PARM.this28 + 4))[80 / 4] > (long long) ((((int *)($$PARM.this28 + 8))[80 / 4] + (((int *)($$PARM.this28 + 4))[80 / 4] - ((int *)($$PARM.this28 + 4))[72 / 4])) % ((int *)($$PARM.this28 + 4))[80 / 4]))) * *((long long *)($$PARM.this28 + 56));
    71 |    $$RET9 = (unsigned long long) $$IRET1A;
            $$RETA = malloc(8ull * ((unsigned long long) *((long long *)($$PARM.this80 + 64)) * $$RET9));
    72 |    *((char * *)($$PARM.this80 + 168)) = $$RETA;
    73 |    *((char * *)($$PARM.this80 + 176)) = $$RETA;
    75 |    goto lab_8;
          lab_6:
    76 |    *((char * *)($$PARM.this80 + 168)) = $$PARM.data_87;
    77 |    *((char * *)($$PARM.this80 + 176)) = $$PARM.root_data_86;
    79 |  lab_8:
    80 |    *((char * *)($$PARM.this80 + 192)) = NULL;
    81 |    cdescinit(int*, int, int, int, int, int, int, int, int, int*)($$PARM.this80,(int) *((long long *)($$PARM.this80 + 40)),(int) *((long long *)($$PARM.this80 + 48)),(int) *((long long *)($$PARM.this80 + 56)),(int) *((long long *)($$PARM.this80 + 56)),((int *)$$PARM.this80)[72 / 4],((int *)($$PARM.this80 + 4))[72 / 4],((int *)($$PARM.this80 + 88))[72 / 4],(int) *((long long *)($$PARM.this80 + 64)),&info)
    86 |    $$IRET42 = $$PARM.this80;
   245 |    $$PARM.name_13 = *((char * *)((char *)this + 192));
   124 |    if (!($$PARM.name_13 != NULL)) goto lab_1;
            $$RET10 = __builtin_strlen($$PARM.name_13);
            $$RET11 = malloc($$RET10 + 1ull);
   125 |    &mat->(DMatrix).name@c0.rns79.$$33 = $$RET11;
   126 |    __builtin_strcpy($$RET11,$$PARM.name_13);
   127 |  lab_1:
   246 |    rstr = mat;
            return rstr;
   247 |  } /* function */ 


   252 |  aggr200 DMatrix::transpose_data()(char * this)
          {
            __es.__l@0 = 0;
            __es.__t@8 = &__fsm_tab;
            __es.__this@10 = this;
            __es.__i@18 = 0;
   253 |    mat = DMatrix::get_contig()(this)->(DMatrix).rns113.;
   254 |    $$PARM.this45 = &mat;
   195 |    $$csx0 = *((long long *)($$PARM.this45 + 40));
            $$csx1 = *((long long *)($$PARM.this45 + 56));
            $$csx2 = ((int *)($$PARM.this45 + 4))[100 / 4];
            $$IRET37 = (($$csx0 / $$csx1) / (long long) $$csx2 + (long long) (($$csx0 / $$csx1) % (long long) $$csx2 > (long long) ((((int *)($$PARM.this45 + 8))[100 / 4] + ($$csx2 - ((int *)$$PARM.this45)[72 / 4])) % $$csx2))) * $$csx1;
   254 |    mnrow = $$IRET37;
   255 |    $$PARM.this2E = &mat;
   202 |    $$csx3 = *((long long *)($$PARM.this2E + 48));
            $$csx4 = ((int *)($$PARM.this2E + 4))[80 / 4];
            $$IRET20 = (($$csx3 / $$csx1) / (long long) $$csx4 + (long long) (($$csx3 / $$csx1) % (long long) $$csx4 > (long long) ((((int *)($$PARM.this2E + 8))[80 / 4] + ($$csx4 - ((int *)($$PARM.this2E + 4))[72 / 4])) % $$csx4))) * $$csx1;
   255 |    mncol = $$IRET20;
   256 |    mat2 = DMatrix::get_contig()(this)->(DMatrix).rns114.;
   257 |    CTF_Timer::CTF_Timer(char const*)(&__t,"MPI_Sendrecv");
            __es.__c4@3 = 1u;
            CTF_Timer::start()(&__t)
   135 |    $$IRET6 = &mat2->(DMatrix).data@a8.rns81.$$40;
   257 |    $$RET13 = $$IRET6;
            $$SFX1 = ((int *)(this + 4))[80 / 4] * ((int *)(this + 8))[100 / 4] + ((int *)(this + 8))[80 / 4];
   135 |    $$IRETA = &mat->(DMatrix).data@a8.rns81.$$41;
   257 |    $$RET14 = $$IRETA;
            PMPI_Sendrecv($$RET13,(int) (mncol * mnrow),1275070475,$$SFX1,342,$$RET14,(int) (mncol * mnrow),1275070475,((int *)(this + 4))[80 / 4] * ((int *)(this + 8))[100 / 4] + ((int *)(this + 8))[80 / 4],342,((int *)this)[140 / 4],(char *) 1);
            CTF_Timer::stop()(&__t)
            __es.__c4@3 = 0u;
            CTF_Timer::~CTF_Timer()(&__t);
   260 |    $$PARM.name_11 = *((char * *)(this + 192));
   124 |    if (!($$PARM.name_11 != NULL)) goto lab_6;
            $$RET10 = __builtin_strlen($$PARM.name_11);
            $$RET11 = malloc($$RET10 + 1ull);
   125 |    &mat->(DMatrix).name@c0.rns79.$$45 = $$RET11;
   126 |    __builtin_strcpy($$RET11,$$PARM.name_11);
   127 |  lab_6:
    34 |    free(&mat2->(DMatrix).root_data@b0.rns42.$$46)
    35 |    if (!(&mat2->(DMatrix).name@c0.rns43.$$46 != NULL)) goto lab_10;
            free(&mat2->(DMatrix).name@c0.rns43.$$46)
          lab_10:
   262 |    rstr = mat;
            return rstr;
   263 |  } /* function */ 


   268 |  char * DMatrix::replicate_vertical()(char * this)
          {
            __es.__l@0 = 0;
            __es.__t@8 = &__fsm_tab;
            __es.__this@10 = this;
            __es.__i@18 = 0;
   280 |    ctg = DMatrix::get_contig()(this)->(DMatrix).rns126.;
   282 |    $$SFX2 = (unsigned long long) (*((long long *)(this + 40)) * 8ll);
            $$PARM.this2B = this;
   202 |    $$csx5 = *((long long *)($$PARM.this2B + 48));
            $$csx6 = *((long long *)($$PARM.this2B + 56));
            $$csx7 = ((int *)($$PARM.this2B + 4))[80 / 4];
            $$IRET1D = (($$csx5 / $$csx6) / (long long) $$csx7 + (long long) (($$csx5 / $$csx6) % (long long) $$csx7 > (long long) ((((int *)($$PARM.this2B + 8))[80 / 4] + ($$csx7 - ((int *)($$PARM.this2B + 4))[72 / 4])) % $$csx7))) * $$csx6;
   282 |    $$RET15 = (unsigned long long) $$IRET1D;
            rep_mat = malloc($$RET15 * $$SFX2);
   284 |    CTF_Timer::CTF_Timer(char const*)(&__t,"MPI_Allgather");
            __es.__c4@3 = 1u;
            CTF_Timer::start()(&__t)
   135 |    $$IRET4 = &ctg->(DMatrix).data@a8.rns81.$$52;
   284 |    $$RET16 = $$IRET4;
            $$PARM.thisBE = &ctg;
   209 |    $$PARM.this34 = $$PARM.thisBE;
   195 |    $$IRET26 = ((*((long long *)($$PARM.this34 + 40)) / *((long long *)($$PARM.this34 + 56))) / (long long) ((int *)($$PARM.this34 + 4))[100 / 4] + (long long) ((*((long long *)($$PARM.this34 + 40)) / *((long long *)($$PARM.this34 + 56))) % (long long) ((int *)($$PARM.this34 + 4))[100 / 4] > (long long) ((((int *)($$PARM.this34 + 8))[100 / 4] + (((int *)($$PARM.this34 + 4))[100 / 4] - ((int *)$$PARM.this34)[72 / 4])) % ((int *)($$PARM.this34 + 4))[100 / 4]))) * *((long long *)($$PARM.this34 + 56));
   209 |    $$SFX0 = $$IRET26;
            $$PARM.this1F = $$PARM.thisBE;
   202 |    $$IRET11 = ((*((long long *)($$PARM.this1F + 48)) / *((long long *)($$PARM.this1F + 56))) / (long long) ((int *)($$PARM.this1F + 4))[80 / 4] + (long long) ((*((long long *)($$PARM.this1F + 48)) / *((long long *)($$PARM.this1F + 56))) % (long long) ((int *)($$PARM.this1F + 4))[80 / 4] > (long long) ((((int *)($$PARM.this1F + 8))[80 / 4] + (((int *)($$PARM.this1F + 4))[80 / 4] - ((int *)($$PARM.this1F + 4))[72 / 4])) % ((int *)($$PARM.this1F + 4))[80 / 4]))) * *((long long *)($$PARM.this1F + 56));
   209 |    $$RET12 = $$IRET11;
            $$IRET4E = $$RET12 * $$SFX0;
   284 |    $$SFX3 = (int) $$IRET4E;
            $$PARM.thisBF = &ctg;
   209 |    $$PARM.this34 = $$PARM.thisBF;
   195 |    $$IRET26 = ((*((long long *)($$PARM.this34 + 40)) / *((long long *)($$PARM.this34 + 56))) / (long long) ((int *)($$PARM.this34 + 4))[100 / 4] + (long long) ((*((long long *)($$PARM.this34 + 40)) / *((long long *)($$PARM.this34 + 56))) % (long long) ((int *)($$PARM.this34 + 4))[100 / 4] > (long long) ((((int *)($$PARM.this34 + 8))[100 / 4] + (((int *)($$PARM.this34 + 4))[100 / 4] - ((int *)$$PARM.this34)[72 / 4])) % ((int *)($$PARM.this34 + 4))[100 / 4]))) * *((long long *)($$PARM.this34 + 56));
   209 |    $$SFX0 = $$IRET26;
            $$PARM.this1F = $$PARM.thisBF;
   202 |    $$IRET11 = ((*((long long *)($$PARM.this1F + 48)) / *((long long *)($$PARM.this1F + 56))) / (long long) ((int *)($$PARM.this1F + 4))[80 / 4] + (long long) ((*((long long *)($$PARM.this1F + 48)) / *((long long *)($$PARM.this1F + 56))) % (long long) ((int *)($$PARM.this1F + 4))[80 / 4] > (long long) ((((int *)($$PARM.this1F + 8))[80 / 4] + (((int *)($$PARM.this1F + 4))[80 / 4] - ((int *)($$PARM.this1F + 4))[72 / 4])) % ((int *)($$PARM.this1F + 4))[80 / 4]))) * *((long long *)($$PARM.this1F + 56));
   209 |    $$RET12 = $$IRET11;
            $$IRET4F = $$RET12 * $$SFX0;
   284 |    $$RET17 = (int) $$IRET4F;
            PMPI_Allgather($$RET16,$$SFX3,1275070475,rep_mat,$$RET17,1275070475,((int *)this)[100 / 4]);
            CTF_Timer::stop()(&__t)
            __es.__c4@3 = 0u;
            CTF_Timer::~CTF_Timer()(&__t);
   288 |    rstr = rep_mat;
            return rstr;
   289 |  } /* function */ 


   294 |  char * DMatrix::replicate_horizontal()(char * this)
          {
            __es.__l@0 = 0;
            __es.__t@8 = &__fsm_tab;
            __es.__this@10 = this;
            __es.__i@18 = 0;
   295 |    ctg = DMatrix::get_contig()(this)->(DMatrix).rns133.;
   297 |    $$SFX4 = (unsigned long long) (*((long long *)(this + 48)) * 8ll);
            $$PARM.this49 = this;
   195 |    $$csx8 = *((long long *)($$PARM.this49 + 40));
            $$csx9 = *((long long *)($$PARM.this49 + 56));
            $$csxA = ((int *)($$PARM.this49 + 4))[100 / 4];
            $$IRET3B = (($$csx8 / $$csx9) / (long long) $$csxA + (long long) (($$csx8 / $$csx9) % (long long) $$csxA > (long long) ((((int *)($$PARM.this49 + 8))[100 / 4] + ($$csxA - ((int *)$$PARM.this49)[72 / 4])) % $$csxA))) * $$csx9;
   297 |    $$RET18 = (unsigned long long) $$IRET3B;
            rep_mat = malloc($$RET18 * $$SFX4);
   299 |    CTF_Timer::CTF_Timer(char const*)(&__t,"MPI_Allgather");
            __es.__c4@3 = 1u;
            CTF_Timer::start()(&__t)
   135 |    $$IRETB = &ctg->(DMatrix).data@a8.rns81.$$63;
   299 |    $$RET19 = $$IRETB;
            $$PARM.thisC0 = &ctg;
   209 |    $$PARM.this34 = $$PARM.thisC0;
   195 |    $$IRET26 = ((*((long long *)($$PARM.this34 + 40)) / *((long long *)($$PARM.this34 + 56))) / (long long) ((int *)($$PARM.this34 + 4))[100 / 4] + (long long) ((*((long long *)($$PARM.this34 + 40)) / *((long long *)($$PARM.this34 + 56))) % (long long) ((int *)($$PARM.this34 + 4))[100 / 4] > (long long) ((((int *)($$PARM.this34 + 8))[100 / 4] + (((int *)($$PARM.this34 + 4))[100 / 4] - ((int *)$$PARM.this34)[72 / 4])) % ((int *)($$PARM.this34 + 4))[100 / 4]))) * *((long long *)($$PARM.this34 + 56));
   209 |    $$SFX0 = $$IRET26;
            $$PARM.this1F = $$PARM.thisC0;
   202 |    $$IRET11 = ((*((long long *)($$PARM.this1F + 48)) / *((long long *)($$PARM.this1F + 56))) / (long long) ((int *)($$PARM.this1F + 4))[80 / 4] + (long long) ((*((long long *)($$PARM.this1F + 48)) / *((long long *)($$PARM.this1F + 56))) % (long long) ((int *)($$PARM.this1F + 4))[80 / 4] > (long long) ((((int *)($$PARM.this1F + 8))[80 / 4] + (((int *)($$PARM.this1F + 4))[80 / 4] - ((int *)($$PARM.this1F + 4))[72 / 4])) % ((int *)($$PARM.this1F + 4))[80 / 4]))) * *((long long *)($$PARM.this1F + 56));
   209 |    $$RET12 = $$IRET11;
            $$IRET50 = $$RET12 * $$SFX0;
   299 |    $$SFX5 = (int) $$IRET50;
            $$PARM.thisBB = &ctg;
   209 |    $$PARM.this34 = $$PARM.thisBB;
   195 |    $$IRET26 = ((*((long long *)($$PARM.this34 + 40)) / *((long long *)($$PARM.this34 + 56))) / (long long) ((int *)($$PARM.this34 + 4))[100 / 4] + (long long) ((*((long long *)($$PARM.this34 + 40)) / *((long long *)($$PARM.this34 + 56))) % (long long) ((int *)($$PARM.this34 + 4))[100 / 4] > (long long) ((((int *)($$PARM.this34 + 8))[100 / 4] + (((int *)($$PARM.this34 + 4))[100 / 4] - ((int *)$$PARM.this34)[72 / 4])) % ((int *)($$PARM.this34 + 4))[100 / 4]))) * *((long long *)($$PARM.this34 + 56));
   209 |    $$SFX0 = $$IRET26;
            $$PARM.this1F = $$PARM.thisBB;
   202 |    $$IRET11 = ((*((long long *)($$PARM.this1F + 48)) / *((long long *)($$PARM.this1F + 56))) / (long long) ((int *)($$PARM.this1F + 4))[80 / 4] + (long long) ((*((long long *)($$PARM.this1F + 48)) / *((long long *)($$PARM.this1F + 56))) % (long long) ((int *)($$PARM.this1F + 4))[80 / 4] > (long long) ((((int *)($$PARM.this1F + 8))[80 / 4] + (((int *)($$PARM.this1F + 4))[80 / 4] - ((int *)($$PARM.this1F + 4))[72 / 4])) % ((int *)($$PARM.this1F + 4))[80 / 4]))) * *((long long *)($$PARM.this1F + 56));
   209 |    $$RET12 = $$IRET11;
            $$IRET4B = $$RET12 * $$SFX0;
   299 |    $$RET1A = (int) $$IRET4B;
            PMPI_Allgather($$RET19,$$SFX5,1275070475,rep_mat,$$RET1A,1275070475,((int *)this)[80 / 4]);
            CTF_Timer::stop()(&__t)
            __es.__c4@3 = 0u;
            CTF_Timer::~CTF_Timer()(&__t);
   303 |    rstr = rep_mat;
            return rstr;
   304 |  } /* function */ 


   310 |  void DMatrix::reduce_scatter_horizontal(double*)(char * this, char * cntrb)
          {
            __es.__l@0 = 0;
            __es.__t@8 = &__fsm_tab;
            __es.__this@10 = this;
            __es.__i@18 = 0;
            guard___func__15 = 1;
   311 |    jp = 1;
   312 |    logdep = 0;
   313 |    if (!(1 < ((int *)(this + 4))[80 / 4])) goto lab_4;
            do {   /* id=2 guarded */ /* ~2 */ 
              /* region = 23 */
   314 |      jp = jp * 2;
   315 |      logdep = logdep + 1;
   313 |    } while (jp < ((int *)(this + 4))[80 / 4]);    /* ~2 */
          lab_4:
   317 |    if (jp == ((int *)(this + 4))[80 / 4]) goto lab_7;
            __assert_fail("jp==pv.crow.np","dmatrix.cxx",317u,&__func__)
            return;
          lab_7:
   318 |    $$SFX6 = *((long long *)(this + 48));
            $$RET1B = ((*((long long *)(this + 40)) / *((long long *)(this + 56))) / (long long) ((int *)(this + 4))[100 / 4] + (long long) ((*((long long *)(this + 40)) / *((long long *)(this + 56))) % (long long) ((int *)(this + 4))[100 / 4] > (long long) ((((int *)(this + 8))[100 / 4] + (((int *)(this + 4))[100 / 4] - ((int *)this)[72 / 4])) % ((int *)(this + 4))[100 / 4]))) * *((long long *)(this + 56));
            $$csxB = $$RET1B * *((long long *)(this + 48));
   320 |    recv_buf = malloc((unsigned long long) (8ll * $$csxB) / 2ull);
   322 |    ptr_keep = cntrb;
   324 |    ghost_rank = 0;
   325 |    if (!(0 < logdep)) goto lab_10;
            $$CIV0 = 0ll;
            do {   /* id=1 guarded */ /* ~8 */ 
              /* region = 24 */
              /* bump-normalized */
   328 |      $$csxC = ((int *)(this + 8))[80 / 4];
              if (!(1 == ($$csxC >> (int) $$CIV0) % 2)) goto lab_11;
   332 |      ghost_rank = ghost_rank + (1 << (logdep - (int) $$CIV0) - 1);
   333 |      nbr = $$csxC - (1 << (int) $$CIV0);
   334 |      ptr_send = ptr_keep;
   335 |      ptr_keep = ((char *)ptr_keep  + ($$csxB / (long long) (2 << (int) $$CIV0)) * 8ll);
   336 |      goto lab_13;
            lab_11:
   337 |      nbr = (1 << (int) $$CIV0) + $$csxC;
   338 |      ptr_send = ((char *)ptr_keep  + ($$csxB / (long long) (2 << (int) $$CIV0)) * 8ll);
   339 |    lab_13:
   341 |      CTF_Timer::CTF_Timer(char const*)(&__t,"MPI_Sendrecv");
              __es.__c4@3 = 1u;
              CTF_Timer::start()(&__t)
              PMPI_Sendrecv(ptr_send,(int) ($$csxB / (long long) (2 << (int) $$CIV0)),1275070475,nbr,(int) $$CIV0,recv_buf,(int) ($$csxB / (long long) (2 << (int) $$CIV0)),1275070475,nbr,(int) $$CIV0,((int *)this)[80 / 4],(char *) 1);
              CTF_Timer::stop()(&__t)
              __es.__c4@3 = 0u;
              CTF_Timer::~CTF_Timer()(&__t);
   345 |      cdaxpy(int, double, double const*, int, double*, int)((int) ($$csxB / (long long) (2 << (int) $$CIV0)), 1.0000000000000000E+000,recv_buf,1,ptr_keep,1)
   325 |      $$CIV0 = $$CIV0 + 1ll;
            } while ((unsigned long long) $$CIV0 < (unsigned long long) ((long long) logdep));    /* ~8 */
          lab_10:
   347 |    if (!(ghost_rank != ((int *)(this + 8))[80 / 4])) goto lab_17;
   348 |    CTF_Timer::CTF_Timer(char const*)(&__t,"MPI_Sendrecv");
            __es.__c4@3 = 2u;
            CTF_Timer::start()(&__t)
   209 |    $$csxD = (((*((long long *)(this + 48)) / *((long long *)(this + 56))) / (long long) ((int *)(this + 4))[80 / 4] + (long long) ((*((long long *)(this + 48)) / *((long long *)(this + 56))) % (long long) ((int *)(this + 4))[80 / 4] > (long long) ((((int *)(this + 8))[80 / 4] + (((int *)(this + 4))[80 / 4] - ((int *)(this + 4))[72 / 4])) % ((int *)(this + 4))[80 / 4]))) * *((long long *)(this + 56))) * (((*((long long *)(this + 40)) / *((long long *)(this + 56))) / (long long) ((int *)(this + 4))[100 / 4] + (long long) ((*((long long *)(this + 40)) / *((long long *)(this + 56))) % (long long) ((int *)(this + 4))[100 / 4] > (long long) ((((int *)(this + 8))[100 / 4] + (((int *)(this + 4))[100 / 4] - ((int *)this)[72 / 4])) % ((int *)(this + 4))[100 / 4]))) * *((long long *)(this + 56)));
   348 |    PMPI_Sendrecv(ptr_keep,(int) $$csxD,1275070475,ghost_rank,17,ptr_send,(int) $$csxD,1275070475,ghost_rank,17,((int *)this)[80 / 4],(char *) 1);
            CTF_Timer::stop()(&__t)
            __es.__c4@3 = 0u;
            CTF_Timer::~CTF_Timer()(&__t);
   351 |    goto lab_22;
          lab_17:
            ptr_send = ptr_keep;
          lab_22:
   352 |    $$csxF = *((long long *)(this + 56));
            $$csxE = ((*((long long *)(this + 40)) / $$csxF) / (long long) ((int *)(this + 4))[100 / 4] + (long long) ((*((long long *)(this + 40)) / $$csxF) % (long long) ((int *)(this + 4))[100 / 4] > (long long) ((((int *)(this + 8))[100 / 4] + (((int *)(this + 4))[100 / 4] - ((int *)this)[72 / 4])) % ((int *)(this + 4))[100 / 4]))) * $$csxF;
            if (*((long long *)(this + 64)) == $$csxE) goto lab_25;
            __assert_fail("lda == get_mynrow()","dmatrix.cxx",352u,&__func__)
            return;
          lab_25:
   353 |    $$csx10 = *((long long *)(this + 48));
            $$csx11 = ((int *)(this + 4))[80 / 4];
            cdaxpy(int, double, double const*, int, double*, int)((int) (((($$csx10 / $$csxF) / (long long) $$csx11 + (long long) (($$csx10 / $$csxF) % (long long) $$csx11 > (long long) ((((int *)(this + 8))[80 / 4] + ($$csx11 - ((int *)(this + 4))[72 / 4])) % $$csx11))) * $$csxF) * $$csxE), 1.0000000000000000E+000,ptr_send,1,*((char * *)(this + 168)),1)
   354 |    free(recv_buf)
   355 |    return;
          } /* function */ 


   367 |  aggr200 DMatrix::slice(long, long, long, long)(char * this, long long firstrow, long long numrows, long long firstcol, long long numcols)
   370 |  {
            __es.__l@0 = 0;
            __es.__t@8 = &__fsm_tab;
            __es.__this@10 = this;
            __es.__i@18 = 0;
            guard___func__11 = 1;
   372 |    __builtin_strcpy(&pname,"slice ");
   373 |    if (!(*((char * *)(this + 192)) != NULL)) goto lab_2;
   374 |    __builtin_strcat(&pname,*((char * *)(this + 192)));
          lab_2:
   375 |    CTF_Timer::CTF_Timer(char const*)(&tmr,&pname);
            __es.__c4@3 = 1u;
   376 |    CTF_Timer::start()(&tmr)
   378 |    pvr = *((aggr92 *)(this + 72));
   379 |    if (0ll == firstrow % *((long long *)(this + 56))) goto lab_11;
            __assert_fail("firstrow % b == 0","dmatrix.cxx",379u,&__func__)
            return;
          lab_11:
   380 |    if (0ll == firstcol % *((long long *)(this + 56))) goto lab_19;
            __assert_fail("firstcol % b == 0","dmatrix.cxx",380u,&__func__)
            return;
          lab_19:
   381 |    $$csx12 = ((char *)this  + 100);
            pvr.rrow@0 = (int) (((long long) pvr.rrow@0 + firstrow / *((long long *)(this + 56))) % (long long) *((int *)($$csx12 + 4)));
   382 |    $$csx13 = ((char *)this  + 80);
            pvr.rcol@4 = (int) (((long long) pvr.rcol@4 + firstcol / *((long long *)(this + 56))) % (long long) *((int *)($$csx13 + 4)));
   383 |    $$PARM.this65 = &dfslc;
            $$PARM.nrow_66 = *((long long *)(this + 40)) - firstrow;
            $$PARM.ncol_67 = *((long long *)(this + 48)) - firstcol;
            $$PARM.b_68 = *((long long *)(this + 56));
            $$PARM.lda_6A = *((long long *)(this + 64));
            $$PARM.root_data_6B = *((char * *)(this + 176));
            $$PARM.data_6C = *((char * *)(this + 168));
            $$PARM.is_transp_6D = *((char *)(this + 184));
    61 |    *((long long *)($$PARM.this65 + 40)) = $$PARM.nrow_66;
    62 |    *((long long *)($$PARM.this65 + 48)) = $$PARM.ncol_67;
    64 |    *((long long *)($$PARM.this65 + 56)) = $$PARM.b_68;
    65 |    *((aggr92 *)($$PARM.this65 + 72)) = pvr;
    66 |    *((char *)($$PARM.this65 + 184)) = $$PARM.is_transp_6D;
    67 |    if (!($$PARM.lda_6A != 0ll)) goto lab_35;
    68 |    *((long long *)($$PARM.this65 + 64)) = $$PARM.lda_6A;
            goto lab_36;
          lab_35:
    70 |    $$PARM.this33 = $$PARM.this65;
   195 |    $$csx17 = ((int *)($$PARM.this33 + 4))[100 / 4];
            $$IRET25 = ((*((long long *)($$PARM.this33 + 40)) / *((long long *)($$PARM.this33 + 56))) / (long long) $$csx17 + (long long) ((*((long long *)($$PARM.this33 + 40)) / *((long long *)($$PARM.this33 + 56))) % (long long) $$csx17 > (long long) ((((int *)($$PARM.this33 + 8))[100 / 4] + ($$csx17 - ((int *)$$PARM.this33)[72 / 4])) % $$csx17))) * *((long long *)($$PARM.this33 + 56));
    70 |    $$RET8 = $$IRET25;
            *((long long *)($$PARM.this65 + 64)) = $$RET8;
          lab_36:
    71 |    if (!($$PARM.data_6C == NULL)) goto lab_38;
            $$PARM.this28 = $$PARM.this65;
   202 |    $$csx14 = ((int *)($$PARM.this28 + 4))[80 / 4];
            $$IRET1A = ((*((long long *)($$PARM.this28 + 48)) / *((long long *)($$PARM.this28 + 56))) / (long long) $$csx14 + (long long) ((*((long long *)($$PARM.this28 + 48)) / *((long long *)($$PARM.this28 + 56))) % (long long) $$csx14 > (long long) ((((int *)($$PARM.this28 + 8))[80 / 4] + ($$csx14 - ((int *)($$PARM.this28 + 4))[72 / 4])) % $$csx14))) * *((long long *)($$PARM.this28 + 56));
    71 |    $$RET9 = (unsigned long long) $$IRET1A;
            $$RETA = malloc(8ull * ((unsigned long long) *((long long *)($$PARM.this65 + 64)) * $$RET9));
    72 |    *((char * *)($$PARM.this65 + 168)) = $$RETA;
    73 |    *((char * *)($$PARM.this65 + 176)) = $$RETA;
    75 |    goto lab_40;
          lab_38:
    76 |    *((char * *)($$PARM.this65 + 168)) = $$PARM.data_6C;
    77 |    *((char * *)($$PARM.this65 + 176)) = $$PARM.root_data_6B;
    79 |  lab_40:
    80 |    *((char * *)($$PARM.this65 + 192)) = NULL;
    81 |    cdescinit(int*, int, int, int, int, int, int, int, int, int*)($$PARM.this65,(int) *((long long *)($$PARM.this65 + 40)),(int) *((long long *)($$PARM.this65 + 48)),(int) *((long long *)($$PARM.this65 + 56)),(int) *((long long *)($$PARM.this65 + 56)),((int *)$$PARM.this65)[72 / 4],((int *)($$PARM.this65 + 4))[72 / 4],((int *)($$PARM.this65 + 88))[72 / 4],(int) *((long long *)($$PARM.this65 + 64)),&info)
    86 |    $$IRET3F = $$PARM.this65;
   384 |    $$SFX9 = dfslc.data@a8;
            $$PARM.this3D = this;
   195 |    $$IRET2F = ((*((long long *)($$PARM.this3D + 40)) / *((long long *)($$PARM.this3D + 56))) / (long long) *((int *)($$csx12 + 4)) + (long long) ((*((long long *)($$PARM.this3D + 40)) / *((long long *)($$PARM.this3D + 56))) % (long long) *((int *)($$csx12 + 4)) > (long long) ((*((int *)($$csx12 + 8)) + (*((int *)($$csx12 + 4)) - ((int *)$$PARM.this3D)[72 / 4])) % *((int *)($$csx12 + 4))))) * *((long long *)($$PARM.this3D + 56));
   384 |    $$SFXA = $$IRET2F;
            $$PARM.this3E = &dfslc;
   195 |    $$IRET30 = ((*((long long *)($$PARM.this3E + 40)) / *((long long *)($$PARM.this3E + 56))) / (long long) ((int *)($$PARM.this3E + 4))[100 / 4] + (long long) ((*((long long *)($$PARM.this3E + 40)) / *((long long *)($$PARM.this3E + 56))) % (long long) ((int *)($$PARM.this3E + 4))[100 / 4] > (long long) ((((int *)($$PARM.this3E + 8))[100 / 4] + (((int *)($$PARM.this3E + 4))[100 / 4] - ((int *)$$PARM.this3E)[72 / 4])) % ((int *)($$PARM.this3E + 4))[100 / 4]))) * *((long long *)($$PARM.this3E + 56));
   384 |    $$RET1F = $$IRET30;
            dfslc.data@a8 = ((char *)$$SFX9  + ($$SFXA * 8ll - $$RET1F * 8ll));
   385 |    $$PARM.this2C = this;
   202 |    $$IRET1E = ((*((long long *)($$PARM.this2C + 48)) / *((long long *)($$PARM.this2C + 56))) / (long long) *((int *)($$csx13 + 4)) + (long long) ((*((long long *)($$PARM.this2C + 48)) / *((long long *)($$PARM.this2C + 56))) % (long long) *((int *)($$csx13 + 4)) > (long long) ((*((int *)($$csx13 + 8)) + (*((int *)($$csx13 + 4)) - ((int *)($$PARM.this2C + 4))[72 / 4])) % *((int *)($$csx13 + 4))))) * *((long long *)($$PARM.this2C + 56));
   385 |    $$SFXC = $$IRET1E;
            $$PARM.this27 = &dfslc;
   202 |    $$IRET19 = ((*((long long *)($$PARM.this27 + 48)) / *((long long *)($$PARM.this27 + 56))) / (long long) ((int *)($$PARM.this27 + 4))[80 / 4] + (long long) ((*((long long *)($$PARM.this27 + 48)) / *((long long *)($$PARM.this27 + 56))) % (long long) ((int *)($$PARM.this27 + 4))[80 / 4] > (long long) ((((int *)($$PARM.this27 + 8))[80 / 4] + (((int *)($$PARM.this27 + 4))[80 / 4] - ((int *)($$PARM.this27 + 4))[72 / 4])) % ((int *)($$PARM.this27 + 4))[80 / 4]))) * *((long long *)($$PARM.this27 + 56));
   385 |    $$RET20 = $$IRET19;
            dfslc.data@a8 = ((char *)$$SFX9  + (($$SFXC * 8ll - $$RET20 * 8ll) * *((long long *)(this + 64)) + ($$SFXA * 8ll - $$RET1F * 8ll)));
   386 |    $$PARM.this5C = &dslc;
            $$PARM.nrow_5D = numrows;
            $$PARM.ncol_5E = numcols;
            $$PARM.b_5F = *((long long *)(this + 56));
            $$PARM.lda_61 = *((long long *)(this + 64));
            $$PARM.root_data_62 = dfslc.root_data@b0;
            $$PARM.data_63 = ((char *)$$SFX9  + (($$SFXC * 8ll - $$RET20 * 8ll) * *((long long *)(this + 64)) + ($$SFXA * 8ll - $$RET1F * 8ll)));
            $$PARM.is_transp_64 = *((char *)(this + 184));
    61 |    *((long long *)($$PARM.this5C + 40)) = $$PARM.nrow_5D;
    62 |    *((long long *)($$PARM.this5C + 48)) = $$PARM.ncol_5E;
    64 |    *((long long *)($$PARM.this5C + 56)) = $$PARM.b_5F;
    65 |    *((aggr92 *)($$PARM.this5C + 72)) = pvr;
    66 |    *((char *)($$PARM.this5C + 184)) = $$PARM.is_transp_64;
    67 |    if (!($$PARM.lda_61 != 0ll)) goto lab_28;
    68 |    *((long long *)($$PARM.this5C + 64)) = $$PARM.lda_61;
            goto lab_29;
          lab_28:
    70 |    $$PARM.this33 = $$PARM.this5C;
   195 |    $$csx16 = ((int *)($$PARM.this33 + 4))[100 / 4];
            $$IRET25 = ((*((long long *)($$PARM.this33 + 40)) / *((long long *)($$PARM.this33 + 56))) / (long long) $$csx16 + (long long) ((*((long long *)($$PARM.this33 + 40)) / *((long long *)($$PARM.this33 + 56))) % (long long) $$csx16 > (long long) ((((int *)($$PARM.this33 + 8))[100 / 4] + ($$csx16 - ((int *)$$PARM.this33)[72 / 4])) % $$csx16))) * *((long long *)($$PARM.this33 + 56));
    70 |    $$RET8 = $$IRET25;
            *((long long *)($$PARM.this5C + 64)) = $$RET8;
          lab_29:
    71 |    if (!($$PARM.data_63 == NULL)) goto lab_31;
            $$PARM.this28 = $$PARM.this5C;
   202 |    $$csx15 = ((int *)($$PARM.this28 + 4))[80 / 4];
            $$IRET1A = ((*((long long *)($$PARM.this28 + 48)) / *((long long *)($$PARM.this28 + 56))) / (long long) $$csx15 + (long long) ((*((long long *)($$PARM.this28 + 48)) / *((long long *)($$PARM.this28 + 56))) % (long long) $$csx15 > (long long) ((((int *)($$PARM.this28 + 8))[80 / 4] + ($$csx15 - ((int *)($$PARM.this28 + 4))[72 / 4])) % $$csx15))) * *((long long *)($$PARM.this28 + 56));
    71 |    $$RET9 = (unsigned long long) $$IRET1A;
            $$RETA = malloc(8ull * ((unsigned long long) *((long long *)($$PARM.this5C + 64)) * $$RET9));
    72 |    *((char * *)($$PARM.this5C + 168)) = $$RETA;
    73 |    *((char * *)($$PARM.this5C + 176)) = $$RETA;
    75 |    goto lab_33;
          lab_31:
    76 |    *((char * *)($$PARM.this5C + 168)) = $$PARM.data_63;
    77 |    *((char * *)($$PARM.this5C + 176)) = $$PARM.root_data_62;
    79 |  lab_33:
    80 |    *((char * *)($$PARM.this5C + 192)) = NULL;
    81 |    cdescinit(int*, int, int, int, int, int, int, int, int, int*)($$PARM.this5C,(int) *((long long *)($$PARM.this5C + 40)),(int) *((long long *)($$PARM.this5C + 48)),(int) *((long long *)($$PARM.this5C + 56)),(int) *((long long *)($$PARM.this5C + 56)),((int *)$$PARM.this5C)[72 / 4],((int *)($$PARM.this5C + 4))[72 / 4],((int *)($$PARM.this5C + 88))[72 / 4],(int) *((long long *)($$PARM.this5C + 64)),&info)
    86 |    $$IRET3E = $$PARM.this5C;
   387 |    $$PARM.name_17 = *((char * *)(this + 192));
   124 |    if (!($$PARM.name_17 != NULL)) goto lab_22;
            $$RET10 = __builtin_strlen($$PARM.name_17);
            $$RET11 = malloc($$RET10 + 1ull);
   125 |    &dslc->(DMatrix).name@c0.rns79.$$99 = $$RET11;
   126 |    __builtin_strcpy($$RET11,$$PARM.name_17);
   127 |  lab_22:
   389 |    CTF_Timer::stop()(&tmr)
   390 |    __57 = dslc;
            __es.__c4@3 = 0u;
            CTF_Timer::~CTF_Timer()(&tmr);
            rstr = __57;
            return rstr;
   391 |  } /* function */ 


   396 |  void DMatrix::set_to_zero()(char * this)
          {
            __es.__l@0 = 0;
            __es.__t@8 = &__fsm_tab;
            __es.__this@10 = this;
            __es.__i@18 = 0;
   398 |    __builtin_strcpy(&pname,"set_to_zero ");
   399 |    if (!(*((char * *)(this + 192)) != NULL)) goto lab_1;
   400 |    __builtin_strcat(&pname,*((char * *)(this + 192)));
          lab_1:
   401 |    CTF_Timer::CTF_Timer(char const*)(&tmr,&pname);
            __es.__c4@3 = 1u;
   402 |    CTF_Timer::start()(&tmr)
   195 |    $$csx18 = *((long long *)(this + 56));
   407 |    if (!(0ll < ((*((long long *)(this + 48)) / $$csx18) / (long long) ((int *)(this + 4))[80 / 4] + (long long) ((*((long long *)(this + 48)) / $$csx18) % (long long) ((int *)(this + 4))[80 / 4] > (long long) ((((int *)(this + 8))[80 / 4] + (((int *)(this + 4))[80 / 4] - ((int *)(this + 4))[72 / 4])) % ((int *)(this + 4))[80 / 4]))) * $$csx18)) goto lab_5;
            if (!(0ll != 8ll * (((*((long long *)(this + 40)) / $$csx18) / (long long) ((int *)(this + 4))[100 / 4] + (long long) ((*((long long *)(this + 40)) / $$csx18) % (long long) ((int *)(this + 4))[100 / 4] > (long long) ((((int *)(this + 8))[100 / 4] + (((int *)(this + 4))[100 / 4] - ((int *)this)[72 / 4])) % ((int *)(this + 4))[100 / 4]))) * $$csx18))) goto lab_28;
            if (!1) goto lab_27;
            $$CIV2 = 0ll;
            do {   /* id=1 guarded */ /* ~3 */ 
              /* region = 19 */
              /* bump-normalized */
   737 |      $$csx19 = *((long long *)(this + 64)) * $$CIV2;
   700 |      if (!1) goto lab_8;
   737 |      $$CIV1 = 0ll;
   700 |      do {   /* id=2 guarded */ /* ~6 */ 
                /* region = 18 */
                /* bump-normalized */
   702 |        ((double *)(*((char * *)(this + 168))))[$$csx19 + $$CIV1] =  0.0000000000000000E+000;
   701 |        $$CIV1 = $$CIV1 + 1ll;
              } while ((unsigned long long) $$CIV1 < (unsigned long long) ((8ll * (((*((long long *)(this + 40)) / $$csx18) / (long long) ((int *)(this + 4))[100 / 4] + (long long) ((*((long long *)(this + 40)) / $$csx18) % (long long) ((int *)(this + 4))[100 / 4] > (long long) ((((int *)(this + 8))[100 / 4] + (((int *)(this + 4))[100 / 4] - ((int *)this)[72 / 4])) % ((int *)(this + 4))[100 / 4]))) * $$csx18)) / 8ll));    /* ~6 */
            lab_8:
   407 |      $$CIV2 = $$CIV2 + 1ll;
            } while ((unsigned long long) $$CIV2 < (unsigned long long) (((*((long long *)(this + 48)) / $$csx18) / (long long) ((int *)(this + 4))[80 / 4] + (long long) ((*((long long *)(this + 48)) / $$csx18) % (long long) ((int *)(this + 4))[80 / 4] > (long long) ((((int *)(this + 8))[80 / 4] + (((int *)(this + 4))[80 / 4] - ((int *)(this + 4))[72 / 4])) % ((int *)(this + 4))[80 / 4]))) * $$csx18));    /* ~3 */
          lab_27:
          lab_28:
          lab_5:
   410 |    CTF_Timer::stop()(&tmr)
   411 |    __es.__c4@3 = 0u;
            CTF_Timer::~CTF_Timer()(&tmr);
            return;
          } /* function */ 


   419 |  void DMatrix::daxpy(DMatrix, double)(char * this, aggr200 A, double alpha)
   420 |  {
            __es.__l@0 = 0;
            __es.__t@8 = &__fsm_tab;
            __es.__this@10 = this;
            __es.__i@18 = 0;
            guard___func__17 = 1;
   422 |    __builtin_strcpy(&pname,"daxpy ");
   423 |    if (!(*((char * *)(this + 192)) != NULL)) goto lab_2;
   424 |    __builtin_strcat(&pname,*((char * *)(this + 192)));
          lab_2:
   425 |    CTF_Timer::CTF_Timer(char const*)(&tmr,&pname);
            __es.__c4@3 = 1u;
   426 |    CTF_Timer::start()(&tmr)
   428 |    $$csx1A = *((long long *)(this + 40));
            $$csx1B = *((long long *)(this + 56));
            $$csx1C = ((int *)(this + 4))[100 / 4];
            $$csx1D = ((int *)(this + 8))[100 / 4];
            $$csx1E = ((int *)this)[72 / 4];
            $$csx1F = &A->(DMatrix).b@38.rns83.$$116;
            if ((($$csx1A / $$csx1B) / (long long) $$csx1C + (long long) (($$csx1A / $$csx1B) % (long long) $$csx1C > (long long) (($$csx1D + ($$csx1C - $$csx1E)) % $$csx1C))) * $$csx1B == ((&A->(DMatrix).nrow@28.rns87.$$116 / $$csx1F) / (long long) ((int *)((char *)&A + 4))[100 / 4] + (long long) ((&A->(DMatrix).nrow@28.rns87.$$116 / $$csx1F) % (long long) ((int *)((char *)&A + 4))[100 / 4] > (long long) ((((int *)((char *)&A + 8))[100 / 4] + (((int *)((char *)&A + 4))[100 / 4] - ((int *)&A)[72 / 4])) % ((int *)((char *)&A + 4))[100 / 4]))) * $$csx1F) goto lab_75;
   126 |    goto lab_7;
          lab_75:
            goto lab_11;
          lab_7:
   428 |    __assert_fail("A.get_mynrow() == get_mynrow()","dmatrix.cxx",428u,&__func__)
            return;
          lab_11:
   429 |    $$csx20 = *((long long *)(this + 48));
            $$csx21 = ((int *)(this + 4))[80 / 4];
            $$csx22 = ((int *)(this + 8))[80 / 4];
            $$csx23 = ((int *)(this + 4))[72 / 4];
            if ((($$csx20 / $$csx1B) / (long long) $$csx21 + (long long) (($$csx20 / $$csx1B) % (long long) $$csx21 > (long long) (($$csx22 + ($$csx21 - $$csx23)) % $$csx21))) * $$csx1B == ((&A->(DMatrix).ncol@30.rns92.$$120 / $$csx1F) / (long long) ((int *)((char *)&A + 4))[80 / 4] + (long long) ((&A->(DMatrix).ncol@30.rns92.$$120 / $$csx1F) % (long long) ((int *)((char *)&A + 4))[80 / 4] > (long long) ((((int *)((char *)&A + 8))[80 / 4] + (((int *)((char *)&A + 4))[80 / 4] - ((int *)((char *)&A + 4))[72 / 4])) % ((int *)((char *)&A + 4))[80 / 4]))) * $$csx1F) goto lab_76;
   126 |    goto lab_15;
          lab_76:
            goto lab_19;
          lab_15:
   429 |    __assert_fail("A.get_myncol() == get_myncol()","dmatrix.cxx",429u,&__func__)
            return;
          lab_19:
   430 |    mnrow = (($$csx1A / $$csx1B) / (long long) $$csx1C + (long long) (($$csx1A / $$csx1B) % (long long) $$csx1C > (long long) (($$csx1D + ($$csx1C - $$csx1E)) % $$csx1C))) * $$csx1B;
   431 |    mncol = (($$csx20 / $$csx1B) / (long long) $$csx21 + (long long) (($$csx20 / $$csx1B) % (long long) $$csx21 > (long long) (($$csx22 + ($$csx21 - $$csx23)) % $$csx21))) * $$csx1B;
   432 |    lda_A = (int) A.lda@40;
   433 |    str_A = 1;
   434 |    ptr_A = &A->(DMatrix).data@a8.rns81.$$126;
   435 |    if (!(A.is_transp@b8 != 0u)) goto lab_20;
   436 |    lda_A = 1;
   437 |    str_A = (int) A.lda@40;
   438 |    ptr_A = malloc((unsigned long long) (8ll * (mnrow * mncol)));
   439 |    CTF_Timer::CTF_Timer(char const*)(&__t,"MPI_Sendrecv");
            __es.__c4@3 = 2u;
            CTF_Timer::start()(&__t)
            PMPI_Sendrecv(&A->(DMatrix).data@a8.rns81.$$126,(int) (mncol * mnrow),1275070475,((int *)(this + 8))[100 / 4] * ((int *)(this + 4))[80 / 4] + ((int *)(this + 8))[80 / 4],342,ptr_A,(int) (mncol * mnrow),1275070475,((int *)(this + 8))[100 / 4] * ((int *)(this + 4))[80 / 4] + ((int *)(this + 8))[80 / 4],342,((int *)this)[140 / 4],(char *) 1);
            CTF_Timer::stop()(&__t)
            __es.__c4@3 = 1u;
            CTF_Timer::~CTF_Timer()(&__t);
   443 |  lab_20:
   444 |    $$csx24 = *((long long *)(this + 64));
            lda_B = (int) $$csx24;
   445 |    str_B = 1;
   446 |    ptr_B = *((char * *)(this + 168));
   447 |    if (!(*((char *)(this + 184)) != 0u)) goto lab_25;
   448 |    lda_B = 1;
   449 |    str_B = (int) $$csx24;
   450 |    ptr_B = malloc((unsigned long long) (8ll * (mnrow * mncol)));
   451 |    CTF_Timer::CTF_Timer(char const*)(&__t,"MPI_Sendrecv");
            __es.__c4@3 = 3u;
            CTF_Timer::start()(&__t)
            PMPI_Sendrecv(*((char * *)(this + 168)),(int) (mncol * mnrow),1275070475,((int *)(this + 4))[80 / 4] * ((int *)(this + 8))[100 / 4] + ((int *)(this + 8))[80 / 4],342,ptr_B,(int) (mncol * mnrow),1275070475,((int *)(this + 4))[80 / 4] * ((int *)(this + 8))[100 / 4] + ((int *)(this + 8))[80 / 4],342,((int *)this)[140 / 4],(char *) 1);
            CTF_Timer::stop()(&__t)
            __es.__c4@3 = 1u;
            CTF_Timer::~CTF_Timer()(&__t);
   454 |  lab_25:
   456 |    if (!(0ll < mncol)) goto lab_32;
            $$CIV3 = 0ll;
            do {   /* id=1 guarded */ /* ~30 */ 
              /* region = 27 */
              /* bump-normalized */
   457 |      cdaxpy(int, double, double const*, int, double*, int)((int) mnrow,alpha,((char *)ptr_A  + 8ll * ($$CIV3 * (long long) lda_A)),str_A,((char *)ptr_B  + 8ll * ($$CIV3 * (long long) lda_B)),str_B)
   456 |      $$CIV3 = $$CIV3 + 1ll;
            } while ((unsigned long long) $$CIV3 < (unsigned long long) mncol);    /* ~30 */
          lab_32:
   459 |    if (!(A.is_transp@b8 != 0u)) goto lab_33;
   460 |    free(ptr_A)
          lab_33:
   461 |    if (!(*((char *)(this + 184)) != 0u)) goto lab_35;
   462 |    free(ptr_B)
          lab_35:
   463 |    CTF_Timer::stop()(&tmr)
   464 |    __es.__c4@3 = 0u;
            CTF_Timer::~CTF_Timer()(&tmr);
            return;
          } /* function */ 


   470 |  aggr200 DMatrix::get_contig()(char * this)
          {
   471 |    $$csx26 = *((long long *)(this + 40));
            $$csx28 = $$csx26 / *((long long *)(this + 56));
            $$csx25 = $$csx28 / (long long) ((int *)(this + 4))[100 / 4] + (long long) ($$csx28 % (long long) ((int *)(this + 4))[100 / 4] > (long long) ((((int *)(this + 8))[100 / 4] + (((int *)(this + 4))[100 / 4] - ((int *)this)[72 / 4])) % ((int *)(this + 4))[100 / 4]));
            $$csx27 = *((long long *)(this + 56));
            if (!(*((long long *)(this + 64)) == $$csx25 * $$csx27)) goto lab_1;
   490 |    $$PARM.lda_7C = $$csx25 * $$csx27;
    61 |    &ctg->(DMatrix).nrow@28.rns48.$$160$$156 = $$csx26;
    62 |    $$csx29 = *((long long *)(this + 48));
            &ctg->(DMatrix).ncol@30.rns49.$$160$$156 = $$csx29;
    64 |    &ctg->(DMatrix).b@38.rns50.$$160$$156 = $$csx27;
    65 |    &ctg->(DMatrix).pv@48.rns51.$$160$$156 = ((aggr92 *)((char *)this  + 72))->(pview).rns45.$$160$$156;
    66 |    &ctg->(DMatrix).is_transp@b8.rns52.$$160$$156 = *((char *)(this + 184));
    67 |    if (!($$PARM.lda_7C != 0ll)) goto lab_18;
    68 |    &ctg->(DMatrix).lda@40.rns53.$$160$$156 = $$PARM.lda_7C;
            goto lab_19;
          lab_18:
    70 |    &ctg->(DMatrix).lda@40.rns53.$$160$$156 = ($$csx28 / (long long) ((int *)((char *)&ctg + 4))[100 / 4] + (long long) ($$csx28 % (long long) ((int *)((char *)&ctg + 4))[100 / 4] > (long long) ((((int *)((char *)&ctg + 8))[100 / 4] + (((int *)((char *)&ctg + 4))[100 / 4] - ((int *)&ctg)[72 / 4])) % ((int *)((char *)&ctg + 4))[100 / 4]))) * $$csx27;
          lab_19:
    71 |    $$RETA = malloc((unsigned long long) (8ll * (&ctg->(DMatrix).lda@40.rns53.$$160$$156 * ($$csx27 * (($$csx29 / $$csx27) / (long long) ((int *)((char *)&ctg + 4))[80 / 4] + (long long) (($$csx29 / $$csx27) % (long long) ((int *)((char *)&ctg + 4))[80 / 4] > (long long) ((((int *)((char *)&ctg + 8))[80 / 4] + (((int *)((char *)&ctg + 4))[80 / 4] - ((int *)((char *)&ctg + 4))[72 / 4])) % ((int *)((char *)&ctg + 4))[80 / 4])))))));
    72 |    &ctg->(DMatrix).data@a8.rns54.$$160$$156 = $$RETA;
    73 |    &ctg->(DMatrix).root_data@b0.rns55.$$160$$156 = $$RETA;
    80 |    &ctg->(DMatrix).name@c0.rns56.$$160$$156 = NULL;
    81 |    cdescinit(int*, int, int, int, int, int, int, int, int, int*)(&ctg,(int) &ctg->(DMatrix).nrow@28.rns48.$$160$$156,(int) &ctg->(DMatrix).ncol@30.rns49.$$160$$156,(int) &ctg->(DMatrix).b@38.rns50.$$160$$156,(int) &ctg->(DMatrix).b@38.rns50.$$160$$156,((int *)&ctg)[72 / 4],((int *)((char *)&ctg + 4))[72 / 4],((int *)((char *)&ctg + 88))[72 / 4],(int) &ctg->(DMatrix).lda@40.rns53.$$160$$156,&info)
   491 |    $$PARM.name_1B = *((char * *)(this + 192));
   124 |    if (!(*((char * *)(this + 192)) != NULL)) goto lab_25;
            $$RET10 = __builtin_strlen(*((char * *)(this + 192)));
            $$RET11 = malloc($$RET10 + 1ull);
   125 |    &ctg->(DMatrix).name@c0.rns79.$$161$$156 = $$RET11;
   126 |    __builtin_strcpy($$RET11,$$PARM.name_1B);
   127 |  lab_25:
   492 |    $$IRET44 = ctg;
   473 |    ctg = &$$IRET44->(DMatrix).rns204.;
   474 |    DMatrix::set_to_zero()(&ctg)
   475 |    DMatrix::daxpy(DMatrix, double)(&ctg,*((aggr200 *)this), 1.0000000000000000E+000)
   476 |    rstr = ctg;
            return rstr;
   477 |  lab_1:
   478 |    $$PARM.lda_4F = $$csx25 * $$csx27;
    61 |    &ctg->(DMatrix).nrow@28.rns48.$$150 = $$csx26;
    62 |    $$csx2A = *((long long *)(this + 48));
            &ctg->(DMatrix).ncol@30.rns49.$$150 = $$csx2A;
    64 |    &ctg->(DMatrix).b@38.rns50.$$150 = $$csx27;
    65 |    &ctg->(DMatrix).pv@48.rns51.$$150 = ((aggr92 *)((char *)this  + 72))->(pview).rns45.$$150;
    66 |    &ctg->(DMatrix).is_transp@b8.rns52.$$150 = *((char *)(this + 184));
    67 |    if (!($$PARM.lda_4F != 0ll)) goto lab_10;
    68 |    &ctg->(DMatrix).lda@40.rns53.$$150 = $$PARM.lda_4F;
            goto lab_11;
          lab_10:
    70 |    &ctg->(DMatrix).lda@40.rns53.$$150 = ($$csx28 / (long long) ((int *)((char *)&ctg + 4))[100 / 4] + (long long) ($$csx28 % (long long) ((int *)((char *)&ctg + 4))[100 / 4] > (long long) ((((int *)((char *)&ctg + 8))[100 / 4] + (((int *)((char *)&ctg + 4))[100 / 4] - ((int *)&ctg)[72 / 4])) % ((int *)((char *)&ctg + 4))[100 / 4]))) * $$csx27;
          lab_11:
    71 |    $$RETA = malloc((unsigned long long) (8ll * (&ctg->(DMatrix).lda@40.rns53.$$150 * ($$csx27 * (($$csx2A / $$csx27) / (long long) ((int *)((char *)&ctg + 4))[80 / 4] + (long long) (($$csx2A / $$csx27) % (long long) ((int *)((char *)&ctg + 4))[80 / 4] > (long long) ((((int *)((char *)&ctg + 8))[80 / 4] + (((int *)((char *)&ctg + 4))[80 / 4] - ((int *)((char *)&ctg + 4))[72 / 4])) % ((int *)((char *)&ctg + 4))[80 / 4])))))));
    72 |    &ctg->(DMatrix).data@a8.rns54.$$150 = $$RETA;
    73 |    &ctg->(DMatrix).root_data@b0.rns55.$$150 = $$RETA;
    80 |    &ctg->(DMatrix).name@c0.rns56.$$150 = NULL;
    81 |    cdescinit(int*, int, int, int, int, int, int, int, int, int*)(&ctg,(int) &ctg->(DMatrix).nrow@28.rns48.$$150,(int) &ctg->(DMatrix).ncol@30.rns49.$$150,(int) &ctg->(DMatrix).b@38.rns50.$$150,(int) &ctg->(DMatrix).b@38.rns50.$$150,((int *)&ctg)[72 / 4],((int *)((char *)&ctg + 4))[72 / 4],((int *)((char *)&ctg + 88))[72 / 4],(int) &ctg->(DMatrix).lda@40.rns53.$$150,&info)
   480 |    $$PARM.nrowAA = (int) (((*((long long *)(this + 40)) / *((long long *)(this + 56))) / (long long) ((int *)(this + 4))[100 / 4] + (long long) ((*((long long *)(this + 40)) / *((long long *)(this + 56))) % (long long) ((int *)(this + 4))[100 / 4] > (long long) ((((int *)(this + 8))[100 / 4] + (((int *)(this + 4))[100 / 4] - ((int *)this)[72 / 4])) % ((int *)(this + 4))[100 / 4]))) * *((long long *)(this + 56)));
            $$PARM.ncolAB = (int) (((*((long long *)(this + 48)) / *((long long *)(this + 56))) / (long long) ((int *)(this + 4))[80 / 4] + (long long) ((*((long long *)(this + 48)) / *((long long *)(this + 56))) % (long long) ((int *)(this + 4))[80 / 4] > (long long) ((((int *)(this + 8))[80 / 4] + (((int *)(this + 4))[80 / 4] - ((int *)(this + 4))[72 / 4])) % ((int *)(this + 4))[80 / 4]))) * *((long long *)(this + 56)));
            $$PARM.lda_AAC = (int) *((long long *)(this + 64));
            $$PARM.lda_BAD = (int) (((*((long long *)(this + 40)) / *((long long *)(this + 56))) / (long long) ((int *)(this + 4))[100 / 4] + (long long) ((*((long long *)(this + 40)) / *((long long *)(this + 56))) % (long long) ((int *)(this + 4))[100 / 4] > (long long) ((((int *)(this + 8))[100 / 4] + (((int *)(this + 4))[100 / 4] - ((int *)this)[72 / 4])) % ((int *)(this + 4))[100 / 4]))) * *((long long *)(this + 56)));
            $$PARM.AAE = *((char * *)(this + 168));
            $$PARM.BAF = &ctg->(DMatrix).data@a8.rns81.$$154;
   463 |    if (!($$PARM.nrowAA == (int) *((long long *)(this + 64)))) goto lab_28;
   464 |    __builtin_memcpy(&ctg->(DMatrix).data@a8.rns81.$$154,*((char * *)(this + 168)),(unsigned long long) ($$PARM.ncolAB * $$PARM.nrowAA) * 8ull);
   465 |    goto lab_29;
          lab_28:
   467 |    if (!(0 < $$PARM.ncolAB)) goto lab_30;
            $$CIV16 = 0ll;
            do {   /* id=1 guarded */ /* ~31 */ 
              /* region = 21 */
              /* bump-normalized */
   468 |      __builtin_memcpy(((char *)$$PARM.BAF  + ((long long) $$PARM.lda_BAD * $$CIV16) * 8ll),((char *)$$PARM.AAE  + ((long long) $$PARM.lda_AAC * $$CIV16) * 8ll),(unsigned long long) $$PARM.nrowAA * 8ull);
   467 |      $$CIV16 = $$CIV16 + 1ll;
            } while ((unsigned long long) $$CIV16 < (unsigned long long) ((long long) $$PARM.ncolAB));    /* ~31 */
          lab_30:
   470 |  lab_29:
   481 |    rstr = ctg;
            return rstr;
   483 |  } /* function */ 


   489 |  aggr200 DMatrix::clone()(DMatrix *this)
          {
   490 |    $$SFX19 = *((long long *)((char *)this + 40));
            $$SFX1A = *((long long *)((char *)this + 48));
            $$SFX1B = *((long long *)((char *)this + 56));
            $$PARM.this44 = this;
   195 |    $$IRET36 = ((*((long long *)($$PARM.this44 + 40)) / *((long long *)($$PARM.this44 + 56))) / (long long) ((int *)($$PARM.this44 + 4))[100 / 4] + (long long) ((*((long long *)($$PARM.this44 + 40)) / *((long long *)($$PARM.this44 + 56))) % (long long) ((int *)($$PARM.this44 + 4))[100 / 4] > (long long) ((((int *)($$PARM.this44 + 8))[100 / 4] + (((int *)($$PARM.this44 + 4))[100 / 4] - ((int *)$$PARM.this44)[72 / 4])) % ((int *)($$PARM.this44 + 4))[100 / 4]))) * *((long long *)($$PARM.this44 + 56));
   490 |    $$RET29 = $$IRET36;
            $$PARM.this77 = &ctg;
            $$PARM.nrow_78 = $$SFX19;
            $$PARM.ncol_79 = $$SFX1A;
            $$PARM.b_7A = $$SFX1B;
            $$PARM.pv_7B = (this + 72);
            $$PARM.lda_7C = $$RET29;
            $$PARM.root_data_7D = NULL;
            $$PARM.data_7E = NULL;
            $$PARM.is_transp_7F = *((char *)((char *)this + 184));
    61 |    *((long long *)($$PARM.this77 + 40)) = $$PARM.nrow_78;
    62 |    *((long long *)($$PARM.this77 + 48)) = $$PARM.ncol_79;
    64 |    *((long long *)($$PARM.this77 + 56)) = $$PARM.b_7A;
    65 |    *((aggr92 *)($$PARM.this77 + 72)) = *$$PARM.pv_7B;
    66 |    *((char *)($$PARM.this77 + 184)) = $$PARM.is_transp_7F;
    67 |    if (!($$PARM.lda_7C != 0ll)) goto lab_4;
    68 |    *((long long *)($$PARM.this77 + 64)) = $$PARM.lda_7C;
            goto lab_5;
          lab_4:
    70 |    $$PARM.this33 = $$PARM.this77;
   195 |    $$IRET25 = ((*((long long *)($$PARM.this33 + 40)) / *((long long *)($$PARM.this33 + 56))) / (long long) ((int *)($$PARM.this33 + 4))[100 / 4] + (long long) ((*((long long *)($$PARM.this33 + 40)) / *((long long *)($$PARM.this33 + 56))) % (long long) ((int *)($$PARM.this33 + 4))[100 / 4] > (long long) ((((int *)($$PARM.this33 + 8))[100 / 4] + (((int *)($$PARM.this33 + 4))[100 / 4] - ((int *)$$PARM.this33)[72 / 4])) % ((int *)($$PARM.this33 + 4))[100 / 4]))) * *((long long *)($$PARM.this33 + 56));
    70 |    $$RET8 = $$IRET25;
            *((long long *)($$PARM.this77 + 64)) = $$RET8;
          lab_5:
    71 |    if (!($$PARM.data_7E == NULL)) goto lab_7;
            $$PARM.this28 = $$PARM.this77;
   202 |    $$IRET1A = ((*((long long *)($$PARM.this28 + 48)) / *((long long *)($$PARM.this28 + 56))) / (long long) ((int *)($$PARM.this28 + 4))[80 / 4] + (long long) ((*((long long *)($$PARM.this28 + 48)) / *((long long *)($$PARM.this28 + 56))) % (long long) ((int *)($$PARM.this28 + 4))[80 / 4] > (long long) ((((int *)($$PARM.this28 + 8))[80 / 4] + (((int *)($$PARM.this28 + 4))[80 / 4] - ((int *)($$PARM.this28 + 4))[72 / 4])) % ((int *)($$PARM.this28 + 4))[80 / 4]))) * *((long long *)($$PARM.this28 + 56));
    71 |    $$RET9 = (unsigned long long) $$IRET1A;
            $$RETA = malloc(8ull * ((unsigned long long) *((long long *)($$PARM.this77 + 64)) * $$RET9));
    72 |    *((char * *)($$PARM.this77 + 168)) = $$RETA;
    73 |    *((char * *)($$PARM.this77 + 176)) = $$RETA;
    75 |    goto lab_9;
          lab_7:
    76 |    *((char * *)($$PARM.this77 + 168)) = $$PARM.data_7E;
    77 |    *((char * *)($$PARM.this77 + 176)) = $$PARM.root_data_7D;
    79 |  lab_9:
    80 |    *((char * *)($$PARM.this77 + 192)) = NULL;
    81 |    cdescinit(int*, int, int, int, int, int, int, int, int, int*)($$PARM.this77,(int) *((long long *)($$PARM.this77 + 40)),(int) *((long long *)($$PARM.this77 + 48)),(int) *((long long *)($$PARM.this77 + 56)),(int) *((long long *)($$PARM.this77 + 56)),((int *)$$PARM.this77)[72 / 4],((int *)($$PARM.this77 + 4))[72 / 4],((int *)($$PARM.this77 + 88))[72 / 4],(int) *((long long *)($$PARM.this77 + 64)),&info)
    86 |    $$IRET41 = $$PARM.this77;
   491 |    $$PARM.name_1B = *((char * *)((char *)this + 192));
   124 |    if (!($$PARM.name_1B != NULL)) goto lab_1;
            $$RET10 = __builtin_strlen($$PARM.name_1B);
            $$RET11 = malloc($$RET10 + 1ull);
   125 |    &ctg->(DMatrix).name@c0.rns79.$$161 = $$RET11;
   126 |    __builtin_strcpy($$RET11,$$PARM.name_1B);
   127 |  lab_1:
   492 |    rstr = ctg;
            return rstr;
   493 |  } /* function */ 


   499 |  aggr200 DMatrix::scatter_rows(pview_3d const*)(char * this, char * pv3d)
          {
            __es.__l@0 = 0;
            __es.__t@8 = &__fsm_tab;
            __es.__this@10 = this;
            __es.__i@18 = 0;
   500 |    mncol = ((*((long long *)(this + 48)) / *((long long *)(this + 56))) / (long long) ((int *)(this + 4))[80 / 4] + (long long) ((*((long long *)(this + 48)) / *((long long *)(this + 56))) % (long long) ((int *)(this + 4))[80 / 4] > (long long) ((((int *)(this + 8))[80 / 4] + (((int *)(this + 4))[80 / 4] - ((int *)(this + 4))[72 / 4])) % ((int *)(this + 4))[80 / 4]))) * *((long long *)(this + 56));
   502 |    CTF_Timer::CTF_Timer(char const*)(&__t,"MPI_Barrier");
            __es.__c4@3 = 1u;
            CTF_Timer::start()(&__t)
            PMPI_Barrier(((int *)pv3d)[204 / 4]);
            CTF_Timer::stop()(&__t)
            __es.__c4@3 = 0u;
            CTF_Timer::~CTF_Timer()(&__t);
    61 |    &drect->(DMatrix).nrow@28.rns48.$$168 = *((long long *)(this + 40));
    62 |    &drect->(DMatrix).ncol@30.rns49.$$168 = *((long long *)(this + 48));
    64 |    &drect->(DMatrix).b@38.rns50.$$168 = *((long long *)(this + 56));
    65 |    &drect->(DMatrix).pv@48.rns51.$$168 = *((aggr92 *)pv3d);
    66 |    &drect->(DMatrix).is_transp@b8.rns52.$$168 = 0u;
   194 |    $$csx2B = ((&drect->(DMatrix).nrow@28.rns87.$$14$$168 / &drect->(DMatrix).b@38.rns83.$$14$$168) / (long long) ((int *)((char *)&drect + 4))[100 / 4] + (long long) ((&drect->(DMatrix).nrow@28.rns87.$$14$$168 / &drect->(DMatrix).b@38.rns83.$$14$$168) % (long long) ((int *)((char *)&drect + 4))[100 / 4] > (long long) ((((int *)((char *)&drect + 8))[100 / 4] + (((int *)((char *)&drect + 4))[100 / 4] - ((int *)&drect)[72 / 4])) % ((int *)((char *)&drect + 4))[100 / 4]))) * &drect->(DMatrix).b@38.rns83.$$14$$168;
    70 |    &drect->(DMatrix).lda@40.rns53.$$168 = $$csx2B;
   201 |    $$csx2C = ((&drect->(DMatrix).ncol@30.rns92.$$16$$168 / &drect->(DMatrix).b@38.rns88.$$16$$168) / (long long) ((int *)((char *)&drect + 4))[80 / 4] + (long long) ((&drect->(DMatrix).ncol@30.rns92.$$16$$168 / &drect->(DMatrix).b@38.rns88.$$16$$168) % (long long) ((int *)((char *)&drect + 4))[80 / 4] > (long long) ((((int *)((char *)&drect + 8))[80 / 4] + (((int *)((char *)&drect + 4))[80 / 4] - ((int *)((char *)&drect + 4))[72 / 4])) % ((int *)((char *)&drect + 4))[80 / 4]))) * &drect->(DMatrix).b@38.rns88.$$16$$168;
    71 |    $$RETA = malloc((unsigned long long) (8ll * ($$csx2B * $$csx2C)));
    72 |    &drect->(DMatrix).data@a8.rns54.$$168 = $$RETA;
    73 |    &drect->(DMatrix).root_data@b0.rns55.$$168 = $$RETA;
    80 |    &drect->(DMatrix).name@c0.rns56.$$168 = NULL;
    81 |    cdescinit(int*, int, int, int, int, int, int, int, int, int*)(&drect,(int) &drect->(DMatrix).nrow@28.rns48.$$168,(int) &drect->(DMatrix).ncol@30.rns49.$$168,(int) &drect->(DMatrix).b@38.rns50.$$168,(int) &drect->(DMatrix).b@38.rns50.$$168,((int *)&drect)[72 / 4],((int *)((char *)&drect + 4))[72 / 4],((int *)((char *)&drect + 88))[72 / 4],(int) &drect->(DMatrix).lda@40.rns53.$$168,&info)
   504 |    DMatrix::set_to_zero()(&drect)
   506 |    CTF_Timer::CTF_Timer(char const*)(&__t,"MPI_Barrier");
            __es.__c4@3 = 2u;
            CTF_Timer::start()(&__t)
            PMPI_Barrier(((int *)pv3d)[204 / 4]);
            CTF_Timer::stop()(&__t)
            __es.__c4@3 = 0u;
            CTF_Timer::~CTF_Timer()(&__t);
   507 |    CTF_Timer::CTF_Timer(char const*)(&__t,"MPI_Barrier");
            __es.__c4@3 = 3u;
            CTF_Timer::start()(&__t)
            PMPI_Barrier(((int *)pv3d)[68 / 4]);
            CTF_Timer::stop()(&__t)
            __es.__c4@3 = 0u;
            CTF_Timer::~CTF_Timer()(&__t);
   509 |    printf("allgather clyr rank %d my rank %d/n",((int *)(pv3d + 8))[184 / 4],((int *)(pv3d + 8))[204 / 4]);
   510 |    $$rmnrow.nat.0 = ((&drect->(DMatrix).nrow@28.rns87.$$182 / &drect->(DMatrix).b@38.rns83.$$182) / (long long) ((int *)((char *)&drect + 4))[100 / 4] + (long long) ((&drect->(DMatrix).nrow@28.rns87.$$182 / &drect->(DMatrix).b@38.rns83.$$182) % (long long) ((int *)((char *)&drect + 4))[100 / 4] > (long long) ((((int *)((char *)&drect + 8))[100 / 4] + (((int *)((char *)&drect + 4))[100 / 4] - ((int *)&drect)[72 / 4])) % ((int *)((char *)&drect + 4))[100 / 4]))) * &drect->(DMatrix).b@38.rns83.$$182;
   511 |    nlrows = (SNEW  (unsigned long long) ((int *)(pv3d + 4))[184 / 4] * 8ull);
   512 |    CTF_Timer::CTF_Timer(char const*)(&__t,"MPI_Allgather");
            __es.__c4@3 = 4u;
            CTF_Timer::start()(&__t)
            rmnrow = $$rmnrow.nat.0;
            PMPI_Allgather(&rmnrow,1,1275070522,nlrows,1,1275070522,((int *)pv3d)[184 / 4]);
            CTF_Timer::stop()(&__t)
            __es.__c4@3 = 0u;
            CTF_Timer::~CTF_Timer()(&__t);
   513 |    printf("done allgather clyr rank %d/n",((int *)(pv3d + 8))[184 / 4]);
   514 |    pfx = 0;
   515 |    if (!(0 < ((int *)(pv3d + 8))[184 / 4])) goto lab_15;
            $$CIV4 = 0ll;
            do {   /* id=1 guarded */ /* ~13 */ 
              /* region = 15 */
              /* bump-normalized */
              /* independent */
   516 |      pfx = (int) ((long long) pfx + nlrows[$$CIV4]);
   515 |      $$CIV4 = $$CIV4 + 1ll;
            } while ((unsigned long long) $$CIV4 < (unsigned long long) ((long long) ((int *)(pv3d + 8))[184 / 4]));    /* ~13 */
          lab_15:
   518 |    $$PARM.nrowB0 = (int) rmnrow;
            $$PARM.lda_AB2 = (int) *((long long *)(this + 64));
            $$PARM.lda_BB3 = (int) rmnrow;
            $$PARM.AB4 = ((char *)*((char * *)(this + 168))  + (long long) pfx * 8ll);
            $$PARM.BB5 = drect.data@a8;
   463 |    if (!((int) rmnrow == (int) *((long long *)(this + 64)))) goto lab_26;
   464 |    __builtin_memcpy(drect.data@a8,((char *)*((char * *)(this + 168))  + (long long) pfx * 8ll),(unsigned long long) ((int) mncol * (int) rmnrow) * 8ull);
   465 |    goto lab_27;
          lab_26:
   467 |    if (!(0 < (int) mncol)) goto lab_28;
            $$CIV16 = 0ll;
            do {   /* id=2 guarded */ /* ~29 */ 
              /* region = 16 */
              /* bump-normalized */
   468 |      __builtin_memcpy(((char *)$$PARM.BB5  + ((long long) $$PARM.lda_BB3 * $$CIV16) * 8ll),((char *)$$PARM.AB4  + ((long long) $$PARM.lda_AB2 * $$CIV16) * 8ll),(unsigned long long) $$PARM.nrowB0 * 8ull);
   467 |      $$CIV16 = $$CIV16 + 1ll;
            } while ((unsigned long long) $$CIV16 < (unsigned long long) ((long long) ((int) mncol)));    /* ~29 */
          lab_28:
   470 |  lab_27:
   519 |    rstr = drect;
            return rstr;
   520 |  } /* function */ 


   527 |  aggr200 DMatrix::foldcols(long)(char * this, long long factor)
          {
            __es.__l@0 = 0;
            __es.__t@8 = &__fsm_tab;
            __es.__this@10 = this;
            __es.__i@18 = 0;
   529 |    __builtin_strcpy(&pname,"foldcols ");
   530 |    if (!(*((char * *)(this + 192)) != NULL)) goto lab_1;
   531 |    __builtin_strcat(&pname,*((char * *)(this + 192)));
          lab_1:
   532 |    CTF_Timer::CTF_Timer(char const*)(&tmr,&pname);
            __es.__c4@3 = 1u;
   533 |    CTF_Timer::start()(&tmr)
   536 |    mnrow = ((*((long long *)(this + 40)) / *((long long *)(this + 56))) / (long long) ((int *)(this + 4))[100 / 4] + (long long) ((*((long long *)(this + 40)) / *((long long *)(this + 56))) % (long long) ((int *)(this + 4))[100 / 4] > (long long) ((((int *)(this + 8))[100 / 4] + (((int *)(this + 4))[100 / 4] - ((int *)this)[72 / 4])) % ((int *)(this + 4))[100 / 4]))) * *((long long *)(this + 56));
   537 |    mncol = ((*((long long *)(this + 48)) / *((long long *)(this + 56))) / (long long) ((int *)(this + 4))[80 / 4] + (long long) ((*((long long *)(this + 48)) / *((long long *)(this + 56))) % (long long) ((int *)(this + 4))[80 / 4] > (long long) ((((int *)(this + 8))[80 / 4] + (((int *)(this + 4))[80 / 4] - ((int *)(this + 4))[72 / 4])) % ((int *)(this + 4))[80 / 4]))) * *((long long *)(this + 56));
   541 |    ctg = DMatrix::get_contig()(this)->(DMatrix).rns246.;
   542 |    $$csx2D = mnrow / (*((long long *)(this + 56)) * factor);
            if (!(0ll < $$csx2D)) goto lab_5;
            j = 0ll;
            if (!(0ll < factor)) goto lab_36;
            if (!(0 < (int) mncol)) goto lab_26;
            if (!1) goto lab_25;
            do {   /* id=1 guarded */ /* ~3 */ 
              /* region = 60 */
   543 |      if (!1) goto lab_8;
              $$CIV5 = 0ll;
              do {   /* id=2 guarded */ /* ~6 */ 
                /* region = 59 */
                /* bump-normalized */
   544 |        $$PARM.nrow9E = (int) *((long long *)(this + 56));
                $$PARM.lda_AA0 = (int) *((long long *)(this + 64));
                $$PARM.AA2 = ((char *)*((char * *)(this + 168))  + (*((long long *)(this + 56)) * $$CIV5 + *((long long *)(this + 56)) * (j * factor)) * 8ll);
                $$PARM.BA3 = ((char *)ctg.data@a8  + ($$CIV5 * ((mnrow / factor) * mncol) + j * *((long long *)(this + 56))) * 8ll);
   463 |        if (!((int) *((long long *)(this + 56)) == (int) *((long long *)(this + 64)))) goto lab_20;
                if (!((int) *((long long *)(this + 56)) == (int) (mnrow / factor))) goto lab_20;
   464 |        __builtin_memcpy(((char *)ctg.data@a8  + ($$CIV5 * ((mnrow / factor) * mncol) + j * *((long long *)(this + 56))) * 8ll),((char *)*((char * *)(this + 168))  + (*((long long *)(this + 56)) * $$CIV5 + *((long long *)(this + 56)) * (j * factor)) * 8ll),(unsigned long long) ((int) mncol * (int) *((long long *)(this + 56))) * 8ull);
   465 |        goto lab_21;
              lab_20:
   467 |        if (!1) goto lab_22;
                $$CIV16 = 0ll;
                do {   /* id=3 guarded */ /* ~23 */ 
                  /* region = 58 */
                  /* bump-normalized */
   468 |          __builtin_memcpy(((char *)$$PARM.BA3  + 8ll * ($$CIV16 * (long long) ((int) (mnrow / factor)))),((char *)$$PARM.AA2  + 8ll * ($$CIV16 * (long long) $$PARM.lda_AA0)),(unsigned long long) $$PARM.nrow9E * 8ull);
   467 |          $$CIV16 = $$CIV16 + 1ll;
                } while ((unsigned long long) $$CIV16 < (unsigned long long) ((long long) ((int) mncol)));    /* ~23 */
              lab_22:
   470 |      lab_21:
   543 |        $$CIV5 = $$CIV5 + 1ll;
              } while ((unsigned long long) $$CIV5 < (unsigned long long) factor);    /* ~6 */
            lab_8:
   542 |      j = j + 1ll;
            } while (j < mnrow / (factor * *((long long *)(this + 56))));    /* ~3 */
          lab_25:
            goto lab_37;
          lab_26:
            if (!1) goto lab_35;
            do {   /* id=4 guarded */ /* ~28 */ 
              /* region = 62 */
   543 |      if (!1) goto lab_34;
              $$CIV5 = 0ll;
              do {   /* id=5 guarded */ /* ~29 */ 
                /* region = 61 */
                /* bump-normalized */
   463 |        if (!((int) *((long long *)(this + 56)) == (int) *((long long *)(this + 64)))) goto lab_30;
                if (!((int) *((long long *)(this + 56)) == (int) (mnrow / factor))) goto lab_30;
   464 |        __builtin_memcpy(((char *)ctg.data@a8  + ($$CIV5 * ((mnrow / factor) * mncol) + j * *((long long *)(this + 56))) * 8ll),((char *)*((char * *)(this + 168))  + (*((long long *)(this + 56)) * $$CIV5 + *((long long *)(this + 56)) * (j * factor)) * 8ll),(unsigned long long) ((int) mncol * (int) *((long long *)(this + 56))) * 8ull);
   465 |        goto lab_33;
              lab_30:
   470 |      lab_33:
   543 |        $$CIV5 = $$CIV5 + 1ll;
              } while ((unsigned long long) $$CIV5 < (unsigned long long) factor);    /* ~29 */
            lab_34:
   542 |      j = j + 1ll;
            } while (j < mnrow / (factor * *((long long *)(this + 56))));    /* ~28 */
          lab_35:
            goto lab_37;
          lab_36:
            if (!(0 < (int) mncol)) goto lab_46;
            if (!1) goto lab_45;
            do {   /* id=7 guarded */ /* ~38 */ 
              /* region = 63 */
              j = j + 1ll;
            } while (j < $$csx2D);    /* ~38 */
          lab_45:
            goto lab_55;
          lab_46:
            if (!1) goto lab_54;
            do {   /* id=10 guarded */ /* ~47 */ 
              /* region = 64 */
              j = j + 1ll;
            } while (j < $$csx2D);    /* ~47 */
          lab_54:
          lab_55:
          lab_37:
          lab_5:
   548 |    CTF_Timer::stop()(&tmr)
    61 |    &ret->(DMatrix).nrow@28.rns48.$$197 = ctg.nrow@28 / factor;
    62 |    &ret->(DMatrix).ncol@30.rns49.$$197 = ctg.ncol@30 * factor;
    64 |    $$csx2E = *((long long *)(this + 56));
            &ret->(DMatrix).b@38.rns50.$$197 = $$csx2E;
    65 |    &ret->(DMatrix).pv@48.rns51.$$197 = ((aggr92 *)((char *)this  + 72))->(pview).rns45.$$197;
    66 |    &ret->(DMatrix).is_transp@b8.rns52.$$197 = ctg.is_transp@b8;
    67 |    if (!(0ll != ctg.lda@40 / factor)) goto lab_13;
    68 |    &ret->(DMatrix).lda@40.rns53.$$197 = ctg.lda@40 / factor;
            goto lab_14;
          lab_13:
   194 |    $$csx30 = (((ctg.nrow@28 / factor) / $$csx2E) / (long long) ((int *)((char *)&ret + 4))[100 / 4] + (long long) (((ctg.nrow@28 / factor) / $$csx2E) % (long long) ((int *)((char *)&ret + 4))[100 / 4] > (long long) ((((int *)((char *)&ret + 8))[100 / 4] + (((int *)((char *)&ret + 4))[100 / 4] - ((int *)&ret)[72 / 4])) % ((int *)((char *)&ret + 4))[100 / 4]))) * $$csx2E;
    70 |    &ret->(DMatrix).lda@40.rns53.$$197 = $$csx30;
          lab_14:
    71 |    if (!(ctg.data@a8 == NULL)) goto lab_16;
   201 |    $$csx2F = ((ctg.ncol@30 * factor) / $$csx2E) / (long long) ((int *)((char *)&ret + 4))[80 / 4] + (long long) (((ctg.ncol@30 * factor) / $$csx2E) % (long long) ((int *)((char *)&ret + 4))[80 / 4] > (long long) ((((int *)((char *)&ret + 8))[80 / 4] + (((int *)((char *)&ret + 4))[80 / 4] - ((int *)((char *)&ret + 4))[72 / 4])) % ((int *)((char *)&ret + 4))[80 / 4]));
    71 |    $$RETA = malloc((unsigned long long) (8ll * ($$csx2F * (&ret->(DMatrix).lda@40.rns53.$$197 * $$csx2E))));
    72 |    &ret->(DMatrix).data@a8.rns54.$$197 = $$RETA;
    73 |    &ret->(DMatrix).root_data@b0.rns55.$$197 = $$RETA;
    75 |    goto lab_18;
          lab_16:
    76 |    &ret->(DMatrix).data@a8.rns54.$$197 = ctg.data@a8;
    77 |    &ret->(DMatrix).root_data@b0.rns55.$$197 = ctg.root_data@b0;
    79 |  lab_18:
    80 |    &ret->(DMatrix).name@c0.rns56.$$197 = NULL;
    81 |    cdescinit(int*, int, int, int, int, int, int, int, int, int*)(&ret,(int) &ret->(DMatrix).nrow@28.rns48.$$197,(int) &ret->(DMatrix).ncol@30.rns49.$$197,(int) &ret->(DMatrix).b@38.rns50.$$197,(int) &ret->(DMatrix).b@38.rns50.$$197,((int *)&ret)[72 / 4],((int *)((char *)&ret + 4))[72 / 4],((int *)((char *)&ret + 88))[72 / 4],(int) &ret->(DMatrix).lda@40.rns53.$$197,&info)
   550 |    $$PARM.name_15 = *((char * *)(this + 192));
   124 |    if (!(*((char * *)(this + 192)) != NULL)) goto lab_9;
            $$RET10 = __builtin_strlen(*((char * *)(this + 192)));
            $$RET11 = malloc($$RET10 + 1ull);
   125 |    &ret->(DMatrix).name@c0.rns79.$$198 = $$RET11;
   126 |    __builtin_strcpy($$RET11,$$PARM.name_15);
   127 |  lab_9:
   551 |    __88 = ret;
            __es.__c4@3 = 0u;
            CTF_Timer::~CTF_Timer()(&tmr);
            rstr = __88;
            return rstr;
   552 |  } /* function */ 


   560 |  aggr200 DMatrix::foldrows(long)(char * this, long long factor)
          {
            __es.__l@0 = 0;
            __es.__t@8 = &__fsm_tab;
            __es.__this@10 = this;
            __es.__i@18 = 0;
            guard___func__12 = 1;
   562 |    __builtin_strcpy(&pname,"foldrows ");
   563 |    if (!(*((char * *)(this + 192)) != NULL)) goto lab_2;
   564 |    __builtin_strcat(&pname,*((char * *)(this + 192)));
          lab_2:
   565 |    CTF_Timer::CTF_Timer(char const*)(&tmr,&pname);
            __es.__c4@3 = 1u;
   566 |    CTF_Timer::start()(&tmr)
   568 |    mncol = ((*((long long *)(this + 48)) / *((long long *)(this + 56))) / (long long) ((int *)(this + 4))[80 / 4] + (long long) ((*((long long *)(this + 48)) / *((long long *)(this + 56))) % (long long) ((int *)(this + 4))[80 / 4] > (long long) ((((int *)(this + 8))[80 / 4] + (((int *)(this + 4))[80 / 4] - ((int *)(this + 4))[72 / 4])) % ((int *)(this + 4))[80 / 4]))) * *((long long *)(this + 56));
   569 |    mnrow = ((*((long long *)(this + 40)) / *((long long *)(this + 56))) / (long long) ((int *)(this + 4))[100 / 4] + (long long) ((*((long long *)(this + 40)) / *((long long *)(this + 56))) % (long long) ((int *)(this + 4))[100 / 4] > (long long) ((((int *)(this + 8))[100 / 4] + (((int *)(this + 4))[100 / 4] - ((int *)this)[72 / 4])) % ((int *)(this + 4))[100 / 4]))) * *((long long *)(this + 56));
   570 |    if (0ll == mncol % factor) goto lab_11;
            __assert_fail("mncol % factor == 0","dmatrix.cxx",570u,&__func__)
            return;
          lab_11:
   572 |    ctg = DMatrix::get_contig()(this)->(DMatrix).rns259.;
   574 |    if (!(0ll < mnrow / *((long long *)(this + 56)))) goto lab_14;
            j = 0ll;
            if (!(0ll < factor)) goto lab_46;
            if (!(0 < (int) (mncol / factor))) goto lab_36;
            if (!1) goto lab_35;
            do {   /* id=1 guarded */ /* ~12 */ 
              /* region = 62 */
   575 |      if (!1) goto lab_17;
              $$CIV6 = 0ll;
              do {   /* id=2 guarded */ /* ~15 */ 
                /* region = 61 */
                /* bump-normalized */
   576 |        $$PARM.nrowA4 = (int) *((long long *)(this + 56));
                $$PARM.lda_AA6 = (int) *((long long *)(this + 64));
                $$PARM.AA8 = ((char *)*((char * *)(this + 168))  + ((*((long long *)(this + 64)) * $$CIV6) * (mncol / factor) + j * *((long long *)(this + 56))) * 8ll);
                $$PARM.BA9 = ((char *)ctg.data@a8  + (*((long long *)(this + 56)) * $$CIV6 + *((long long *)(this + 56)) * (j * factor)) * 8ll);
   463 |        if (!((int) *((long long *)(this + 56)) == (int) *((long long *)(this + 64)))) goto lab_30;
                if (!((int) *((long long *)(this + 56)) == (int) (mnrow * factor))) goto lab_30;
   464 |        __builtin_memcpy(((char *)ctg.data@a8  + (*((long long *)(this + 56)) * $$CIV6 + *((long long *)(this + 56)) * (j * factor)) * 8ll),((char *)*((char * *)(this + 168))  + ((*((long long *)(this + 64)) * $$CIV6) * (mncol / factor) + j * *((long long *)(this + 56))) * 8ll),(unsigned long long) ((int) (mncol / factor) * (int) *((long long *)(this + 56))) * 8ull);
   465 |        goto lab_31;
              lab_30:
   467 |        if (!1) goto lab_32;
                $$CIV16 = 0ll;
                do {   /* id=3 guarded */ /* ~33 */ 
                  /* region = 60 */
                  /* bump-normalized */
   468 |          __builtin_memcpy(((char *)$$PARM.BA9  + 8ll * ($$CIV16 * (long long) ((int) (mnrow * factor)))),((char *)$$PARM.AA8  + 8ll * ($$CIV16 * (long long) $$PARM.lda_AA6)),(unsigned long long) $$PARM.nrowA4 * 8ull);
   467 |          $$CIV16 = $$CIV16 + 1ll;
                } while ((unsigned long long) $$CIV16 < (unsigned long long) ((long long) ((int) (mncol / factor))));    /* ~33 */
              lab_32:
   470 |      lab_31:
   575 |        $$CIV6 = $$CIV6 + 1ll;
              } while ((unsigned long long) $$CIV6 < (unsigned long long) factor);    /* ~15 */
            lab_17:
   574 |      j = j + 1ll;
            } while (j < mnrow / *((long long *)(this + 56)));    /* ~12 */
          lab_35:
            goto lab_47;
          lab_36:
            if (!1) goto lab_45;
            do {   /* id=4 guarded */ /* ~38 */ 
              /* region = 64 */
   575 |      if (!1) goto lab_44;
              $$CIV6 = 0ll;
              do {   /* id=5 guarded */ /* ~39 */ 
                /* region = 63 */
                /* bump-normalized */
   463 |        if (!((int) *((long long *)(this + 56)) == (int) *((long long *)(this + 64)))) goto lab_40;
                if (!((int) *((long long *)(this + 56)) == (int) (mnrow * factor))) goto lab_40;
   464 |        __builtin_memcpy(((char *)ctg.data@a8  + (*((long long *)(this + 56)) * $$CIV6 + *((long long *)(this + 56)) * (j * factor)) * 8ll),((char *)*((char * *)(this + 168))  + ((*((long long *)(this + 64)) * $$CIV6) * (mncol / factor) + j * *((long long *)(this + 56))) * 8ll),(unsigned long long) ((int) (mncol / factor) * (int) *((long long *)(this + 56))) * 8ull);
   465 |        goto lab_43;
              lab_40:
   470 |      lab_43:
   575 |        $$CIV6 = $$CIV6 + 1ll;
              } while ((unsigned long long) $$CIV6 < (unsigned long long) factor);    /* ~39 */
            lab_44:
   574 |      j = j + 1ll;
            } while (j < mnrow / *((long long *)(this + 56)));    /* ~38 */
          lab_45:
            goto lab_47;
          lab_46:
            if (!(0 < (int) (mncol / factor))) goto lab_56;
            if (!1) goto lab_55;
            do {   /* id=7 guarded */ /* ~48 */ 
              /* region = 65 */
              j = j + 1ll;
            } while (j < mnrow / *((long long *)(this + 56)));    /* ~48 */
          lab_55:
            goto lab_65;
          lab_56:
            if (!1) goto lab_64;
            do {   /* id=10 guarded */ /* ~57 */ 
              /* region = 66 */
              j = j + 1ll;
            } while (j < mnrow / *((long long *)(this + 56)));    /* ~57 */
          lab_64:
          lab_65:
          lab_47:
          lab_14:
   580 |    CTF_Timer::stop()(&tmr)
    61 |    &ret->(DMatrix).nrow@28.rns48.$$209 = ctg.nrow@28 * factor;
    62 |    &ret->(DMatrix).ncol@30.rns49.$$209 = ctg.ncol@30 / factor;
    64 |    $$csx31 = *((long long *)(this + 56));
            &ret->(DMatrix).b@38.rns50.$$209 = $$csx31;
    65 |    &ret->(DMatrix).pv@48.rns51.$$209 = ((aggr92 *)((char *)this  + 72))->(pview).rns45.$$209;
    66 |    &ret->(DMatrix).is_transp@b8.rns52.$$209 = ctg.is_transp@b8;
    67 |    if (!(0ll != ctg.lda@40 * factor)) goto lab_23;
    68 |    &ret->(DMatrix).lda@40.rns53.$$209 = ctg.lda@40 * factor;
            goto lab_24;
          lab_23:
   194 |    $$csx33 = (((ctg.nrow@28 * factor) / $$csx31) / (long long) ((int *)((char *)&ret + 4))[100 / 4] + (long long) (((ctg.nrow@28 * factor) / $$csx31) % (long long) ((int *)((char *)&ret + 4))[100 / 4] > (long long) ((((int *)((char *)&ret + 8))[100 / 4] + (((int *)((char *)&ret + 4))[100 / 4] - ((int *)&ret)[72 / 4])) % ((int *)((char *)&ret + 4))[100 / 4]))) * $$csx31;
    70 |    &ret->(DMatrix).lda@40.rns53.$$209 = $$csx33;
          lab_24:
    71 |    if (!(ctg.data@a8 == NULL)) goto lab_26;
   201 |    $$csx32 = ((ctg.ncol@30 / factor) / $$csx31) / (long long) ((int *)((char *)&ret + 4))[80 / 4] + (long long) (((ctg.ncol@30 / factor) / $$csx31) % (long long) ((int *)((char *)&ret + 4))[80 / 4] > (long long) ((((int *)((char *)&ret + 8))[80 / 4] + (((int *)((char *)&ret + 4))[80 / 4] - ((int *)((char *)&ret + 4))[72 / 4])) % ((int *)((char *)&ret + 4))[80 / 4]));
    71 |    $$RETA = malloc((unsigned long long) (8ll * ($$csx32 * (&ret->(DMatrix).lda@40.rns53.$$209 * $$csx31))));
    72 |    &ret->(DMatrix).data@a8.rns54.$$209 = $$RETA;
    73 |    &ret->(DMatrix).root_data@b0.rns55.$$209 = $$RETA;
    75 |    goto lab_28;
          lab_26:
    76 |    &ret->(DMatrix).data@a8.rns54.$$209 = ctg.data@a8;
    77 |    &ret->(DMatrix).root_data@b0.rns55.$$209 = ctg.root_data@b0;
    79 |  lab_28:
    80 |    &ret->(DMatrix).name@c0.rns56.$$209 = NULL;
    81 |    cdescinit(int*, int, int, int, int, int, int, int, int, int*)(&ret,(int) &ret->(DMatrix).nrow@28.rns48.$$209,(int) &ret->(DMatrix).ncol@30.rns49.$$209,(int) &ret->(DMatrix).b@38.rns50.$$209,(int) &ret->(DMatrix).b@38.rns50.$$209,((int *)&ret)[72 / 4],((int *)((char *)&ret + 4))[72 / 4],((int *)((char *)&ret + 88))[72 / 4],(int) &ret->(DMatrix).lda@40.rns53.$$209,&info)
   582 |    $$PARM.name_1D = *((char * *)(this + 192));
   124 |    if (!(*((char * *)(this + 192)) != NULL)) goto lab_19;
            $$RET10 = __builtin_strlen(*((char * *)(this + 192)));
            $$RET11 = malloc($$RET10 + 1ull);
   125 |    &ret->(DMatrix).name@c0.rns79.$$210 = $$RET11;
   126 |    __builtin_strcpy($$RET11,$$PARM.name_1D);
   127 |  lab_19:
   583 |    __93 = ret;
            __es.__c4@3 = 0u;
            CTF_Timer::~CTF_Timer()(&tmr);
            rstr = __93;
            return rstr;
   584 |  } /* function */ 


   589 |  void DMatrix::zero_upper_tri()(char * this)
          {
   595 |    if (!((long long) ((((int *)(this + 4))[80 / 4] + (((int *)(this + 8))[80 / 4] - ((int *)(this + 4))[72 / 4])) % ((int *)(this + 4))[80 / 4]) * *((long long *)(this + 56)) < *((long long *)(this + 48)))) goto lab_3;
            if (!((long long) ((((int *)(this + 4))[100 / 4] + (((int *)(this + 8))[100 / 4] - ((int *)this)[72 / 4])) % ((int *)(this + 4))[100 / 4]) * *((long long *)(this + 56)) < *((long long *)(this + 40)))) goto lab_40;
            if (!1) goto lab_39;
            $$CIVC = 0ll;
            do {   /* id=1 guarded */ /* ~1 */ 
              /* region = 41 */
              /* bump-normalized */
              $$csx34 = *((long long *)(this + 56)) * $$CIVC;
   597 |      if (!1) goto lab_6;
              $$CIVB = 0ll;
              do {   /* id=2 guarded */ /* ~4 */ 
                /* region = 40 */
                /* bump-normalized */
                row.rnn16 = (long long) ((((int *)(this + 8))[100 / 4] + (((int *)(this + 4))[100 / 4] - ((int *)this)[72 / 4])) % ((int *)(this + 4))[100 / 4]) * *((long long *)(this + 56)) + $$CIVB * ((long long) ((int *)(this + 4))[100 / 4] * *((long long *)(this + 56)));
                $$csx35 = *((long long *)(this + 56)) * $$CIVB;
   600 |        if (!(row.rnn16 == $$CIVC * ((long long) ((int *)(this + 4))[80 / 4] * *((long long *)(this + 56))) + (long long) ((((int *)(this + 8))[80 / 4] + (((int *)(this + 4))[80 / 4] - ((int *)(this + 4))[72 / 4])) % ((int *)(this + 4))[80 / 4]) * *((long long *)(this + 56)))) goto lab_7;
   601 |        if (!(0ll < *((long long *)(this + 56)))) goto lab_11;
                $$CIV8 = 0ll;
   702 |        $$ICM0 = *((long long *)(this + 56)) * $$CIVB;
   601 |        do {   /* id=5 guarded */ /* ~9 */ 
                  /* region = 37 */
                  /* bump-normalized */
   737 |          $$csx36 = *((long long *)(this + 64)) * $$CIV8;
   700 |          if (!(0ll != 8ll * $$csx36 + (-8ll - *((long long *)(this + 64)) * 8ll) * $$CIV8)) goto lab_14;
   737 |          $$CIV7 = 0ll;
   702 |          $$csx37 = $$csx36 + ($$ICM0 + $$CIVC * (*((long long *)(this + 64)) * *((long long *)(this + 56))));
   700 |          do {   /* id=6 guarded */ /* ~12 */ 
                    /* region = 36 */
                    /* bump-normalized */
   702 |            ((double *)(*((char * *)(this + 168))))[$$CIV7 + $$csx37] =  0.0000000000000000E+000;
   701 |            $$CIV7 = $$CIV7 + 1ll;
                  } while ((unsigned long long) $$CIV7 < (unsigned long long) (((*((long long *)(this + 64)) * 8ll + 8ll) * $$CIV8 - 8ll * $$csx36) / 8ll));    /* ~12 */
                lab_14:
   601 |          $$CIV8 = $$CIV8 + 1ll;
                } while ((unsigned long long) $$CIV8 < (unsigned long long) *((long long *)(this + 56)));    /* ~9 */
              lab_11:
   604 |      lab_7:
   606 |        if (!(row.rnn16 < $$CIVC * ((long long) ((int *)(this + 4))[80 / 4] * *((long long *)(this + 56))) + (long long) ((((int *)(this + 8))[80 / 4] + (((int *)(this + 4))[80 / 4] - ((int *)(this + 4))[72 / 4])) % ((int *)(this + 4))[80 / 4]) * *((long long *)(this + 56)))) goto lab_15;
   608 |        if (!(0ll < *((long long *)(this + 56)))) goto lab_19;
                $$CIVA = 0ll;
   702 |        $$ICM0 = *((long long *)(this + 56)) * $$CIVB;
   608 |        do {   /* id=3 guarded */ /* ~17 */ 
                  /* region = 39 */
                  /* bump-normalized */
   700 |          if (!(*((long long *)(this + 56)) * 8ll != 0ll)) goto lab_22;
   737 |          $$CIV9 = 0ll;
   702 |          $$csx38 = *((long long *)(this + 64)) * $$CIVA + ($$ICM0 + $$CIVC * (*((long long *)(this + 64)) * *((long long *)(this + 56))));
   700 |          do {   /* id=4 guarded */ /* ~20 */ 
                    /* region = 38 */
                    /* bump-normalized */
   702 |            ((double *)(*((char * *)(this + 168))))[$$CIV9 + $$csx38] =  0.0000000000000000E+000;
   701 |            $$CIV9 = $$CIV9 + 1ll;
                  } while ((unsigned long long) $$CIV9 < (unsigned long long) ((*((long long *)(this + 56)) * 8ll) / 8ll));    /* ~20 */
                lab_22:
   608 |          $$CIVA = $$CIVA + 1ll;
                } while ((unsigned long long) $$CIVA < (unsigned long long) *((long long *)(this + 56)));    /* ~17 */
              lab_19:
   611 |      lab_15:
   597 |        $$CIVB = $$CIVB + 1ll;
              } while ((unsigned long long) $$CIVB < (unsigned long long) (((*((long long *)(this + 40)) - (long long) ((((int *)(this + 8))[100 / 4] + (((int *)(this + 4))[100 / 4] - ((int *)this)[72 / 4])) % ((int *)(this + 4))[100 / 4]) * *((long long *)(this + 56))) - 1ll) / ((long long) ((int *)(this + 4))[100 / 4] * *((long long *)(this + 56))) + 1ll));    /* ~4 */
            lab_6:
   595 |      $$CIVC = $$CIVC + 1ll;
            } while ((unsigned long long) $$CIVC < (unsigned long long) (((*((long long *)(this + 48)) - (long long) ((((int *)(this + 8))[80 / 4] + (((int *)(this + 4))[80 / 4] - ((int *)(this + 4))[72 / 4])) % ((int *)(this + 4))[80 / 4]) * *((long long *)(this + 56))) - 1ll) / ((long long) ((int *)(this + 4))[80 / 4] * *((long long *)(this + 56))) + 1ll));    /* ~1 */
          lab_39:
          lab_40:
          lab_3:
   614 |    return;
          } /* function */ 


   619 |  void DMatrix::zero_lower_tri()(char * this)
          {
   624 |    if (!((long long) ((((int *)(this + 4))[80 / 4] + (((int *)(this + 8))[80 / 4] - ((int *)(this + 4))[72 / 4])) % ((int *)(this + 4))[80 / 4]) * *((long long *)(this + 56)) < *((long long *)(this + 48)))) goto lab_3;
            if (!((long long) ((((int *)(this + 4))[100 / 4] + (((int *)(this + 8))[100 / 4] - ((int *)this)[72 / 4])) % ((int *)(this + 4))[100 / 4]) * *((long long *)(this + 56)) < *((long long *)(this + 40)))) goto lab_40;
            if (!1) goto lab_39;
            $$CIV12 = 0ll;
            do {   /* id=1 guarded */ /* ~1 */ 
              /* region = 41 */
              /* bump-normalized */
              $$csx39 = *((long long *)(this + 56)) * $$CIV12;
   626 |      if (!1) goto lab_6;
              $$CIV11 = 0ll;
              $$ICM1 = $$csx39 * *((long long *)(this + 64));
              do {   /* id=2 guarded */ /* ~4 */ 
                /* region = 40 */
                /* bump-normalized */
                row.rnn26 = (long long) ((((int *)(this + 8))[100 / 4] + (((int *)(this + 4))[100 / 4] - ((int *)this)[72 / 4])) % ((int *)(this + 4))[100 / 4]) * *((long long *)(this + 56)) + $$CIV11 * ((long long) ((int *)(this + 4))[100 / 4] * *((long long *)(this + 56)));
                $$csx3A = *((long long *)(this + 56)) * $$CIV11;
   629 |        if (!(row.rnn26 == $$CIV12 * ((long long) ((int *)(this + 4))[80 / 4] * *((long long *)(this + 56))) + (long long) ((((int *)(this + 8))[80 / 4] + (((int *)(this + 4))[80 / 4] - ((int *)(this + 4))[72 / 4])) % ((int *)(this + 4))[80 / 4]) * *((long long *)(this + 56)))) goto lab_7;
   630 |        if (!(0ll < *((long long *)(this + 56)))) goto lab_11;
                $$CIVE = 0ll;
   702 |        $$ICM2 = $$csx3A + $$ICM1;
   737 |        $$csx3B = $$ICM1 + $$csx3A;
                $$ICM3 = $$csx3B * 8ll;
   630 |        do {   /* id=5 guarded */ /* ~9 */ 
                  /* region = 37 */
                  /* bump-normalized */
   737 |          $$csx3D = *((long long *)(this + 64)) * $$CIVE;
   700 |          $$csx3C = (*((long long *)(this + 56)) + $$csx3D) * 8ll + (-8ll - *((long long *)(this + 64)) * 8ll) * $$CIVE;
                  if (!(8ll != $$csx3C)) goto lab_14;
   737 |          $$CIVD = 0ll;
   700 |          do {   /* id=6 guarded */ /* ~12 */ 
                    /* region = 36 */
                    /* bump-normalized */
   702 |            *((double *)((char *)(*((char * *)(this + 168))) + 8ll + ((*((long long *)(this + 64)) * 8ll + 8ll) * $$CIVE + ($$CIVD + $$csx3B) * 8ll))) =  0.0000000000000000E+000;
   701 |            $$CIVD = $$CIVD + 1ll;
                  } while ((unsigned long long) $$CIVD < (unsigned long long) (($$csx3C - 8ll) / 8ll));    /* ~12 */
                lab_14:
   630 |          $$CIVE = $$CIVE + 1ll;
                } while ((unsigned long long) $$CIVE < (unsigned long long) *((long long *)(this + 56)));    /* ~9 */
              lab_11:
   633 |      lab_7:
   635 |        if (!(row.rnn26 > $$CIV12 * ((long long) ((int *)(this + 4))[80 / 4] * *((long long *)(this + 56))) + (long long) ((((int *)(this + 8))[80 / 4] + (((int *)(this + 4))[80 / 4] - ((int *)(this + 4))[72 / 4])) % ((int *)(this + 4))[80 / 4]) * *((long long *)(this + 56)))) goto lab_15;
   636 |        if (!(0ll < *((long long *)(this + 56)))) goto lab_19;
                $$CIV10 = 0ll;
   702 |        $$ICM4 = *((long long *)(this + 56)) * $$CIV11;
   737 |        $$csx3E = $$csx3A + $$ICM1;
   636 |        do {   /* id=3 guarded */ /* ~17 */ 
                  /* region = 39 */
                  /* bump-normalized */
   700 |          if (!(*((long long *)(this + 56)) * 8ll != 0ll)) goto lab_22;
   737 |          $$CIVF = 0ll;
   702 |          $$csx3F = *((long long *)(this + 64)) * $$CIV10 + ($$ICM4 + $$CIV12 * (*((long long *)(this + 64)) * *((long long *)(this + 56))));
   700 |          do {   /* id=4 guarded */ /* ~20 */ 
                    /* region = 38 */
                    /* bump-normalized */
   702 |            ((double *)(*((char * *)(this + 168))))[$$CIVF + $$csx3F] =  0.0000000000000000E+000;
   701 |            $$CIVF = $$CIVF + 1ll;
                  } while ((unsigned long long) $$CIVF < (unsigned long long) ((*((long long *)(this + 56)) * 8ll) / 8ll));    /* ~20 */
                lab_22:
   636 |          $$CIV10 = $$CIV10 + 1ll;
                } while ((unsigned long long) $$CIV10 < (unsigned long long) *((long long *)(this + 56)));    /* ~17 */
              lab_19:
   639 |      lab_15:
   626 |        $$CIV11 = $$CIV11 + 1ll;
              } while ((unsigned long long) $$CIV11 < (unsigned long long) (((*((long long *)(this + 40)) - (long long) ((((int *)(this + 8))[100 / 4] + (((int *)(this + 4))[100 / 4] - ((int *)this)[72 / 4])) % ((int *)(this + 4))[100 / 4]) * *((long long *)(this + 56))) - 1ll) / ((long long) ((int *)(this + 4))[100 / 4] * *((long long *)(this + 56))) + 1ll));    /* ~4 */
            lab_6:
   624 |      $$CIV12 = $$CIV12 + 1ll;
            } while ((unsigned long long) $$CIV12 < (unsigned long long) (((*((long long *)(this + 48)) - (long long) ((((int *)(this + 8))[80 / 4] + (((int *)(this + 4))[80 / 4] - ((int *)(this + 4))[72 / 4])) % ((int *)(this + 4))[80 / 4]) * *((long long *)(this + 56))) - 1ll) / ((long long) ((int *)(this + 4))[80 / 4] * *((long long *)(this + 56))) + 1ll));    /* ~1 */
          lab_39:
          lab_40:
          lab_3:
   642 |    return;
          } /* function */ 


   649 |  void DMatrix::diag_scale_add(double, double)(char * this, double scale, double add)
          {
   654 |    if (!((long long) ((((int *)(this + 4))[80 / 4] + (((int *)(this + 8))[80 / 4] - ((int *)(this + 4))[72 / 4])) % ((int *)(this + 4))[80 / 4]) * *((long long *)(this + 56)) < *((long long *)(this + 48)))) goto lab_3;
            if (!((long long) ((((int *)(this + 4))[100 / 4] + (((int *)(this + 8))[100 / 4] - ((int *)this)[72 / 4])) % ((int *)(this + 4))[100 / 4]) * *((long long *)(this + 56)) < *((long long *)(this + 40)))) goto lab_29;
            if (!1) goto lab_28;
            if (!((unsigned long long) ((*((long long *)(this + 40)) + ((long long) ((((int *)(this + 8))[100 / 4] + (((int *)(this + 4))[100 / 4] - ((int *)this)[72 / 4])) % ((int *)(this + 4))[100 / 4]) * - *((long long *)(this + 56)) - 1ll)) / ((long long) ((int *)(this + 4))[100 / 4] * *((long long *)(this + 56))) + 1ll) % 128ull > 0ull)) goto lab_58;
            if (!1) goto lab_59;
            if (!((unsigned long long) ((*((long long *)(this + 40)) + ((long long) ((((int *)(this + 8))[100 / 4] + (((int *)(this + 4))[100 / 4] - ((int *)this)[72 / 4])) % ((int *)(this + 4))[100 / 4]) * - *((long long *)(this + 56)) - 1ll)) / ((long long) ((int *)(this + 4))[100 / 4] * *((long long *)(this + 56))) + 1ll) >= 128ull)) goto lab_85;
            if (!1) goto lab_84;
            $$CIV15 = 0ll;
            do {   /* id=1 guarded */ /* ~1 */ 
              /* region = 120 */
              /* bump-normalized */
              $$csx40 = *((long long *)(this + 56)) * $$CIV15;
   656 |      $$GIX0 = (long long) 0;
              if (!1) goto lab_40;
            lab_40:
              if (!1) goto lab_44;
              if (!1) goto lab_42;
              $$CIV18 = (long long) 0;
   664 |      $$csx41 = (((*((long long *)(this + 40)) - (long long) ((((int *)(this + 8))[100 / 4] + (((int *)(this + 4))[100 / 4] - ((int *)this)[72 / 4])) % ((int *)(this + 4))[100 / 4]) * *((long long *)(this + 56))) - 1ll) / ((long long) ((int *)(this + 4))[100 / 4] * *((long long *)(this + 56))) + (long long) (((unsigned long long) (((*((long long *)(this + 40)) - (long long) ((((int *)(this + 8))[100 / 4] + (((int *)(this + 4))[100 / 4] - ((int *)this)[72 / 4])) % ((int *)(this + 4))[100 / 4]) * *((long long *)(this + 56))) - 1ll) / ((long long) ((int *)(this + 4))[100 / 4] * *((long long *)(this + 56))) + 1ll) % 128ull) * 18446744073709551615ull)) / 128ll + 1ll;
   656 |      do {   /* id=5 guarded */ /* ~43 */ 
                /* region = 119 */
                /* bump-normalized */
                $$GIX0 = 0ll;
                if (!1) goto lab_34;
                $$GIX0 = (long long) 0;
                $$CIV17 = (long long) 0;
   658 |        $$csx42 = $$CIV15 * ((long long) ((int *)(this + 4))[80 / 4] * *((long long *)(this + 56))) + ((long long) ((((int *)(this + 8))[80 / 4] + (((int *)(this + 4))[80 / 4] - ((int *)(this + 4))[72 / 4])) % ((int *)(this + 4))[80 / 4]) * *((long long *)(this + 56)) - (long long) ((((int *)(this + 8))[100 / 4] + (((int *)(this + 4))[100 / 4] - ((int *)this)[72 / 4])) % ((int *)(this + 4))[100 / 4]) * *((long long *)(this + 56)));
   656 |        do {   /* id=2 guarded */ /* ~35 */ 
                  /* region = 118 */
                  /* bump-normalized */
   658 |          if (!(0ll == - ($$CIV18 * 128ll + $$CIV17) * ((long long) ((int *)(this + 4))[100 / 4] * *((long long *)(this + 56))) + $$csx42)) goto lab_36;
                  ((long long *)&$$StripVector0)[$$GIX0] = $$CIV18 * 128ll + $$CIV17;
                  $$GIX0 = $$GIX0 + (long long) 1;
                lab_36:
   656 |          $$CIV17 = $$CIV17 + 1ll;
                } while ((unsigned long long) $$CIV17 < 128ull);    /* ~35 */
              lab_34:
                if (!((long long) 0 < $$GIX0)) goto lab_37;
                $$SCIX0 = (long long) 0;
                do {   /* id=4 guarded */ /* ~38 */ 
                  /* region = 114 */
                  /* bump-normalized */
   659 |          if (!(0ll < *((long long *)(this + 56)))) goto lab_11;
                  $$CIV13 = 0ll;
                  do {   /* id=3 guarded */ /* ~9 */ 
                    /* region = 113 */
                    /* bump-normalized */
                    /* independent */
   660 |            ((double *)(((char *)*((char * *)(this + 168))  + (8ll * ($$csx40 * *((long long *)(this + 64))) + 8ll * (((long long *)&$$StripVector0)[$$SCIX0] * *((long long *)(this + 56)))))))[(*((long long *)(this + 64)) + 1ll) * $$CIV13] = _fmadd@47(((double *)(((char *)*((char * *)(this + 168))  + (8ll * ($$csx40 * *((long long *)(this + 64))) + 8ll * (((long long *)&$$StripVector0)[$$SCIX0] * *((long long *)(this + 56)))))))[(*((long long *)(this + 64)) + 1ll) * $$CIV13],scale,add);
   659 |            $$CIV13 = $$CIV13 + 1ll;
                  } while ((unsigned long long) $$CIV13 < (unsigned long long) *((long long *)(this + 56)));    /* ~9 */
                lab_11:
   656 |          $$SCIX0 = $$SCIX0 + 1ll;
                } while ($$SCIX0 < $$GIX0);    /* ~38 */
              lab_37:
   664 |        $$CIV18 = $$CIV18 + 1ll;
              } while ((unsigned long long) $$CIV18 < (unsigned long long) $$csx41);    /* ~43 */
            lab_42:
   656 |      if (!1) goto lab_47;
              $$GIX0 = (long long) 0;
              $$CIV19 = (long long) 0;
              $$csx43 = ((*((long long *)(this + 40)) - (long long) ((((int *)(this + 8))[100 / 4] + (((int *)(this + 4))[100 / 4] - ((int *)this)[72 / 4])) % ((int *)(this + 4))[100 / 4]) * *((long long *)(this + 56))) - 1ll) / ((long long) ((int *)(this + 4))[100 / 4] * *((long long *)(this + 56))) + (long long) (((unsigned long long) (((*((long long *)(this + 40)) - (long long) ((((int *)(this + 8))[100 / 4] + (((int *)(this + 4))[100 / 4] - ((int *)this)[72 / 4])) % ((int *)(this + 4))[100 / 4]) * *((long long *)(this + 56))) - 1ll) / ((long long) ((int *)(this + 4))[100 / 4] * *((long long *)(this + 56))) + 1ll) % 128ull) * 18446744073709551615ull);
   658 |      $$csx44 = ((long long) ((((int *)(this + 8))[80 / 4] + (((int *)(this + 4))[80 / 4] - ((int *)(this + 4))[72 / 4])) % ((int *)(this + 4))[80 / 4]) * *((long long *)(this + 56)) + $$CIV15 * ((long long) ((int *)(this + 4))[80 / 4] * *((long long *)(this + 56)))) - (long long) ((((int *)(this + 8))[100 / 4] + (((int *)(this + 4))[100 / 4] - ((int *)this)[72 / 4])) % ((int *)(this + 4))[100 / 4]) * *((long long *)(this + 56));
   656 |      do {   /* id=6 guarded */ /* ~45 */ 
                /* region = 117 */
                /* bump-normalized */
                $$CIV14 = 1ll + ($$CIV19 + $$csx43);
   658 |        if (!($$csx44 == $$CIV14 * ((long long) ((int *)(this + 4))[100 / 4] * *((long long *)(this + 56))))) goto lab_46;
                ((long long *)&$$StripVector0)[$$GIX0] = $$CIV14;
                $$GIX0 = $$GIX0 + (long long) 1;
              lab_46:
   656 |        $$CIV19 = $$CIV19 + 1ll;
              } while ((unsigned long long) $$CIV19 < (unsigned long long) (((*((long long *)(this + 40)) - (long long) ((((int *)(this + 8))[100 / 4] + (((int *)(this + 4))[100 / 4] - ((int *)this)[72 / 4])) % ((int *)(this + 4))[100 / 4]) * *((long long *)(this + 56))) - 1ll) / ((long long) ((int *)(this + 4))[100 / 4] * *((long long *)(this + 56))) + 1ll) % 128ull);    /* ~45 */
            lab_47:
              if (!((long long) 0 < $$GIX0)) goto lab_51;
              $$CIV1A = (long long) 0;
              do {   /* id=7 guarded */ /* ~48 */ 
                /* region = 116 */
                /* bump-normalized */
   659 |        if (!(0ll < *((long long *)(this + 56)))) goto lab_50;
                $$CIV13 = 0ll;
                do {   /* id=8 guarded */ /* ~49 */ 
                  /* region = 115 */
                  /* bump-normalized */
                  /* independent */
   660 |          ((double *)(((char *)*((char * *)(this + 168))  + (8ll * ($$CIV15 * (*((long long *)(this + 64)) * *((long long *)(this + 56)))) + 8ll * (((long long *)&$$StripVector0)[$$CIV1A] * *((long long *)(this + 56)))))))[(*((long long *)(this + 64)) + 1ll) * $$CIV13] = _fmadd@47(((double *)(((char *)*((char * *)(this + 168))  + (8ll * ($$CIV15 * (*((long long *)(this + 64)) * *((long long *)(this + 56)))) + 8ll * (((long long *)&$$StripVector0)[$$CIV1A] * *((long long *)(this + 56)))))))[(*((long long *)(this + 64)) + 1ll) * $$CIV13],scale,add);
   659 |          $$CIV13 = $$CIV13 + 1ll;
                } while ((unsigned long long) $$CIV13 < (unsigned long long) *((long long *)(this + 56)));    /* ~49 */
              lab_50:
   656 |        $$CIV1A = $$CIV1A + 1ll;
              } while ((unsigned long long) $$CIV1A < (unsigned long long) $$GIX0);    /* ~48 */
            lab_51:
            lab_44:
   654 |      $$CIV15 = $$CIV15 + 1ll;
            } while ((unsigned long long) $$CIV15 < (unsigned long long) (((*((long long *)(this + 48)) - (long long) ((((int *)(this + 8))[80 / 4] + (((int *)(this + 4))[80 / 4] - ((int *)(this + 4))[72 / 4])) % ((int *)(this + 4))[80 / 4]) * *((long long *)(this + 56))) - 1ll) / ((long long) ((int *)(this + 4))[80 / 4] * *((long long *)(this + 56))) + 1ll));    /* ~1 */
          lab_84:
            goto lab_59;
          lab_85:
            if (!1) goto lab_106;
            $$CIV15 = 0ll;
            do {   /* id=16 guarded */ /* ~87 */ 
              /* region = 124 */
              /* bump-normalized */
              $$csx45 = *((long long *)(this + 56)) * $$CIV15;
   656 |      $$GIX0 = (long long) 0;
              if (!1) goto lab_88;
            lab_88:
              if (!1) goto lab_105;
              if (!1) goto lab_100;
              $$GIX0 = (long long) 0;
              $$CIV19 = (long long) 0;
              $$csx46 = ((*((long long *)(this + 40)) - (long long) ((((int *)(this + 8))[100 / 4] + (((int *)(this + 4))[100 / 4] - ((int *)this)[72 / 4])) % ((int *)(this + 4))[100 / 4]) * *((long long *)(this + 56))) - 1ll) / ((long long) ((int *)(this + 4))[100 / 4] * *((long long *)(this + 56))) + (long long) (((unsigned long long) (((*((long long *)(this + 40)) - (long long) ((((int *)(this + 8))[100 / 4] + (((int *)(this + 4))[100 / 4] - ((int *)this)[72 / 4])) % ((int *)(this + 4))[100 / 4]) * *((long long *)(this + 56))) - 1ll) / ((long long) ((int *)(this + 4))[100 / 4] * *((long long *)(this + 56))) + 1ll) % 128ull) * 18446744073709551615ull);
   658 |      $$csx47 = ((long long) ((((int *)(this + 8))[80 / 4] + (((int *)(this + 4))[80 / 4] - ((int *)(this + 4))[72 / 4])) % ((int *)(this + 4))[80 / 4]) * *((long long *)(this + 56)) + $$CIV15 * ((long long) ((int *)(this + 4))[80 / 4] * *((long long *)(this + 56)))) - (long long) ((((int *)(this + 8))[100 / 4] + (((int *)(this + 4))[100 / 4] - ((int *)this)[72 / 4])) % ((int *)(this + 4))[100 / 4]) * *((long long *)(this + 56));
   656 |      do {   /* id=19 guarded */ /* ~98 */ 
                /* region = 123 */
                /* bump-normalized */
                $$CIV14 = 1ll + ($$CIV19 + $$csx46);
   658 |        if (!($$csx47 == $$CIV14 * ((long long) ((int *)(this + 4))[100 / 4] * *((long long *)(this + 56))))) goto lab_99;
                ((long long *)&$$StripVector0)[$$GIX0] = $$CIV14;
                $$GIX0 = $$GIX0 + (long long) 1;
              lab_99:
   656 |        $$CIV19 = $$CIV19 + 1ll;
              } while ((unsigned long long) $$CIV19 < (unsigned long long) (((*((long long *)(this + 40)) - (long long) ((((int *)(this + 8))[100 / 4] + (((int *)(this + 4))[100 / 4] - ((int *)this)[72 / 4])) % ((int *)(this + 4))[100 / 4]) * *((long long *)(this + 56))) - 1ll) / ((long long) ((int *)(this + 4))[100 / 4] * *((long long *)(this + 56))) + 1ll) % 128ull);    /* ~98 */
            lab_100:
              if (!((long long) 0 < $$GIX0)) goto lab_104;
              $$CIV1A = (long long) 0;
              do {   /* id=20 guarded */ /* ~101 */ 
                /* region = 122 */
                /* bump-normalized */
   659 |        if (!(0ll < *((long long *)(this + 56)))) goto lab_103;
                $$CIV13 = 0ll;
                do {   /* id=21 guarded */ /* ~102 */ 
                  /* region = 121 */
                  /* bump-normalized */
                  /* independent */
   660 |          ((double *)(((char *)*((char * *)(this + 168))  + (8ll * ($$CIV15 * (*((long long *)(this + 64)) * *((long long *)(this + 56)))) + 8ll * (((long long *)&$$StripVector0)[$$CIV1A] * *((long long *)(this + 56)))))))[(*((long long *)(this + 64)) + 1ll) * $$CIV13] = _fmadd@47(((double *)(((char *)*((char * *)(this + 168))  + (8ll * ($$CIV15 * (*((long long *)(this + 64)) * *((long long *)(this + 56)))) + 8ll * (((long long *)&$$StripVector0)[$$CIV1A] * *((long long *)(this + 56)))))))[(*((long long *)(this + 64)) + 1ll) * $$CIV13],scale,add);
   659 |          $$CIV13 = $$CIV13 + 1ll;
                } while ((unsigned long long) $$CIV13 < (unsigned long long) *((long long *)(this + 56)));    /* ~102 */
              lab_103:
   656 |        $$CIV1A = $$CIV1A + 1ll;
              } while ((unsigned long long) $$CIV1A < (unsigned long long) $$GIX0);    /* ~101 */
            lab_104:
            lab_105:
   654 |      $$CIV15 = $$CIV15 + 1ll;
            } while ((unsigned long long) $$CIV15 < (unsigned long long) (((*((long long *)(this + 48)) - (long long) ((((int *)(this + 8))[80 / 4] + (((int *)(this + 4))[80 / 4] - ((int *)(this + 4))[72 / 4])) % ((int *)(this + 4))[80 / 4]) * *((long long *)(this + 56))) - 1ll) / ((long long) ((int *)(this + 4))[80 / 4] * *((long long *)(this + 56))) + 1ll));    /* ~87 */
          lab_106:
            goto lab_59;
          lab_58:
            if (!1) goto lab_80;
            if (!((unsigned long long) ((*((long long *)(this + 40)) + ((long long) ((((int *)(this + 8))[100 / 4] + (((int *)(this + 4))[100 / 4] - ((int *)this)[72 / 4])) % ((int *)(this + 4))[100 / 4]) * - *((long long *)(this + 56)) - 1ll)) / ((long long) ((int *)(this + 4))[100 / 4] * *((long long *)(this + 56))) + 1ll) >= 128ull)) goto lab_108;
            if (!1) goto lab_107;
            $$CIV15 = 0ll;
            do {   /* id=9 guarded */ /* ~60 */ 
              /* region = 129 */
              /* bump-normalized */
              $$csx48 = *((long long *)(this + 56)) * $$CIV15;
   656 |      if (!1) goto lab_61;
            lab_61:
              if (!1) goto lab_79;
              if (!1) goto lab_70;
              $$CIV18 = (long long) 0;
   664 |      $$csx49 = (((*((long long *)(this + 40)) - (long long) ((((int *)(this + 8))[100 / 4] + (((int *)(this + 4))[100 / 4] - ((int *)this)[72 / 4])) % ((int *)(this + 4))[100 / 4]) * *((long long *)(this + 56))) - 1ll) / ((long long) ((int *)(this + 4))[100 / 4] * *((long long *)(this + 56))) + (long long) (((unsigned long long) (((*((long long *)(this + 40)) - (long long) ((((int *)(this + 8))[100 / 4] + (((int *)(this + 4))[100 / 4] - ((int *)this)[72 / 4])) % ((int *)(this + 4))[100 / 4]) * *((long long *)(this + 56))) - 1ll) / ((long long) ((int *)(this + 4))[100 / 4] * *((long long *)(this + 56))) + 1ll) % 128ull) * 18446744073709551615ull)) / 128ll + 1ll;
   656 |      do {   /* id=10 guarded */ /* ~62 */ 
                /* region = 128 */
                /* bump-normalized */
                $$GIX0 = 0ll;
                if (!1) goto lab_65;
                $$GIX0 = (long long) 0;
                $$CIV17 = (long long) 0;
   658 |        $$csx4A = $$CIV15 * ((long long) ((int *)(this + 4))[80 / 4] * *((long long *)(this + 56))) + ((long long) ((((int *)(this + 8))[80 / 4] + (((int *)(this + 4))[80 / 4] - ((int *)(this + 4))[72 / 4])) % ((int *)(this + 4))[80 / 4]) * *((long long *)(this + 56)) - (long long) ((((int *)(this + 8))[100 / 4] + (((int *)(this + 4))[100 / 4] - ((int *)this)[72 / 4])) % ((int *)(this + 4))[100 / 4]) * *((long long *)(this + 56)));
   656 |        do {   /* id=11 guarded */ /* ~63 */ 
                  /* region = 127 */
                  /* bump-normalized */
   658 |          if (!(0ll == - ($$CIV18 * 128ll + $$CIV17) * ((long long) ((int *)(this + 4))[100 / 4] * *((long long *)(this + 56))) + $$csx4A)) goto lab_64;
                  ((long long *)&$$StripVector0)[$$GIX0] = $$CIV18 * 128ll + $$CIV17;
                  $$GIX0 = $$GIX0 + (long long) 1;
                lab_64:
   656 |          $$CIV17 = $$CIV17 + 1ll;
                } while ((unsigned long long) $$CIV17 < 128ull);    /* ~63 */
              lab_65:
                if (!((long long) 0 < $$GIX0)) goto lab_69;
                $$SCIX0 = (long long) 0;
                do {   /* id=12 guarded */ /* ~66 */ 
                  /* region = 126 */
                  /* bump-normalized */
   659 |          if (!(0ll < *((long long *)(this + 56)))) goto lab_68;
                  $$CIV13 = 0ll;
                  do {   /* id=13 guarded */ /* ~67 */ 
                    /* region = 125 */
                    /* bump-normalized */
                    /* independent */
   660 |            ((double *)(((char *)*((char * *)(this + 168))  + (8ll * ($$csx48 * *((long long *)(this + 64))) + 8ll * (((long long *)&$$StripVector0)[$$SCIX0] * *((long long *)(this + 56)))))))[(*((long long *)(this + 64)) + 1ll) * $$CIV13] = _fmadd@47(((double *)(((char *)*((char * *)(this + 168))  + (8ll * ($$csx48 * *((long long *)(this + 64))) + 8ll * (((long long *)&$$StripVector0)[$$SCIX0] * *((long long *)(this + 56)))))))[(*((long long *)(this + 64)) + 1ll) * $$CIV13],scale,add);
   659 |            $$CIV13 = $$CIV13 + 1ll;
                  } while ((unsigned long long) $$CIV13 < (unsigned long long) *((long long *)(this + 56)));    /* ~67 */
                lab_68:
   656 |          $$SCIX0 = $$SCIX0 + 1ll;
                } while ($$SCIX0 < $$GIX0);    /* ~66 */
              lab_69:
   664 |        $$CIV18 = $$CIV18 + 1ll;
              } while ((unsigned long long) $$CIV18 < (unsigned long long) $$csx49);    /* ~62 */
            lab_70:
   656 |    lab_79:
   654 |      $$CIV15 = $$CIV15 + 1ll;
            } while ((unsigned long long) $$CIV15 < (unsigned long long) (((*((long long *)(this + 48)) - (long long) ((((int *)(this + 8))[80 / 4] + (((int *)(this + 4))[80 / 4] - ((int *)(this + 4))[72 / 4])) % ((int *)(this + 4))[80 / 4]) * *((long long *)(this + 56))) - 1ll) / ((long long) ((int *)(this + 4))[80 / 4] * *((long long *)(this + 56))) + 1ll));    /* ~60 */
          lab_107:
            goto lab_109;
          lab_108:
            if (!1) goto lab_122;
            $$CIV15 = 0ll;
            do {   /* id=22 guarded */ /* ~110 */ 
              /* region = 130 */
              /* bump-normalized */
              /* independent */
   656 |      if (!1) goto lab_111;
            lab_111:
              if (!1) goto lab_121;
            lab_121:
   654 |      $$CIV15 = $$CIV15 + 1ll;
            } while ((unsigned long long) $$CIV15 < (unsigned long long) (((*((long long *)(this + 48)) - (long long) ((((int *)(this + 8))[80 / 4] + (((int *)(this + 4))[80 / 4] - ((int *)(this + 4))[72 / 4])) % ((int *)(this + 4))[80 / 4]) * *((long long *)(this + 56))) - 1ll) / ((long long) ((int *)(this + 4))[80 / 4] * *((long long *)(this + 56))) + 1ll));    /* ~110 */
          lab_122:
          lab_109:
          lab_80:
          lab_59:
          lab_28:
          lab_29:
          lab_3:
   665 |    return;
          } /* function */ 


   670 |  char DMatrix::get_tp()(DMatrix *this)
          {
   671 |    rstr = (*((char *)((char *)this + 184)) != 0u ? 84u : 78u);
            return rstr;
   673 |  } /* function */ 


   680 |  char * DQRMatrix::DQRMatrix(DMatrix)(char * this, aggr200 A)
          {
            $$PARM.thisB9 = this;
    22 |    *((char * *)((char *)$$PARM.thisB9 + 168)) = NULL;
    23 |    *((char * *)((char *)$$PARM.thisB9 + 176)) = NULL;
    24 |    *((char * *)((char *)$$PARM.thisB9 + 192)) = NULL;
    25 |    $$IRET49 = $$PARM.thisB9;
   680 |    $$PARM.thisB8 = (this + 200);
    22 |    *((char * *)((char *)$$PARM.thisB8 + 168)) = NULL;
    23 |    *((char * *)((char *)$$PARM.thisB8 + 176)) = NULL;
    24 |    *((char * *)((char *)$$PARM.thisB8 + 192)) = NULL;
    25 |    $$IRET48 = $$PARM.thisB8;
   680 |    $$RET2A = DMatrix::get_contig()(&A)->(DMatrix).rns309.;
   688 |    *((aggr200 *)(this + 200)) = $$RET2A;
   689 |    pv_cpy = *((aggr92 *)(this + 72 + 200));
   721 |    QR_2D_pipe(double*, long, long, long, long, pview*, double*, long, double*, double*)(((char * *)(this + 168))[200 / 8],((long long *)(this + 64))[200 / 8],((long long *)(this + 40))[200 / 8],((long long *)(this + 48))[200 / 8],((long long *)(this + 56))[200 / 8],&pv_cpy,NULL,0ll,NULL,NULL)
   724 |    __156 = DMatrix::slice(long, long, long, long)((this + 200),0ll,((long long *)(this + 48))[200 / 8],0ll,((long long *)(this + 48))[200 / 8])->(DMatrix).rns312.;
            $$RET2B = DMatrix::get_contig()(&__156)->(DMatrix).rns314.;
            *((aggr200 *)this) = $$RET2B;
   725 |    DMatrix::zero_lower_tri()(this)
   726 |    DMatrix::zero_upper_tri()((this + 200))
   727 |    DMatrix::diag_scale_add(double, double)((this + 200), 0.0000000000000000E+000, 1.0000000000000000E+000)
   728 |    $$PARM.this9D = (this + 200);
   729 |    $$PARM.this9C = this;
   731 |    rstr = this;
            return rstr;
          } /* function */ 


   680 |  char * DQRMatrix::DQRMatrix(DMatrix)(char * this, aggr200 A)
          {
            $$PARM.thisB7 = this;
    22 |    *((char * *)((char *)$$PARM.thisB7 + 168)) = NULL;
    23 |    *((char * *)((char *)$$PARM.thisB7 + 176)) = NULL;
    24 |    *((char * *)((char *)$$PARM.thisB7 + 192)) = NULL;
    25 |    $$IRET47 = $$PARM.thisB7;
   680 |    $$PARM.thisB6 = (this + 200);
    22 |    *((char * *)((char *)$$PARM.thisB6 + 168)) = NULL;
    23 |    *((char * *)((char *)$$PARM.thisB6 + 176)) = NULL;
    24 |    *((char * *)((char *)$$PARM.thisB6 + 192)) = NULL;
    25 |    $$IRET46 = $$PARM.thisB6;
   680 |    $$RET2C = DMatrix::get_contig()(&A)->(DMatrix).rns325.;
   688 |    *((aggr200 *)(this + 200)) = $$RET2C;
   689 |    pv_cpy = *((aggr92 *)(this + 72 + 200));
   721 |    QR_2D_pipe(double*, long, long, long, long, pview*, double*, long, double*, double*)(((char * *)(this + 168))[200 / 8],((long long *)(this + 64))[200 / 8],((long long *)(this + 40))[200 / 8],((long long *)(this + 48))[200 / 8],((long long *)(this + 56))[200 / 8],&pv_cpy,NULL,0ll,NULL,NULL)
   724 |    __161 = DMatrix::slice(long, long, long, long)((this + 200),0ll,((long long *)(this + 48))[200 / 8],0ll,((long long *)(this + 48))[200 / 8])->(DMatrix).rns328.;
            $$RET2D = DMatrix::get_contig()(&__161)->(DMatrix).rns330.;
            *((aggr200 *)this) = $$RET2D;
   725 |    DMatrix::zero_lower_tri()(this)
   726 |    DMatrix::zero_upper_tri()((this + 200))
   727 |    DMatrix::diag_scale_add(double, double)((this + 200), 0.0000000000000000E+000, 1.0000000000000000E+000)
   728 |    $$PARM.this9B = (this + 200);
   729 |    $$PARM.this9A = this;
   731 |    rstr = this;
            return rstr;
          } /* function */ 


   733 |  char * DQRMatrix::~DQRMatrix()(char * this)
          {
   734 |    $$PARM.this96 = (this + 200);
    34 |    free(*((char * *)((char *)$$PARM.this96 + 176)))
    35 |    if (!(*((char * *)((char *)$$PARM.this96 + 192)) != NULL)) goto lab_3;
            free(*((char * *)((char *)$$PARM.this96 + 192)))
          lab_3:
   735 |    $$PARM.this95 = this;
    34 |    free(*((char * *)((char *)$$PARM.this95 + 176)))
    35 |    if (!(*((char * *)((char *)$$PARM.this95 + 192)) != NULL)) goto lab_1;
            free(*((char * *)((char *)$$PARM.this95 + 192)))
          lab_1:
   736 |    rstr = this;
            return rstr;
          } /* function */ 


   733 |  char * DQRMatrix::~DQRMatrix()(char * this)
          {
   734 |    $$PARM.this97 = (this + 200);
    34 |    free(*((char * *)((char *)$$PARM.this97 + 176)))
    35 |    if (!(*((char * *)((char *)$$PARM.this97 + 192)) != NULL)) goto lab_3;
            free(*((char * *)((char *)$$PARM.this97 + 192)))
          lab_3:
   735 |    $$PARM.this94 = this;
    34 |    free(*((char * *)((char *)$$PARM.this94 + 176)))
    35 |    if (!(*((char * *)((char *)$$PARM.this94 + 192)) != NULL)) goto lab_1;
            free(*((char * *)((char *)$$PARM.this94 + 192)))
          lab_1:
   736 |    rstr = this;
            return rstr;
          } /* function */ 


   742 |  aggr200 DQRMatrix::compute_invT()(DQRMatrix *this)
          {
   743 |    $$PARM.this93 = this;
   490 |    $$SFX19 = *((long long *)((char *)$$PARM.this93 + 40));
            $$SFX1A = *((long long *)((char *)$$PARM.this93 + 48));
            $$SFX1B = *((long long *)((char *)$$PARM.this93 + 56));
            $$PARM.this44 = $$PARM.this93;
   195 |    $$IRET36 = ((*((long long *)($$PARM.this44 + 40)) / *((long long *)($$PARM.this44 + 56))) / (long long) ((int *)($$PARM.this44 + 4))[100 / 4] + (long long) ((*((long long *)($$PARM.this44 + 40)) / *((long long *)($$PARM.this44 + 56))) % (long long) ((int *)($$PARM.this44 + 4))[100 / 4] > (long long) ((((int *)($$PARM.this44 + 8))[100 / 4] + (((int *)($$PARM.this44 + 4))[100 / 4] - ((int *)$$PARM.this44)[72 / 4])) % ((int *)($$PARM.this44 + 4))[100 / 4]))) * *((long long *)($$PARM.this44 + 56));
   490 |    $$RET29 = $$IRET36;
            $$PARM.this77 = &ctg;
            $$PARM.nrow_78 = $$SFX19;
            $$PARM.ncol_79 = $$SFX1A;
            $$PARM.b_7A = $$SFX1B;
            $$PARM.pv_7B = ($$PARM.this93 + 72);
            $$PARM.lda_7C = $$RET29;
            $$PARM.root_data_7D = NULL;
            $$PARM.data_7E = NULL;
            $$PARM.is_transp_7F = *((char *)((char *)$$PARM.this93 + 184));
    61 |    *((long long *)($$PARM.this77 + 40)) = $$PARM.nrow_78;
    62 |    *((long long *)($$PARM.this77 + 48)) = $$PARM.ncol_79;
    64 |    *((long long *)($$PARM.this77 + 56)) = $$PARM.b_7A;
    65 |    *((aggr92 *)($$PARM.this77 + 72)) = *$$PARM.pv_7B;
    66 |    *((char *)($$PARM.this77 + 184)) = $$PARM.is_transp_7F;
    67 |    if (!($$PARM.lda_7C != 0ll)) goto lab_4;
    68 |    *((long long *)($$PARM.this77 + 64)) = $$PARM.lda_7C;
            goto lab_5;
          lab_4:
    70 |    $$PARM.this33 = $$PARM.this77;
   195 |    $$IRET25 = ((*((long long *)($$PARM.this33 + 40)) / *((long long *)($$PARM.this33 + 56))) / (long long) ((int *)($$PARM.this33 + 4))[100 / 4] + (long long) ((*((long long *)($$PARM.this33 + 40)) / *((long long *)($$PARM.this33 + 56))) % (long long) ((int *)($$PARM.this33 + 4))[100 / 4] > (long long) ((((int *)($$PARM.this33 + 8))[100 / 4] + (((int *)($$PARM.this33 + 4))[100 / 4] - ((int *)$$PARM.this33)[72 / 4])) % ((int *)($$PARM.this33 + 4))[100 / 4]))) * *((long long *)($$PARM.this33 + 56));
    70 |    $$RET8 = $$IRET25;
            *((long long *)($$PARM.this77 + 64)) = $$RET8;
          lab_5:
    71 |    if (!($$PARM.data_7E == NULL)) goto lab_7;
            $$PARM.this28 = $$PARM.this77;
   202 |    $$IRET1A = ((*((long long *)($$PARM.this28 + 48)) / *((long long *)($$PARM.this28 + 56))) / (long long) ((int *)($$PARM.this28 + 4))[80 / 4] + (long long) ((*((long long *)($$PARM.this28 + 48)) / *((long long *)($$PARM.this28 + 56))) % (long long) ((int *)($$PARM.this28 + 4))[80 / 4] > (long long) ((((int *)($$PARM.this28 + 8))[80 / 4] + (((int *)($$PARM.this28 + 4))[80 / 4] - ((int *)($$PARM.this28 + 4))[72 / 4])) % ((int *)($$PARM.this28 + 4))[80 / 4]))) * *((long long *)($$PARM.this28 + 56));
    71 |    $$RET9 = (unsigned long long) $$IRET1A;
            $$RETA = malloc(8ull * ((unsigned long long) *((long long *)($$PARM.this77 + 64)) * $$RET9));
    72 |    *((char * *)($$PARM.this77 + 168)) = $$RETA;
    73 |    *((char * *)($$PARM.this77 + 176)) = $$RETA;
    75 |    goto lab_9;
          lab_7:
    76 |    *((char * *)($$PARM.this77 + 168)) = $$PARM.data_7E;
    77 |    *((char * *)($$PARM.this77 + 176)) = $$PARM.root_data_7D;
    79 |  lab_9:
    80 |    *((char * *)($$PARM.this77 + 192)) = NULL;
    81 |    cdescinit(int*, int, int, int, int, int, int, int, int, int*)($$PARM.this77,(int) *((long long *)($$PARM.this77 + 40)),(int) *((long long *)($$PARM.this77 + 48)),(int) *((long long *)($$PARM.this77 + 56)),(int) *((long long *)($$PARM.this77 + 56)),((int *)$$PARM.this77)[72 / 4],((int *)($$PARM.this77 + 4))[72 / 4],((int *)($$PARM.this77 + 88))[72 / 4],(int) *((long long *)($$PARM.this77 + 64)),&info)
    86 |    $$IRET41 = $$PARM.this77;
   491 |    $$PARM.name_1B = *((char * *)((char *)$$PARM.this93 + 192));
   124 |    if (!($$PARM.name_1B != NULL)) goto lab_11;
            $$RET10 = __builtin_strlen($$PARM.name_1B);
            $$RET11 = malloc($$RET10 + 1ull);
   125 |    &ctg->(DMatrix).name@c0.rns79.$$161$$241 = $$RET11;
   126 |    __builtin_strcpy($$RET11,$$PARM.name_1B);
   127 |  lab_11:
   492 |    $$IRET45 = ctg;
   743 |    T = &$$IRET45->(DMatrix).rns344.;
   744 |    $$PARM.name_19 = "T";
   124 |    if (!($$PARM.name_19 != NULL)) goto lab_1;
            $$RET10 = __builtin_strlen($$PARM.name_19);
            $$RET11 = malloc($$RET10 + 1ull);
   125 |    &T->(DMatrix).name@c0.rns79.$$242 = $$RET11;
   126 |    __builtin_strcpy($$RET11,$$PARM.name_19);
   127 |  lab_1:
   745 |    cpdsyrk(DMatrix, double, DMatrix, double)(*((aggr200 *)((char *)this + 200)), 1.0000000000000000E+000,T, 0.0000000000000000E+000)
   746 |    DMatrix::zero_upper_tri()(&T)
   747 |    DMatrix::diag_scale_add(double, double)(&T, 5.0000000000000000E-001, 0.0000000000000000E+000)
   748 |    rstr = T;
            return rstr;
   749 |  } /* function */ 


   754 |  void cpdgemm(DMatrix, DMatrix, double, DMatrix, double)(aggr200 A, aggr200 B, double alpha, aggr200 C, double beta)
   758 |  {
            __es.__l@0 = 0;
            __es.__t@8 = &__fsm_tab;
            __es.__this@10 = NULL;
            __es.__i@18 = 0;
            guard___func__9 = 1;
   760 |    __builtin_strcpy(&pname,"cpdgemm ");
   761 |    if (!(C.name@c0 != NULL)) goto lab_2;
   762 |    __builtin_strcat(&pname,C.name@c0);
            goto lab_4;
          lab_2:
   764 |    __builtin_strcat(&pname,"?");
          lab_4:
   765 |    __builtin_strcat(&pname," <- ");
   766 |    if (!(A.name@c0 != NULL)) goto lab_5;
   767 |    __builtin_strcat(&pname,A.name@c0);
            goto lab_7;
          lab_5:
   769 |    __builtin_strcat(&pname,"?");
          lab_7:
   770 |    __builtin_strcat(&pname," * ");
   771 |    if (!(B.name@c0 != NULL)) goto lab_8;
   772 |    __builtin_strcat(&pname,B.name@c0);
            goto lab_10;
          lab_8:
   774 |    __builtin_strcat(&pname,"?");
          lab_10:
   775 |    CTF_Timer::CTF_Timer(char const*)(&tmr,&pname);
            __es.__c4@3 = 1u;
   776 |    CTF_Timer::start()(&tmr)
   778 |    if (0 == (int) C.is_transp@b8) goto lab_18;
            __assert_fail("C.is_transp == false","dmatrix.cxx",778u,&__func__)
            return;
          lab_18:
   780 |    k.rnn38 = (A.is_transp@b8 != 0u ? A.nrow@28 : A.ncol@30);
   671 |    $$IRETE = (A.is_transp@b8 != 0u ? 84u : 78u);
   783 |    $$SFX1C = $$IRETE;
   671 |    $$IRETF = (&B->(DMatrix).is_transp@b8.rns305.$$255 != 0u ? 84u : 78u);
   783 |    $$SFX1D = $$IRETF;
            $$SFX1E = (int) C.nrow@28;
            $$SFX1F = (int) C.ncol@30;
   135 |    $$IRET8 = &A->(DMatrix).data@a8.rns81.$$256;
   783 |    $$RET2E = $$IRET8;
   135 |    $$IRETD = &B->(DMatrix).data@a8.rns81.$$257;
   783 |    $$RET2F = $$IRETD;
   135 |    $$IRETC = &C->(DMatrix).data@a8.rns81.$$258;
   783 |    $$RET30 = $$IRETC;
            cpdgemm(char, char, int, int, int, double, double*, int, int, int*, double*, int, int, int*, double, double*, int, int, int*)($$SFX1C,$$SFX1D,$$SFX1E,$$SFX1F,(int) k.rnn38,alpha,$$RET2E,1,1,&A.desc@0,$$RET2F,1,1,&B.desc@0,beta,$$RET30,1,1,&C.desc@0)
   785 |    CTF_Timer::stop()(&tmr)
   786 |    __es.__c4@3 = 0u;
            CTF_Timer::~CTF_Timer()(&tmr);
            return;
          } /* function */ 


   791 |  void cpdsyrk(DMatrix, double, DMatrix, double)(aggr200 A, double alpha, aggr200 C, double beta)
   794 |  {
            __es.__l@0 = 0;
            __es.__t@8 = &__fsm_tab;
            __es.__this@10 = NULL;
            __es.__i@18 = 0;
            guard___func__8 = 1;
   796 |    __builtin_strcpy(&pname,"cpdsyrk ");
   797 |    if (!(C.name@c0 != NULL)) goto lab_2;
   798 |    __builtin_strcat(&pname,C.name@c0);
            goto lab_4;
          lab_2:
   800 |    __builtin_strcat(&pname,"?");
          lab_4:
   801 |    __builtin_strcat(&pname,"<-");
   802 |    if (!(A.name@c0 != NULL)) goto lab_5;
   803 |    __builtin_strcat(&pname,A.name@c0);
            goto lab_7;
          lab_5:
   805 |    __builtin_strcat(&pname,"?");
          lab_7:
   806 |    __builtin_strcat(&pname,"^2");
   807 |    CTF_Timer::CTF_Timer(char const*)(&tmr,&pname);
            __es.__c4@3 = 1u;
   808 |    CTF_Timer::start()(&tmr)
   810 |    if (0 == (int) C.is_transp@b8) goto lab_15;
            __assert_fail("C.is_transp == false","dmatrix.cxx",810u,&__func__)
            return;
          lab_15:
   814 |    if (!(A.is_transp@b8 != 0u)) goto lab_26;
            __assert_fail("!A.is_transp","dmatrix.cxx",814u,&__func__)
            return;
          lab_26:
   812 |    K = (int) A.nrow@28;
   815 |    $$SFX20 = (int) C.nrow@28;
   135 |    $$IRET3 = &A->(DMatrix).data@a8.rns81.$$273;
   815 |    $$RET31 = $$IRET3;
   135 |    $$IRET7 = &C->(DMatrix).data@a8.rns81.$$274;
   815 |    $$RET32 = $$IRET7;
            cpdsyrk(char, char, int, int, double, double const*, int, int, int*, double, double*, int, int, int*)(76u,84u,$$SFX20,K,alpha,$$RET31,1,1,&A.desc@0,beta,$$RET32,1,1,&C.desc@0)
   817 |    CTF_Timer::stop()(&tmr)
   818 |    __es.__c4@3 = 0u;
            CTF_Timer::~CTF_Timer()(&tmr);
            return;
          } /* function */ 


   823 |  void cpdtrsm(DMatrix, double, DMatrix)(aggr200 A, double alpha, aggr200 B)
   825 |  {
            __es.__l@0 = 0;
            __es.__t@8 = &__fsm_tab;
            __es.__this@10 = NULL;
            __es.__i@18 = 0;
            guard___func__6 = 1;
   827 |    __builtin_strcpy(&pname,"cpdtrsm ");
   828 |    if (!(A.name@c0 != NULL)) goto lab_2;
   829 |    __builtin_strcat(&pname,A.name@c0);
          lab_2:
   830 |    __builtin_strcat(&pname," ");
   831 |    if (!(B.name@c0 != NULL)) goto lab_4;
   832 |    __builtin_strcat(&pname,B.name@c0);
          lab_4:
   833 |    CTF_Timer::CTF_Timer(char const*)(&tmr,&pname);
            __es.__c4@3 = 1u;
   834 |    CTF_Timer::start()(&tmr)
   836 |    if (0 == (int) A.is_transp@b8) goto lab_13;
            __assert_fail("A.is_transp == false","dmatrix.cxx",836u,&__func__)
            return;
          lab_13:
   837 |    if (0 == (int) B.is_transp@b8) goto lab_21;
            __assert_fail("B.is_transp == false","dmatrix.cxx",837u,&__func__)
            return;
          lab_21:
   838 |    $$SFX21 = (int) B.nrow@28;
            $$SFX22 = (int) B.ncol@30;
   135 |    $$IRET9 = &A->(DMatrix).data@a8.rns81.$$286;
   838 |    $$RET33 = $$IRET9;
   135 |    $$IRET2 = &B->(DMatrix).data@a8.rns81.$$287;
   838 |    $$RET34 = $$IRET2;
            cpdtrsm(char, char, char, char, int, int, double, double const*, int, int, int*, double*, int, int, int*)(82u,76u,78u,78u,$$SFX21,$$SFX22,alpha,$$RET33,1,1,&A.desc@0,$$RET34,1,1,&B.desc@0)
   840 |    CTF_Timer::stop()(&tmr)
   841 |    __es.__c4@3 = 0u;
            CTF_Timer::~CTF_Timer()(&tmr);
            return;
          } /* function */ 


   460 |  void void lda_cpy<double>(int, int, int, int, double const*, double*)(int nrow, int ncol, int lda_A, int lda_B, char * A, char * B)
   462 |  {
   463 |    if (!(lda_A == nrow)) goto lab_1;
            if (!(lda_B == nrow)) goto lab_1;
   464 |    __builtin_memcpy(B,A,(unsigned long long) (nrow * ncol) * 8ull);
   465 |    goto lab_4;
          lab_1:
   467 |    if (!(0 < ncol)) goto lab_7;
            $$CIV16 = 0ll;
            do {   /* id=1 guarded */ /* ~5 */ 
              /* region = 13 */
              /* bump-normalized */
   468 |      __builtin_memcpy(((char *)B  + ((long long) lda_B * $$CIV16) * 8ll),((char *)A  + ((long long) lda_A * $$CIV16) * 8ll),(unsigned long long) nrow * 8ull);
   467 |      $$CIV16 = $$CIV16 + 1ll;
            } while ((unsigned long long) $$CIV16 < (unsigned long long) ((long long) ncol));    /* ~5 */
          lab_7:
   470 |  lab_4:
   471 |    return;
          } /* function */ 


          void __sinit65535()()
          {
    72 |    std::ios_base::Init::Init()(&__ioinit);
            __cxa_atexit(&__srterm__0(),NULL,&__dso_handle);
            return;
          } /* function */ 


          void __srterm__0()()
          {
    72 |    std::ios_base::Init::~Init()(&__ioinit);
            return;
          } /* function */ 


